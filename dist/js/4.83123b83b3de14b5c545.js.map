{"version":3,"sources":["webpack:///js/4.83123b83b3de14b5c545.js","webpack:///./src/views/charts/line.vue","webpack:///./~/.3.4.4@zrender/lib/core/util.js?c5ec***","webpack:///./~/.3.4.0@echarts/lib/echarts.js?afc0***","webpack:///./~/.3.4.0@echarts/lib/util/graphic.js?7369***","webpack:///./~/.3.4.0@echarts/lib/util/number.js?14c3***","webpack:///./~/.3.4.4@zrender/lib/core/vector.js?e99b***","webpack:///./~/.3.4.4@zrender/lib/graphic/Path.js?4339***","webpack:///./~/.3.4.4@zrender/lib/core/env.js?8774***","webpack:///./~/.3.4.0@echarts/lib/util/format.js?c60a***","webpack:///./~/.3.4.0@echarts/lib/util/model.js?41e4***","webpack:///./~/.3.4.4@zrender/lib/core/BoundingRect.js?4c11***","webpack:///./~/.3.4.0@echarts/lib/model/Model.js?26df***","webpack:///./~/.3.4.0@echarts/lib/util/clazz.js?830d***","webpack:///./~/.3.4.0@echarts/lib/model/Component.js?c442***","webpack:///./~/.3.4.0@echarts/lib/util/layout.js?353c***","webpack:///./~/.3.4.4@zrender/lib/core/curve.js?1fb3***","webpack:///./~/.3.4.4@zrender/lib/tool/color.js?52a3***","webpack:///./~/.3.4.4@zrender/lib/mixin/Eventful.js?baa1***","webpack:///./~/.3.4.4@zrender/lib/contain/text.js?ea0d***","webpack:///./~/.3.4.4@zrender/lib/core/event.js?054a***","webpack:///./~/.3.4.0@echarts/lib/scale/Scale.js?6485***","webpack:///./~/.3.4.4@zrender/lib/config.js?db81***","webpack:///./~/.3.4.4@zrender/lib/container/Group.js?f6e2***","webpack:///./~/.3.4.4@zrender/lib/core/PathProxy.js?7e19***","webpack:///./~/.3.4.4@zrender/lib/core/matrix.js?8e8e***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/makeStyleMapper.js?4163***","webpack:///./~/.3.4.0@echarts/lib/CoordinateSystem.js?ed45***","webpack:///./~/.3.4.0@echarts/lib/coord/axisHelper.js?3f68***","webpack:///./~/.3.4.0@echarts/lib/scale/Interval.js?7625***","webpack:///./~/.3.4.0@echarts/lib/util/component.js?6068***","webpack:///./~/.3.4.4@zrender/lib/core/timsort.js?55fd***","webpack:///./~/.3.4.4@zrender/lib/graphic/Displayable.js?d005***","webpack:///./~/.3.4.4@zrender/lib/graphic/Gradient.js?3df8***","webpack:///./~/.3.4.0@echarts/lib/model/Series.js?f756***","webpack:///./~/.3.4.0@echarts/lib/data/List.js?9d25***","webpack:///./~/.3.4.0@echarts/lib/chart/helper/Symbol.js?2961***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/AxisModel.js?248c***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/colorPalette.js?97d1***","webpack:///./~/.3.4.0@echarts/lib/util/symbol.js?6e4b***","webpack:///./~/.3.4.0@echarts/lib/view/Chart.js?9687***","webpack:///./~/.3.4.4@zrender/lib/Element.js?b8ce***","webpack:///./~/.3.4.4@zrender/lib/animation/Animator.js?5e27***","webpack:///./~/.3.4.4@zrender/lib/animation/requestAnimationFrame.js?14c5***","webpack:///./~/.3.4.4@zrender/lib/contain/util.js?5ffc***","webpack:///./~/.3.4.4@zrender/lib/core/LRU.js?f394***","webpack:///./~/.3.4.4@zrender/lib/core/guid.js?dc27***","webpack:///./~/.3.4.4@zrender/lib/core/log.js?1233***","webpack:///./~/.3.4.4@zrender/lib/graphic/Image.js?3399***","webpack:///./~/.3.4.4@zrender/lib/graphic/Pattern.js?ca8f***","webpack:///./~/.3.4.4@zrender/lib/graphic/Style.js?d39b***","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/poly.js?8d85***","webpack:///./~/.3.4.0@echarts/lib/chart/helper/createListFromArray.js?21fa***","webpack:///./~/.3.4.0@echarts/lib/component/grid.js?edb6***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Grid.js?b440***","webpack:///./~/.3.4.0@echarts/lib/util/throttle.js?bead***","webpack:///./~/.3.4.4@zrender/lib/graphic/LinearGradient.js?2fda***","webpack:///./~/.3.4.0@echarts/lib/chart/helper/SymbolDraw.js?0668***","webpack:///./~/.3.4.0@echarts/lib/component/tooltip.js?58ab***","webpack:///./~/.3.4.0@echarts/lib/view/Component.js?9ca3***","webpack:///./~/.3.4.0@echarts/lib/ExtensionAPI.js?b0da***","webpack:///./~/.3.4.0@echarts/lib/chart/line.js?af9e***","webpack:///./~/.3.4.0@echarts/lib/chart/line/LineSeries.js?477c***","webpack:///./~/.3.4.0@echarts/lib/chart/line/LineView.js?c636***","webpack:///./~/.3.4.0@echarts/lib/chart/line/lineAnimationDiff.js?3b53***","webpack:///./~/.3.4.0@echarts/lib/chart/line/poly.js?77a6***","webpack:///./~/.3.4.0@echarts/lib/component/axis.js?628a***","webpack:///./~/.3.4.0@echarts/lib/component/axis/AxisBuilder.js?d8a3***","webpack:///./~/.3.4.0@echarts/lib/component/axis/AxisView.js?8ef6***","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipContent.js?552d***","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipModel.js?fe30***","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipView.js?59f4***","webpack:///./~/.3.4.0@echarts/lib/coord/Axis.js?ea59***","webpack:///./~/.3.4.0@echarts/lib/coord/axisDefault.js?519c***","webpack:///./~/.3.4.0@echarts/lib/coord/axisModelCommonMixin.js?f61b***","webpack:///./~/.3.4.0@echarts/lib/coord/axisModelCreator.js?348d***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Axis2D.js?78f8***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian.js?4c7a***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js?3e95***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/GridModel.js?e75b***","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js?72b4***","webpack:///./~/.3.4.0@echarts/lib/data/DataDiffer.js?0961***","webpack:///./~/.3.4.0@echarts/lib/data/helper/completeDimensions.js?1905***","webpack:///./~/.3.4.0@echarts/lib/layout/points.js?1cf5***","webpack:///./~/.3.4.0@echarts/lib/loading/default.js?acbb***","webpack:///./~/.3.4.0@echarts/lib/model/Global.js?a49e***","webpack:///./~/.3.4.0@echarts/lib/model/OptionManager.js?8e82***","webpack:///./~/.3.4.0@echarts/lib/model/globalDefault.js?13fc***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/areaStyle.js?7a36***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/boxLayout.js?3ebe***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/itemStyle.js?f2b8***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/lineStyle.js?cdc8***","webpack:///./~/.3.4.0@echarts/lib/model/mixin/textStyle.js?1c28***","webpack:///./~/.3.4.0@echarts/lib/preprocessor/backwardCompat.js?6de0***","webpack:///./~/.3.4.0@echarts/lib/preprocessor/helper/compatStyle.js?5865***","webpack:///./~/.3.4.0@echarts/lib/processor/dataSample.js?0e3b***","webpack:///./~/.3.4.0@echarts/lib/scale/Log.js?90fd***","webpack:///./~/.3.4.0@echarts/lib/scale/Ordinal.js?2978***","webpack:///./~/.3.4.0@echarts/lib/scale/Time.js?35ee***","webpack:///./~/.3.4.0@echarts/lib/visual/seriesColor.js?688f***","webpack:///./~/.3.4.0@echarts/lib/visual/symbol.js?fb54***","webpack:///./~/.3.4.4@zrender/lib/Handler.js?ba7d***","webpack:///./~/.3.4.4@zrender/lib/Layer.js?887f***","webpack:///./~/.3.4.4@zrender/lib/Painter.js?096c***","webpack:///./~/.3.4.4@zrender/lib/Storage.js?a9fe***","webpack:///./~/.3.4.4@zrender/lib/animation/Animation.js?5647***","webpack:///./~/.3.4.4@zrender/lib/animation/Clip.js?a974***","webpack:///./~/.3.4.4@zrender/lib/animation/easing.js?2330***","webpack:///./~/.3.4.4@zrender/lib/contain/arc.js?e652***","webpack:///./~/.3.4.4@zrender/lib/contain/cubic.js?f25e***","webpack:///./~/.3.4.4@zrender/lib/contain/line.js?81f1***","webpack:///./~/.3.4.4@zrender/lib/contain/path.js?3d23***","webpack:///./~/.3.4.4@zrender/lib/contain/quadratic.js?845a***","webpack:///./~/.3.4.4@zrender/lib/contain/windingLine.js?3ef0***","webpack:///./~/.3.4.4@zrender/lib/core/GestureMgr.js?7d30***","webpack:///./~/.3.4.4@zrender/lib/core/bbox.js?1af2***","webpack:///./~/.3.4.4@zrender/lib/dom/HandlerProxy.js?22ea***","webpack:///./~/.3.4.4@zrender/lib/graphic/CompoundPath.js?2286***","webpack:///./~/.3.4.4@zrender/lib/graphic/RadialGradient.js?b9d4***","webpack:///./~/.3.4.4@zrender/lib/graphic/Text.js?05ef***","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/roundRect.js?9d7f***","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/smoothBezier.js?7e17***","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/smoothSpline.js?d502***","webpack:///./~/.3.4.4@zrender/lib/graphic/mixin/RectText.js?38cc***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Arc.js?0a2b***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/BezierCurve.js?fd8a***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Circle.js?e612***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Line.js?ca3e***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Polygon.js?8825***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Polyline.js?f4f7***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Rect.js?e1d2***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Ring.js?35d7***","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Sector.js?c983***","webpack:///./~/.3.4.4@zrender/lib/mixin/Animatable.js?eced***","webpack:///./~/.3.4.4@zrender/lib/mixin/Draggable.js?48f6***","webpack:///./~/.3.4.4@zrender/lib/mixin/Transformable.js?fbd4***","webpack:///./~/.3.4.4@zrender/lib/tool/path.js?7c1c***","webpack:///./~/.3.4.4@zrender/lib/tool/transformPath.js?c50f***","webpack:///./~/.3.4.4@zrender/lib/zrender.js?0379***","webpack:///./~/.3.4.0@echarts/lib/component/title.js?65d5**","webpack:///./~/.3.4.0@echarts/lib/component/helper/listComponent.js?7963","webpack:///./~/.3.4.0@echarts/lib/component/legend.js?b30b","webpack:///./~/.3.4.0@echarts/lib/component/legend/LegendModel.js?7b13","webpack:///./~/.3.4.0@echarts/lib/component/legend/LegendView.js?6595","webpack:///./~/.3.4.0@echarts/lib/component/legend/legendAction.js?6063","webpack:///./~/.3.4.0@echarts/lib/component/legend/legendFilter.js?3452","webpack:///./src/views/charts/line.vue?a469","webpack:///./src/components/Charts/lineMarker.vue","webpack:///./src/views/charts/line.vue?6128","webpack:///./src/components/Charts/lineMarker.vue?315c","webpack:///./src/views/charts/line.vue?d7f9","webpack:///lineMarker.vue","webpack:///line.vue?e758"],"names":["webpackJsonp","300","module","exports","__webpack_require__","Component","325","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","HASH_MAP_PREFIX","get","set","prefixedKey","removeKey","noop","326","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","STATUS_PENDING","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","327","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","rotation","elMap1","oldEl","newProp","328","_trim","str","RADIAN_EPSILON","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","329","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","330","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","331","detect","ua","os","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","navigator","userAgent","332","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","333","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","334","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","335","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","336","checkClassType","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","host","hasOwn","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","337","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","338","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","339","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","340","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","l","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","341","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","342","getTextWidth","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","343","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","344","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","345","config","debugMode","346","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","347","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","348","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","349","excludes","propName","350","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","351","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","352","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","353","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","354","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","355","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","356","Gradient","addColorStop","357","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","getDimensionInfo","formattedValue","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","358","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","transferProperties","_storage","originalStorage","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","359","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","opacity","valueDim","onEmphasis","ratio","onNormal","fadeOut","360","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","361","colorIdx","colorNameMap","colorPalette","362","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","363","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","364","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","365","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","366","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","367","PI2","normalizeRadian","368","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","369","idStart","370","371","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","372","repeat","createPattern","373","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","374","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","376","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","377","gridModel","getRect","xAxis","yAxis","grid","378","isAxisUsedInTheGrid","axisModel","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","379","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","381","globalCoord","383","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","384","385","componentProto","386","chartInstance","echartsAPIList","387","388","legendHoverLink","clipOverflow","lineStyle","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","389","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","390","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","391","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","392","393","makeAxisEventDataBase","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","rawTick","394","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","395","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","tooltipModel","transitionDuration","padding","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","396","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderColor","borderRadius","borderWidth","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","397","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","moveSingleLine","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","398","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","399","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","400","rangeStart","rangeEnd","setRange","401","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","402","axisLabelInterval","coordExtent","_labelInterval","403","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","404","axisX","axisY","dataToPoints","405","containLabel","406","407","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","408","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","409","eachSeriesByType","410","maskColor","mask","labelRect","411","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","findComponents","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","412","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","413","platform","fontFamily","fontStyle","fontWeight","animationDuration","animationThreshold","progressiveThreshold","414","415","416","getBorderLineDash","lineType","417","getLineDash","dotSize","dashSize","418","gTextStyleModel","419","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","420","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","421","samplers","average","nearest","indexSampler","sampler","422","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","423","rank","424","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","425","encodeColor","colorAccessPath","426","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","427","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","428","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","429","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","displayList","whIdx","wh","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","430","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","431","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","432","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","433","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","434","_l","atan2","435","436","_a","_b","437","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","438","439","440","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","441","extremity","fromPoints","xDim","yDim","tx","ty","442","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","TOUCH_CLICK_DELAY","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","443","paths","_updatePathDirty","444","445","strokeText","fillText","446","r1","r2","r3","r4","total","447","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","448","interpolate","segs","w2","w3","449","maxValue","lastIndexOf","align","baseline","shadowColor","textShadowColor","450","unitX","unitY","451","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","452","453","454","455","456","roundRectHelper","457","458","shadowTemp","modified","459","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","460","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","461","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","462","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","463","nPoint","mathAtan2","464","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","471","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","522","positionGroup","addBackground","523","524","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","_availableNames","unSelect","toggleSelected","itemWidth","itemHeight","inactiveColor","selectedMode","525","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","legendSymbolType","_createItem","itemGroup","itemIcon","legendGlobalTooltipModel","textX","hitRect","legendIndex","526","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","527","legendModels","550","sources","mappings","file","sourcesContent","sourceRoot","607","623","_vm","$createElement","_c","_self","staticClass","staticStyle","_v","attrs","staticRenderFns","632","class","className","675","locals","741","defineProperty","default","mounted","initChart","methods","getElementById","title","legend","icon","754","_interopRequireDefault","__esModule","_lineMarker","_lineMarker2","lineMarker"],"mappings":"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G,KAAKqK,MAAQyM,EAAQxS,KAAKhH,SAAS82G,eAAep0G,KuJ3j/BxDgE,KvJ6j/BMhE,KAAKqK,MAAM8F,WACTgB,gBuJ5j/BR,UvJ6j/BQkjG,OACE5pF,KuJ5j/BV,MvJ6j/BU7J,WACE2rE,WuJ5j/BZ,SvJ6j/BYhV,SuJ5j/BZ,GvJ6j/BY79D,MuJ3j/BZ,WvJ6j/BUrH,KuJ3j/BV,MvJ6j/BQ0iE,SACExrE,QuJ5j/BV,OvJ6j/BU4wE,aACEvS,WACEluD,MuJzj/Bd,avJ6j/BQ46F,QACEC,KuJ5j/BV,OvJ6j/BU9D,UuJ5j/BV,GvJ6j/BUC,WuJ5j/BV,EvJ6j/BU9B,QuJ5j/BV,GvJ6j/BUpwG,MAAO,KAAM,KuJ5j/BvB,MvJ6j/BU+T,MuJ5j/BV,KvJ6j/BUqO,WACE22D,SuJ5j/BZ,GvJ6j/BY79D,MuJ1j/BZ,YvJ6j/BQunD,MACE5uD,KuJ5j/BV,KvJ6j/BUE,MuJ5j/BV,KvJ6j/BUC,OuJ5j/BV,KvJ6j/BUwxE,cuJ3j/BV,GvJ6j/BQjjB,QACE5gE,KuJ5j/BV,WvJ6j/BUo8C,auJ5j/BV,EvJ6j/BU61B,UACExK,WACEluD,MuJ1j/Bd,YvJ6j/BUlb,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QuJ3j/B3G,WvJ6j/BQwiE,QACE7gE,KuJ5j/BV,QvJ6j/BUmV,KuJ5j/BV,QvJ6j/BUk9D,UACEve,MuJ3j/BZ,GvJ6j/BUme,UACExK,WACEluD,MuJ1j/Bd,YvJ6j/BUu5D,WACE53C,OuJ5j/BZ,GvJ6j/BYza,WACE22D,SuJ1j/Bd,KvJ6j/BUuK,WACEla,WACEluD,MuJzj/Bd,cvJ6j/BQ9N,SACE0J,KuJ5j/BV,KvJ6j/BUnV,KuJ5j/BV,OvJ6j/BU09D,QuJ5j/BV,EvJ6j/BUiK,OuJ5j/BV,SvJ6j/BUla,WuJ5j/BV,EvJ6j/BUma,YuJ5j/BV,EvJ6j/BUH,WACE33C,QACExrB,MuJ1j/Bd,IvJ6j/BUqyE,WACE7mD,QACEvW,MAAO,GAAI5C,GAAQ3H,QAAQ+O,eAAe,EAAG,EAAG,EAAG,IACjDi6B,OuJ5j/BhB,EvJ6j/BgBz+B,MuJ5j/BhB,4BvJ8j/BgBy+B,OuJ5j/BhB,GvJ6j/BgBz+B,MuJ5j/BhB,2BACA,GvJ6j/Bc+uF,YuJ5j/Bd,qBvJ6j/BcnsC,WuJ1j/Bd,KvJ6j/BU/M,WACEt/B,QACEvW,MuJ5j/Bd,kBvJ6j/BcqgE,YuJ5j/Bd,uBvJ6j/BcE,YuJzj/Bd,KvJ6j/BUz7E,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IuJ5j/BnE,OvJ8j/BU8W,KuJ5j/BV,KvJ6j/BUnV,KuJ5j/BV,OvJ6j/BU09D,QuJ5j/BV,EvJ6j/BUiK,OuJ5j/BV,SvJ6j/BUla,WuJ5j/BV,EvJ6j/BUma,YuJ5j/BV,EvJ6j/BUH,WACE33C,QACExrB,MuJ1j/Bd,IvJ6j/BUqyE,WACE7mD,QACEvW,MAAO,GAAI5C,GAAQ3H,QAAQ+O,eAAe,EAAG,EAAG,EAAG,IACjDi6B,OuJ5j/BhB,EvJ6j/BgBz+B,MuJ5j/BhB,2BvJ8j/BgBy+B,OuJ5j/BhB,GvJ6j/BgBz+B,MuJ5j/BhB,0BACA,GvJ6j/Bc+uF,YuJ5j/Bd,qBvJ6j/BcnsC,WuJ1j/Bd,KvJ6j/BU/M,WACEt/B,QACEvW,MuJ5j/Bd,iBvJ6j/BcqgE,YuJ5j/Bd,sBvJ6j/BcE,YuJzj/Bd,KvJ6j/BUz7E,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IuJ5j/BnE,OvJ8j/BU8W,KuJ5j/BV,KvJ6j/BUnV,KuJ5j/BV,OvJ6j/BU09D,QuJ5j/BV,EvJ6j/BUiK,OuJ5j/BV,SvJ6j/BUla,WuJ5j/BV,EvJ6j/BUma,YuJ5j/BV,EvJ6j/BUH,WACE33C,QACExrB,MuJ1j/Bd,IvJ6j/BUqyE,WACE7mD,QACEvW,MAAO,GAAI5C,GAAQ3H,QAAQ+O,eAAe,EAAG,EAAG,EAAG,IACjDi6B,OuJ5j/BhB,EvJ6j/BgBz+B,MuJ5j/BhB,2BvJ8j/BgBy+B,OuJ5j/BhB,GvJ6j/BgBz+B,MuJ5j/BhB,0BACA,GvJ6j/Bc+uF,YuJ5j/Bd,qBvJ6j/BcnsC,WuJ1j/Bd,KvJ6j/BU/M,WACEt/B,QACEvW,MuJ5j/Bd,iBvJ6j/BcqgE,YuJ5j/Bd,sBvJ6j/BcE,YuJ1j/Bd,KvJ6j/BUz7E,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IuJ1j/BnE,avJmk/BMg2G,IACA,SAAUt5G,EAAQC,EAASC,GAEjC,YAWA,SAASq5G,GAAuB/1G,GAAO,MAAOA,IAAOA,EAAIg2G,WAAah2G,GAAQs1G,QAASt1G,GARvF0D,OAAO2xG,eAAe54G,EAAS,cAC7B0C,OAAO,GwJpx/BT,IAAA82G,GAAAv5G,EAAA,KxJyx/BIw5G,EAAeH,EAAuBE,EAI1Cx5G,GAAQ64G,SACN/sB,YwJ5x/BF4tB,WAAAD,EAAAZ","file":"js/4.83123b83b3de14b5c545.js","sourcesContent":["webpackJsonp([4,31],{\n\n/***/ 300:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(675)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(754),\n  /* template */\n  __webpack_require__(623),\n  /* scopeId */\n  \"data-v-0157e44b\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 325:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 326:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(331);\n\n    var GlobalModel = __webpack_require__(411);\n    var ExtensionAPI = __webpack_require__(386);\n    var CoordinateSystemManager = __webpack_require__(350);\n    var OptionManager = __webpack_require__(412);\n\n    var ComponentModel = __webpack_require__(337);\n    var SeriesModel = __webpack_require__(357);\n\n    var ComponentView = __webpack_require__(385);\n    var ChartView = __webpack_require__(363);\n    var graphic = __webpack_require__(327);\n    var modelUtil = __webpack_require__(333);\n    var throttle = __webpack_require__(379);\n\n    var zrender = __webpack_require__(464);\n    var zrUtil = __webpack_require__(325);\n    var colorTool = __webpack_require__(340);\n    var Eventful = __webpack_require__(341);\n    var timsort = __webpack_require__(354);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(425));\n    echarts.registerPreprocessor(__webpack_require__(419));\n    echarts.registerLoading('default', __webpack_require__(410));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(358);\n    echarts.Model = __webpack_require__(335);\n\n    echarts.graphic = __webpack_require__(327);\n    echarts.number = __webpack_require__(328);\n    echarts.format = __webpack_require__(332);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(348);\n    echarts.vector = __webpack_require__(329);\n    echarts.color = __webpack_require__(340);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n\n/***/ 327:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var pathTool = __webpack_require__(462);\n    var round = Math.round;\n    var Path = __webpack_require__(330);\n    var colorTool = __webpack_require__(340);\n    var matrix = __webpack_require__(348);\n    var vector = __webpack_require__(329);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(346);\n\n    graphic.Image = __webpack_require__(371);\n\n    graphic.Text = __webpack_require__(445);\n\n    graphic.Circle = __webpack_require__(452);\n\n    graphic.Sector = __webpack_require__(458);\n\n    graphic.Ring = __webpack_require__(457);\n\n    graphic.Polygon = __webpack_require__(454);\n\n    graphic.Polyline = __webpack_require__(455);\n\n    graphic.Rect = __webpack_require__(456);\n\n    graphic.Line = __webpack_require__(453);\n\n    graphic.BezierCurve = __webpack_require__(451);\n\n    graphic.Arc = __webpack_require__(450);\n\n    graphic.CompoundPath = __webpack_require__(443);\n\n    graphic.LinearGradient = __webpack_require__(381);\n\n    graphic.RadialGradient = __webpack_require__(444);\n\n    graphic.BoundingRect = __webpack_require__(334);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 328:\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 329:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 330:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var zrUtil = __webpack_require__(325);\n    var PathProxy = __webpack_require__(347);\n    var pathContain = __webpack_require__(437);\n\n    var Pattern = __webpack_require__(372);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 331:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 332:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var textContain = __webpack_require__(342);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n\n/***/ 333:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(332);\n    var nubmerUtil = __webpack_require__(328);\n    var Model = __webpack_require__(335);\n    var zrUtil = __webpack_require__(325);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n\n/***/ 334:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var matrix = __webpack_require__(348);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var clazzUtil = __webpack_require__(336);\n    var env = __webpack_require__(331);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(417));\n    mixin(Model, __webpack_require__(414));\n    mixin(Model, __webpack_require__(418));\n    mixin(Model, __webpack_require__(416));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 336:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 337:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(335);\n    var zrUtil = __webpack_require__(325);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n    var layout = __webpack_require__(338);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(415));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 338:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(325);\n    var BoundingRect = __webpack_require__(334);\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n\n/***/ 339:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(368);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 341:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 342:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(325);\n    var BoundingRect = __webpack_require__(334);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 343:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(341);\n    var env = __webpack_require__(331);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 344:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(336);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 345:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 346:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var Element = __webpack_require__(364);\n    var BoundingRect = __webpack_require__(334);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 347:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(339);\n    var vec2 = __webpack_require__(329);\n    var bbox = __webpack_require__(441);\n    var BoundingRect = __webpack_require__(334);\n    var dpr = __webpack_require__(345).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 348:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 349:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(325);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 351:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(423);\n    var IntervalScale = __webpack_require__(352);\n    __webpack_require__(424);\n    __webpack_require__(422);\n    var Scale = __webpack_require__(344);\n\n    var numberUtil = __webpack_require__(328);\n    var zrUtil = __webpack_require__(325);\n    var textContain = __webpack_require__(342);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 352:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n    var Scale = __webpack_require__(344);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 353:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var clazz = __webpack_require__(336);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 354:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 355:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Style = __webpack_require__(373);\n\n    var Element = __webpack_require__(364);\n    var RectText = __webpack_require__(449);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 357:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var classUtil = __webpack_require__(336);\n    var modelUtil = __webpack_require__(333);\n    var ComponentModel = __webpack_require__(337);\n    var colorPaletteMixin = __webpack_require__(361);\n    var env = __webpack_require__(331);\n    var layout = __webpack_require__(338);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(335);\n    var DataDiffer = __webpack_require__(407);\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n\n/***/ 359:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var symbolUtil = __webpack_require__(362);\n    var graphic = __webpack_require__(327);\n    var numberUtil = __webpack_require__(328);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 360:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(337);\n    var zrUtil = __webpack_require__(325);\n    var axisModelCreator = __webpack_require__(401);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(400));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ 361:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(336);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(327);\n    var BoundingRect = __webpack_require__(334);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 363:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(346);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n    var modelUtil = __webpack_require__(333);\n    var zrUtil = __webpack_require__(325);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 364:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(369);\n    var Eventful = __webpack_require__(341);\n    var Transformable = __webpack_require__(461);\n    var Animatable = __webpack_require__(459);\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 365:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(432);\n    var color = __webpack_require__(340);\n    var util = __webpack_require__(325);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 366:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n\n/***/ 367:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 368:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 369:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(345);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 371:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var BoundingRect = __webpack_require__(334);\n    var zrUtil = __webpack_require__(325);\n\n    var LRU = __webpack_require__(368);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 372:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 373:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 374:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(448);\n    var smoothBezier = __webpack_require__(447);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 376:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(358);\n    var completeDimensions = __webpack_require__(408);\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var CoordinateSystem = __webpack_require__(350);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 377:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var echarts = __webpack_require__(326);\n\n    __webpack_require__(378);\n\n    __webpack_require__(392);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ 378:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(338);\n    var axisHelper = __webpack_require__(351);\n\n    var zrUtil = __webpack_require__(325);\n    var Cartesian2D = __webpack_require__(404);\n    var Axis2D = __webpack_require__(402);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(405);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(350).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ 379:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 381:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Gradient = __webpack_require__(356);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 383:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(327);\n    var Symbol = __webpack_require__(359);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ 384:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(396);\n\n    __webpack_require__(397);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(326).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(326).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 385:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(346);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 386:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 387:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var echarts = __webpack_require__(326);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(388);\n    __webpack_require__(389);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(426), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(409), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(421), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(377);\n\n\n/***/ }),\n\n/***/ 388:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(376);\n    var SeriesModel = __webpack_require__(357);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ 389:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(325);\n    var SymbolDraw = __webpack_require__(383);\n    var Symbol = __webpack_require__(359);\n    var lineAnimationDiff = __webpack_require__(390);\n    var graphic = __webpack_require__(327);\n    var modelUtil = __webpack_require__(333);\n    var polyHelper = __webpack_require__(391);\n    var ChartView = __webpack_require__(363);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 390:\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ 391:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(330);\n    var vec2 = __webpack_require__(329);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ 392:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(360);\n\n    __webpack_require__(394);\n\n\n/***/ }),\n\n/***/ 393:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var graphic = __webpack_require__(327);\n    var Model = __webpack_require__(335);\n    var numberUtil = __webpack_require__(328);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(329);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 394:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n    var AxisBuilder = __webpack_require__(393);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(326).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n\n/***/ 395:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var zrColor = __webpack_require__(340);\n    var eventUtil = __webpack_require__(343);\n    var formatUtil = __webpack_require__(332);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(331);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 396:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(326).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 397:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(395);\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var numberUtil = __webpack_require__(328);\n    var modelUtil = __webpack_require__(333);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(331);\n    var Model = __webpack_require__(335);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(326).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 398:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(328);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(325);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 399:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ 400:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var axisHelper = __webpack_require__(351);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 401:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(399);\n    var zrUtil = __webpack_require__(325);\n    var ComponentModel = __webpack_require__(337);\n    var layout = __webpack_require__(338);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ 402:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var Axis = __webpack_require__(398);\n    var axisLabelInterval = __webpack_require__(406);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ 403:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(325);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ 404:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var Cartesian = __webpack_require__(403);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(360);\n    var ComponentModel = __webpack_require__(337);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ 406:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var axisHelper = __webpack_require__(351);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n\n/***/ 407:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 408:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 409:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 411:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var Model = __webpack_require__(335);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(337);\n\n    var globalDefault = __webpack_require__(413);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(361));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 412:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var ComponentModel = __webpack_require__(337);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 413:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n\n/***/ 414:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(349)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(349)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(349)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 418:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(342);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(325);\n    var compatStyle = __webpack_require__(420);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 420:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var Scale = __webpack_require__(344);\n    var numberUtil = __webpack_require__(328);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(352);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(325);\n    var Scale = __webpack_require__(344);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n\n    var IntervalScale = __webpack_require__(352);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(356);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(325);\n    var Draggable = __webpack_require__(460);\n\n    var Eventful = __webpack_require__(341);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(325);\n    var config = __webpack_require__(345);\n    var Style = __webpack_require__(373);\n    var Pattern = __webpack_require__(372);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(345);\n    var util = __webpack_require__(325);\n    var log = __webpack_require__(370);\n    var BoundingRect = __webpack_require__(334);\n    var timsort = __webpack_require__(354);\n\n    var Layer = __webpack_require__(428);\n\n    var requestAnimationFrame = __webpack_require__(366);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(371);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 430:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(325);\n    var env = __webpack_require__(331);\n\n    var Group = __webpack_require__(346);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(354);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 431:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(325);\n    var Dispatcher = __webpack_require__(343).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(366);\n\n    var Animator = __webpack_require__(365);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 432:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(433);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 433:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 434:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(367).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(339);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(347).CMD;\n    var line = __webpack_require__(436);\n    var cubic = __webpack_require__(435);\n    var quadratic = __webpack_require__(438);\n    var arc = __webpack_require__(434);\n    var normalizeRadian = __webpack_require__(367).normalizeRadian;\n    var curve = __webpack_require__(339);\n\n    var windingLine = __webpack_require__(439);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(339);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 439:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(343);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var curve = __webpack_require__(339);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(343);\n    var zrUtil = __webpack_require__(325);\n    var Eventful = __webpack_require__(341);\n    var env = __webpack_require__(331);\n    var GestureMgr = __webpack_require__(440);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 443:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(330);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 444:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Gradient = __webpack_require__(356);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var zrUtil = __webpack_require__(325);\n    var textContain = __webpack_require__(342);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 446:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 447:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 448:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(329);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(342);\n    var BoundingRect = __webpack_require__(334);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 450:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 451:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(339);\n    var vec2 = __webpack_require__(329);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 452:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 453:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 454:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(374);\n\n    module.exports = __webpack_require__(330).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 455:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(374);\n\n    module.exports = __webpack_require__(330).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 456:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(446);\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 457:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 458:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(331);\n    var Path = __webpack_require__(330);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 459:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(365);\n    var util = __webpack_require__(325);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(370);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 460:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 461:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(348);\n    var vector = __webpack_require__(329);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 462:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(330);\n    var PathProxy = __webpack_require__(347);\n    var transformPath = __webpack_require__(463);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(347).CMD;\n    var vec2 = __webpack_require__(329);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 464:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(369);\n    var env = __webpack_require__(331);\n    var zrUtil = __webpack_require__(325);\n\n    var Handler = __webpack_require__(427);\n    var Storage = __webpack_require__(430);\n    var Animation = __webpack_require__(431);\n    var HandlerProxy = __webpack_require__(442);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(429)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(326);\n    var graphic = __webpack_require__(327);\n    var layout = __webpack_require__(338);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(338);\n    var formatUtil = __webpack_require__(332);\n    var graphic = __webpack_require__(327);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(524);\n    __webpack_require__(526);\n    __webpack_require__(525);\n\n    var echarts = __webpack_require__(326);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(527));\n\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var Model = __webpack_require__(335);\n\n    var LegendModel = __webpack_require__(326).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var symbolCreator = __webpack_require__(362);\n    var graphic = __webpack_require__(327);\n    var listComponentHelper = __webpack_require__(522);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(326).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(326);\n    var zrUtil = __webpack_require__(325);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n\n/***/ 527:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 550:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(295)();\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-0157e44b]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-0157e44b]{\\n    position: relative;\\n    width: 100%;\\n    height: 80%;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(741),\n  /* template */\n  __webpack_require__(632),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 623:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_vm._v(\"\\n  https://github.com/ecomfe/echarts/blob/master/index.js\\n  http://echarts.baidu.com/tutorial.html\\n  \"), _c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 632:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 675:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(550);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(296)(\"6ffae8fc\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./line.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 741:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(326);\n\n__webpack_require__(387);\n\n__webpack_require__(384);\n__webpack_require__(471);\n__webpack_require__(523);\nexports.default = {\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts.init(document.getElementById(this.id));\n\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          text: '请求数',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '6%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['移动', '电信', '联通'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '单位（%）',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: '移动',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n\n            }\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n        }, {\n          name: '电信',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n\n            }\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        }, {\n          name: '联通',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(219, 50, 51, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(219, 50, 51, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(219,50,51)',\n              borderColor: 'rgba(219,50,51,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lineMarker = __webpack_require__(607);\n\nvar _lineMarker2 = _interopRequireDefault(_lineMarker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: { lineMarker: _lineMarker2.default }\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/4.83123b83b3de14b5c545.js","\n/* styles */\nrequire(\"!!../../../node_modules/.2.0.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./line.vue\")\n\nvar Component = require(\"!../../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./line.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0157e44b\\\"}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./line.vue\"),\n  /* scopeId */\n  \"data-v-0157e44b\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/charts/line.vue\n// module id = 300\n// module chunks = 4","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/util.js\n// module id = 325\n// module chunks = 0 1 2 3 4","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/echarts.js\n// module id = 326\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/graphic.js\n// module id = 327\n// module chunks = 0 1 2 3 4","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/number.js\n// module id = 328\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/vector.js\n// module id = 329\n// module chunks = 0 1 2 3 4","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Path.js\n// module id = 330\n// module chunks = 0 1 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/env.js\n// module id = 331\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/format.js\n// module id = 332\n// module chunks = 0 1 2 3 4","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/model.js\n// module id = 333\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/BoundingRect.js\n// module id = 334\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Model.js\n// module id = 335\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/clazz.js\n// module id = 336\n// module chunks = 0 1 2 3 4","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Component.js\n// module id = 337\n// module chunks = 0 1 2 3 4","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/layout.js\n// module id = 338\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/curve.js\n// module id = 339\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/color.js\n// module id = 340\n// module chunks = 0 1 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Eventful.js\n// module id = 341\n// module chunks = 0 1 2 3 4","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/text.js\n// module id = 342\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/event.js\n// module id = 343\n// module chunks = 0 1 2 3 4","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Scale.js\n// module id = 344\n// module chunks = 0 1 2 3 4","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/config.js\n// module id = 345\n// module chunks = 0 1 2 3 4","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/container/Group.js\n// module id = 346\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/PathProxy.js\n// module id = 347\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/matrix.js\n// module id = 348\n// module chunks = 0 1 2 3 4","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 349\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/CoordinateSystem.js\n// module id = 350\n// module chunks = 0 1 2 3 4","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisHelper.js\n// module id = 351\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Interval.js\n// module id = 352\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/component.js\n// module id = 353\n// module chunks = 0 1 2 3 4","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/timsort.js\n// module id = 354\n// module chunks = 0 1 2 3 4","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Displayable.js\n// module id = 355\n// module chunks = 0 1 2 3 4","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Gradient.js\n// module id = 356\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Series.js\n// module id = 357\n// module chunks = 0 1 2 3 4","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/List.js\n// module id = 358\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/Symbol.js\n// module id = 359\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 360\n// module chunks = 0 1 2 3 4","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/colorPalette.js\n// module id = 361\n// module chunks = 0 1 2 3 4","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/symbol.js\n// module id = 362\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/view/Chart.js\n// module id = 363\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Element.js\n// module id = 364\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Animator.js\n// module id = 365\n// module chunks = 0 1 2 3 4","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/requestAnimationFrame.js\n// module id = 366\n// module chunks = 0 1 2 3 4","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/util.js\n// module id = 367\n// module chunks = 0 1 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/LRU.js\n// module id = 368\n// module chunks = 0 1 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/guid.js\n// module id = 369\n// module chunks = 0 1 2 3 4","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/log.js\n// module id = 370\n// module chunks = 0 1 2 3 4","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Image.js\n// module id = 371\n// module chunks = 0 1 2 3 4","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Pattern.js\n// module id = 372\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Style.js\n// module id = 373\n// module chunks = 0 1 2 3 4","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/poly.js\n// module id = 374\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/createListFromArray.js\n// module id = 376\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/grid.js\n// module id = 377\n// module chunks = 0 1 2 3 4","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Grid.js\n// module id = 378\n// module chunks = 0 1 2 3 4","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/throttle.js\n// module id = 379\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/LinearGradient.js\n// module id = 381\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 383\n// module chunks = 0 1 2 3 4","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip.js\n// module id = 384\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/view/Component.js\n// module id = 385\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/ExtensionAPI.js\n// module id = 386\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line.js\n// module id = 387\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/LineSeries.js\n// module id = 388\n// module chunks = 0 1 2 3 4","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/LineView.js\n// module id = 389\n// module chunks = 0 1 2 3 4","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 390\n// module chunks = 0 1 2 3 4","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/poly.js\n// module id = 391\n// module chunks = 0 1 2 3 4","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis.js\n// module id = 392\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis/AxisBuilder.js\n// module id = 393\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis/AxisView.js\n// module id = 394\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 395\n// module chunks = 0 1 2 3 4","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 396\n// module chunks = 0 1 2 3 4","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipView.js\n// module id = 397\n// module chunks = 0 1 2 3 4","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/Axis.js\n// module id = 398\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisDefault.js\n// module id = 399\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 400\n// module chunks = 0 1 2 3 4","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisModelCreator.js\n// module id = 401\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 402\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 403\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 404\n// module chunks = 0 1 2 3 4","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/GridModel.js\n// module id = 405\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 406\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/DataDiffer.js\n// module id = 407\n// module chunks = 0 1 2 3 4","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/helper/completeDimensions.js\n// module id = 408\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/layout/points.js\n// module id = 409\n// module chunks = 0 1 2 3 4","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/loading/default.js\n// module id = 410\n// module chunks = 0 1 2 3 4","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Global.js\n// module id = 411\n// module chunks = 0 1 2 3 4","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/OptionManager.js\n// module id = 412\n// module chunks = 0 1 2 3 4","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/globalDefault.js\n// module id = 413\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/areaStyle.js\n// module id = 414\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/boxLayout.js\n// module id = 415\n// module chunks = 0 1 2 3 4","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/itemStyle.js\n// module id = 416\n// module chunks = 0 1 2 3 4","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/lineStyle.js\n// module id = 417\n// module chunks = 0 1 2 3 4","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/textStyle.js\n// module id = 418\n// module chunks = 0 1 2 3 4","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/preprocessor/backwardCompat.js\n// module id = 419\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 420\n// module chunks = 0 1 2 3 4","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/processor/dataSample.js\n// module id = 421\n// module chunks = 0 1 2 3 4","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Log.js\n// module id = 422\n// module chunks = 0 1 2 3 4","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Ordinal.js\n// module id = 423\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Time.js\n// module id = 424\n// module chunks = 0 1 2 3 4","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/seriesColor.js\n// module id = 425\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/symbol.js\n// module id = 426\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Handler.js\n// module id = 427\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Layer.js\n// module id = 428\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Painter.js\n// module id = 429\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Storage.js\n// module id = 430\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Animation.js\n// module id = 431\n// module chunks = 0 1 2 3 4","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Clip.js\n// module id = 432\n// module chunks = 0 1 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/easing.js\n// module id = 433\n// module chunks = 0 1 2 3 4","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/arc.js\n// module id = 434\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/cubic.js\n// module id = 435\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/line.js\n// module id = 436\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/path.js\n// module id = 437\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/quadratic.js\n// module id = 438\n// module chunks = 0 1 2 3 4","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/windingLine.js\n// module id = 439\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/GestureMgr.js\n// module id = 440\n// module chunks = 0 1 2 3 4","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/bbox.js\n// module id = 441\n// module chunks = 0 1 2 3 4","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/dom/HandlerProxy.js\n// module id = 442\n// module chunks = 0 1 2 3 4","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/CompoundPath.js\n// module id = 443\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/RadialGradient.js\n// module id = 444\n// module chunks = 0 1 2 3 4","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Text.js\n// module id = 445\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/roundRect.js\n// module id = 446\n// module chunks = 0 1 2 3 4","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 447\n// module chunks = 0 1 2 3 4","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 448\n// module chunks = 0 1 2 3 4","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/mixin/RectText.js\n// module id = 449\n// module chunks = 0 1 2 3 4","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Arc.js\n// module id = 450\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 451\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Circle.js\n// module id = 452\n// module chunks = 0 1 2 3 4","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Line.js\n// module id = 453\n// module chunks = 0 1 2 3 4","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Polygon.js\n// module id = 454\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Polyline.js\n// module id = 455\n// module chunks = 0 1 2 3 4","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Rect.js\n// module id = 456\n// module chunks = 0 1 2 3 4","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Ring.js\n// module id = 457\n// module chunks = 0 1 2 3 4","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Sector.js\n// module id = 458\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Animatable.js\n// module id = 459\n// module chunks = 0 1 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Draggable.js\n// module id = 460\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Transformable.js\n// module id = 461\n// module chunks = 0 1 2 3 4","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/path.js\n// module id = 462\n// module chunks = 0 1 2 3 4","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/transformPath.js\n// module id = 463\n// module chunks = 0 1 2 3 4","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/zrender.js\n// module id = 464\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/title.js\n// module id = 471\n// module chunks = 1 2 3 4","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/helper/listComponent.js\n// module id = 522\n// module chunks = 1 4","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/legend.js\n// module id = 523\n// module chunks = 1 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/legend/LegendModel.js\n// module id = 524\n// module chunks = 1 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/legend/LegendView.js\n// module id = 525\n// module chunks = 1 4","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/legend/legendAction.js\n// module id = 526\n// module chunks = 1 4","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/legend/legendFilter.js\n// module id = 527\n// module chunks = 1 4","exports = module.exports = require(\"../../../node_modules/.0.26.1@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-0157e44b]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-0157e44b]{\\n    position: relative;\\n    width: 100%;\\n    height: 80%;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.26.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-0157e44b\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 550\n// module chunks = 4","var Component = require(\"!../../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./lineMarker.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1a5c4ee1\\\"}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./lineMarker.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/lineMarker.vue\n// module id = 607\n// module chunks = 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_vm._v(\"\\n  https://github.com/ecomfe/echarts/blob/master/index.js\\n  http://echarts.baidu.com/tutorial.html\\n  \"), _c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-0157e44b\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/charts/line.vue\n// module id = 623\n// module chunks = 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-1a5c4ee1\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/lineMarker.vue\n// module id = 632\n// module chunks = 4","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.2.0.0@vue-style-loader/lib/addStylesClient.js\")(\"6ffae8fc\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./line.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0157e44b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.0.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.2.0.0@vue-style-loader!./~/.0.26.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-0157e44b\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 675\n// module chunks = 4","<template>\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n<script>\n    // 引入 ECharts 主模块\n    const echarts = require('echarts/lib/echarts');\n\n    require('echarts/lib/chart/line');\n    // 引入提示框和标题组件\n    require('echarts/lib/component/tooltip');\n    require('echarts/lib/component/title');\n    require('echarts/lib/component/legend');\n    export default {\n      name: 'barPercent',\n      props: {\n        className: {\n          type: String,\n          default: 'chart'\n        },\n        id: {\n          type: String,\n          default: 'chart'\n        },\n        width: {\n          type: String,\n          default: '200px'\n        },\n        height: {\n          type: String,\n          default: '200px'\n        }\n      },\n      data() {\n        return {};\n      },\n      mounted() {\n        this.initChart();\n      },\n      methods: {\n        initChart() {\n          this.chart = echarts.init(document.getElementById(this.id));\n\n          this.chart.setOption({\n            backgroundColor: '#394056',\n            title: {\n              text: '请求数',\n              textStyle: {\n                fontWeight: 'normal',\n                fontSize: 16,\n                color: '#F1F1F3'\n              },\n              left: '6%'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              }\n            },\n            legend: {\n              icon: 'rect',\n              itemWidth: 14,\n              itemHeight: 5,\n              itemGap: 13,\n              data: ['移动', '电信', '联通'],\n              right: '4%',\n              textStyle: {\n                fontSize: 12,\n                color: '#F1F1F3'\n              }\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [{\n              type: 'category',\n              boundaryGap: false,\n              axisLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              },\n              data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位（%）',\n              axisTick: {\n                show: false\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              },\n              axisLabel: {\n                margin: 10,\n                textStyle: {\n                  fontSize: 14\n                }\n              },\n              splitLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              }\n            }],\n            series: [{\n              name: '移动',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(137, 189, 27, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(137, 189, 27, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(137,189,27)',\n                  borderColor: 'rgba(137,189,2,0.27)',\n                  borderWidth: 12\n\n                }\n              },\n              data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n            }, {\n              name: '电信',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(0, 136, 212, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(0, 136, 212, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(0,136,212)',\n                  borderColor: 'rgba(0,136,212,0.2)',\n                  borderWidth: 12\n\n                }\n              },\n              data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n            }, {\n              name: '联通',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(219, 50, 51, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(219, 50, 51, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(219,50,51)',\n                  borderColor: 'rgba(219,50,51,0.2)',\n                  borderWidth: 12\n                }\n              },\n              data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n            }]\n          })\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// lineMarker.vue?293cfe91","<template>\n  <div class=\"components-container\" style='height:100vh'>\n    https://github.com/ecomfe/echarts/blob/master/index.js\n    http://echarts.baidu.com/tutorial.html\n    <div class='chart-container'>\n       <lineMarker height='100%' width='100%' />\n    </div>\n\n  </div>\n</template>\n<script>\n    import lineMarker from 'components/Charts/lineMarker';\n\n    export default {\n      components: { lineMarker }\n    };\n</script>\n\n<style scoped>\n.chart-container{\n    position: relative;\n    width: 100%;\n    height: 80%;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// line.vue?3c4de9f1"],"sourceRoot":""}