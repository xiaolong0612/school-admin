{"version":3,"sources":["webpack:///js/3.2ec67a871a9963a62597.js","webpack:///./src/views/charts/keyboard2.vue","webpack:///./~/.3.4.4@zrender/lib/core/util.js?c5ec**","webpack:///./~/.3.4.0@echarts/lib/echarts.js?afc0**","webpack:///./~/.3.4.0@echarts/lib/util/graphic.js?7369**","webpack:///./~/.3.4.0@echarts/lib/util/number.js?14c3**","webpack:///./~/.3.4.4@zrender/lib/core/vector.js?e99b**","webpack:///./~/.3.4.4@zrender/lib/graphic/Path.js?4339**","webpack:///./~/.3.4.4@zrender/lib/core/env.js?8774**","webpack:///./~/.3.4.0@echarts/lib/util/format.js?c60a**","webpack:///./~/.3.4.0@echarts/lib/util/model.js?41e4**","webpack:///./~/.3.4.4@zrender/lib/core/BoundingRect.js?4c11**","webpack:///./~/.3.4.0@echarts/lib/model/Model.js?26df**","webpack:///./~/.3.4.0@echarts/lib/util/clazz.js?830d**","webpack:///./~/.3.4.0@echarts/lib/model/Component.js?c442**","webpack:///./~/.3.4.0@echarts/lib/util/layout.js?353c**","webpack:///./~/.3.4.4@zrender/lib/core/curve.js?1fb3**","webpack:///./~/.3.4.4@zrender/lib/tool/color.js?52a3**","webpack:///./~/.3.4.4@zrender/lib/mixin/Eventful.js?baa1**","webpack:///./~/.3.4.4@zrender/lib/contain/text.js?ea0d**","webpack:///./~/.3.4.4@zrender/lib/core/event.js?054a**","webpack:///./~/.3.4.0@echarts/lib/scale/Scale.js?6485**","webpack:///./~/.3.4.4@zrender/lib/config.js?db81**","webpack:///./~/.3.4.4@zrender/lib/container/Group.js?f6e2**","webpack:///./~/.3.4.4@zrender/lib/core/PathProxy.js?7e19**","webpack:///./~/.3.4.4@zrender/lib/core/matrix.js?8e8e**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/makeStyleMapper.js?4163**","webpack:///./~/.3.4.0@echarts/lib/CoordinateSystem.js?ed45**","webpack:///./~/.3.4.0@echarts/lib/coord/axisHelper.js?3f68**","webpack:///./~/.3.4.0@echarts/lib/scale/Interval.js?7625**","webpack:///./~/.3.4.0@echarts/lib/util/component.js?6068**","webpack:///./~/.3.4.4@zrender/lib/core/timsort.js?55fd**","webpack:///./~/.3.4.4@zrender/lib/graphic/Displayable.js?d005**","webpack:///./~/.3.4.4@zrender/lib/graphic/Gradient.js?3df8**","webpack:///./~/.3.4.0@echarts/lib/model/Series.js?f756**","webpack:///./~/.3.4.0@echarts/lib/data/List.js?9d25**","webpack:///./~/.3.4.0@echarts/lib/chart/helper/Symbol.js?2961**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/AxisModel.js?248c**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/colorPalette.js?97d1**","webpack:///./~/.3.4.0@echarts/lib/util/symbol.js?6e4b**","webpack:///./~/.3.4.0@echarts/lib/view/Chart.js?9687**","webpack:///./~/.3.4.4@zrender/lib/Element.js?b8ce**","webpack:///./~/.3.4.4@zrender/lib/animation/Animator.js?5e27**","webpack:///./~/.3.4.4@zrender/lib/animation/requestAnimationFrame.js?14c5**","webpack:///./~/.3.4.4@zrender/lib/contain/util.js?5ffc**","webpack:///./~/.3.4.4@zrender/lib/core/LRU.js?f394**","webpack:///./~/.3.4.4@zrender/lib/core/guid.js?dc27**","webpack:///./~/.3.4.4@zrender/lib/core/log.js?1233**","webpack:///./~/.3.4.4@zrender/lib/graphic/Image.js?3399**","webpack:///./~/.3.4.4@zrender/lib/graphic/Pattern.js?ca8f**","webpack:///./~/.3.4.4@zrender/lib/graphic/Style.js?d39b**","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/poly.js?8d85**","webpack:///./~/.3.4.0@echarts/lib/chart/helper/createListFromArray.js?21fa**","webpack:///./~/.3.4.0@echarts/lib/component/grid.js?edb6**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Grid.js?b440**","webpack:///./~/.3.4.0@echarts/lib/util/throttle.js?bead**","webpack:///./~/.3.4.0@echarts/lib/visual/VisualMapping.js?7c35","webpack:///./~/.3.4.4@zrender/lib/graphic/LinearGradient.js?2fda**","webpack:///./~/.3.4.0@echarts/lib/chart/helper/SymbolDraw.js?0668**","webpack:///./~/.3.4.0@echarts/lib/component/tooltip.js?58ab**","webpack:///./~/.3.4.0@echarts/lib/view/Component.js?9ca3**","webpack:///./~/.3.4.0@echarts/lib/ExtensionAPI.js?b0da**","webpack:///./~/.3.4.0@echarts/lib/chart/line.js?af9e**","webpack:///./~/.3.4.0@echarts/lib/chart/line/LineSeries.js?477c**","webpack:///./~/.3.4.0@echarts/lib/chart/line/LineView.js?c636**","webpack:///./~/.3.4.0@echarts/lib/chart/line/lineAnimationDiff.js?3b53**","webpack:///./~/.3.4.0@echarts/lib/chart/line/poly.js?77a6**","webpack:///./~/.3.4.0@echarts/lib/component/axis.js?628a**","webpack:///./~/.3.4.0@echarts/lib/component/axis/AxisBuilder.js?d8a3**","webpack:///./~/.3.4.0@echarts/lib/component/axis/AxisView.js?8ef6**","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipContent.js?552d**","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipModel.js?fe30**","webpack:///./~/.3.4.0@echarts/lib/component/tooltip/TooltipView.js?59f4**","webpack:///./~/.3.4.0@echarts/lib/coord/Axis.js?ea59**","webpack:///./~/.3.4.0@echarts/lib/coord/axisDefault.js?519c**","webpack:///./~/.3.4.0@echarts/lib/coord/axisModelCommonMixin.js?f61b**","webpack:///./~/.3.4.0@echarts/lib/coord/axisModelCreator.js?348d**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Axis2D.js?78f8**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian.js?4c7a**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js?3e95**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/GridModel.js?e75b**","webpack:///./~/.3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js?72b4**","webpack:///./~/.3.4.0@echarts/lib/data/DataDiffer.js?0961**","webpack:///./~/.3.4.0@echarts/lib/data/helper/completeDimensions.js?1905**","webpack:///./~/.3.4.0@echarts/lib/layout/points.js?1cf5**","webpack:///./~/.3.4.0@echarts/lib/loading/default.js?acbb**","webpack:///./~/.3.4.0@echarts/lib/model/Global.js?a49e**","webpack:///./~/.3.4.0@echarts/lib/model/OptionManager.js?8e82**","webpack:///./~/.3.4.0@echarts/lib/model/globalDefault.js?13fc**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/areaStyle.js?7a36**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/boxLayout.js?3ebe**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/itemStyle.js?f2b8**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/lineStyle.js?cdc8**","webpack:///./~/.3.4.0@echarts/lib/model/mixin/textStyle.js?1c28**","webpack:///./~/.3.4.0@echarts/lib/preprocessor/backwardCompat.js?6de0**","webpack:///./~/.3.4.0@echarts/lib/preprocessor/helper/compatStyle.js?5865**","webpack:///./~/.3.4.0@echarts/lib/processor/dataSample.js?0e3b**","webpack:///./~/.3.4.0@echarts/lib/scale/Log.js?90fd**","webpack:///./~/.3.4.0@echarts/lib/scale/Ordinal.js?2978**","webpack:///./~/.3.4.0@echarts/lib/scale/Time.js?35ee**","webpack:///./~/.3.4.0@echarts/lib/visual/seriesColor.js?688f**","webpack:///./~/.3.4.0@echarts/lib/visual/symbol.js?fb54**","webpack:///./~/.3.4.4@zrender/lib/Handler.js?ba7d**","webpack:///./~/.3.4.4@zrender/lib/Layer.js?887f**","webpack:///./~/.3.4.4@zrender/lib/Painter.js?096c**","webpack:///./~/.3.4.4@zrender/lib/Storage.js?a9fe**","webpack:///./~/.3.4.4@zrender/lib/animation/Animation.js?5647**","webpack:///./~/.3.4.4@zrender/lib/animation/Clip.js?a974**","webpack:///./~/.3.4.4@zrender/lib/animation/easing.js?2330**","webpack:///./~/.3.4.4@zrender/lib/contain/arc.js?e652**","webpack:///./~/.3.4.4@zrender/lib/contain/cubic.js?f25e**","webpack:///./~/.3.4.4@zrender/lib/contain/line.js?81f1**","webpack:///./~/.3.4.4@zrender/lib/contain/path.js?3d23**","webpack:///./~/.3.4.4@zrender/lib/contain/quadratic.js?845a**","webpack:///./~/.3.4.4@zrender/lib/contain/windingLine.js?3ef0**","webpack:///./~/.3.4.4@zrender/lib/core/GestureMgr.js?7d30**","webpack:///./~/.3.4.4@zrender/lib/core/bbox.js?1af2**","webpack:///./~/.3.4.4@zrender/lib/dom/HandlerProxy.js?22ea**","webpack:///./~/.3.4.4@zrender/lib/graphic/CompoundPath.js?2286**","webpack:///./~/.3.4.4@zrender/lib/graphic/RadialGradient.js?b9d4**","webpack:///./~/.3.4.4@zrender/lib/graphic/Text.js?05ef**","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/roundRect.js?9d7f**","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/smoothBezier.js?7e17**","webpack:///./~/.3.4.4@zrender/lib/graphic/helper/smoothSpline.js?d502**","webpack:///./~/.3.4.4@zrender/lib/graphic/mixin/RectText.js?38cc**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Arc.js?0a2b**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/BezierCurve.js?fd8a**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Circle.js?e612**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Line.js?ca3e**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Polygon.js?8825**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Polyline.js?f4f7**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Rect.js?e1d2**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Ring.js?35d7**","webpack:///./~/.3.4.4@zrender/lib/graphic/shape/Sector.js?c983**","webpack:///./~/.3.4.4@zrender/lib/mixin/Animatable.js?eced**","webpack:///./~/.3.4.4@zrender/lib/mixin/Draggable.js?48f6**","webpack:///./~/.3.4.4@zrender/lib/mixin/Transformable.js?fbd4**","webpack:///./~/.3.4.4@zrender/lib/tool/path.js?7c1c**","webpack:///./~/.3.4.4@zrender/lib/tool/transformPath.js?c50f**","webpack:///./~/.3.4.4@zrender/lib/zrender.js?0379**","webpack:///./~/.3.4.0@echarts/lib/chart/bar.js?6872**","webpack:///./~/.3.4.0@echarts/lib/chart/bar/BarSeries.js?33ed**","webpack:///./~/.3.4.0@echarts/lib/chart/bar/BarView.js?3994**","webpack:///./~/.3.4.0@echarts/lib/chart/bar/BaseBarSeries.js?0dd1**","webpack:///./~/.3.4.0@echarts/lib/chart/bar/barItemStyle.js?dbb5**","webpack:///./~/.3.4.0@echarts/lib/chart/bar/helper.js?95e5**","webpack:///./~/.3.4.0@echarts/lib/component/title.js?65d5*","webpack:///./~/.3.4.0@echarts/lib/layout/barGrid.js?a51c**","webpack:///./~/.3.4.0@echarts/lib/component/helper/sliderMove.js?25ce*","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/VisualMapModel.js?32bf","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/VisualMapView.js?e345","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/helper.js?026c","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/preprocessor.js?7183","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/typeDefaulter.js?2b2d","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/visualEncoding.js?214f","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/visualMapAction.js?47f1","webpack:///./~/.3.4.0@echarts/lib/visual/visualDefault.js?d5fc","webpack:///./~/.3.4.0@echarts/lib/visual/visualSolution.js?11d2","webpack:///./~/.3.4.0@echarts/lib/component/visualMap.js?1e50","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/ContinuousModel.js?c70f","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/ContinuousView.js?0f3e","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/PiecewiseModel.js?33de","webpack:///./~/.3.4.0@echarts/lib/component/visualMap/PiecewiseView.js?7980","webpack:///./~/.3.4.0@echarts/lib/component/visualMapContinuous.js?dfdc","webpack:///./~/.3.4.0@echarts/lib/component/visualMapPiecewise.js?ef78","webpack:///./src/views/charts/keyboard2.vue?f572","webpack:///./src/components/Charts/keyboard2.vue","webpack:///./src/components/Charts/keyboard2.vue?8973","webpack:///./src/views/charts/keyboard2.vue?0978","webpack:///./src/views/charts/keyboard2.vue?ac18","webpack:///keyboard2.vue","webpack:///keyboard2.vue?f5ef"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","HASH_MAP_PREFIX","get","set","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","STATUS_PENDING","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","rotation","elMap1","oldEl","newProp","_trim","str","RADIAN_EPSILON","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","detect","ua","os","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","navigator","userAgent","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","host","hasOwn","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","l","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","getTextWidth","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","excludes","propName","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","getDimensionInfo","formattedValue","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","transferProperties","_storage","originalStorage","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","opacity","valueDim","onEmphasis","ratio","onNormal","fadeOut","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","colorIdx","colorNameMap","colorPalette","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","gridModel","getRect","xAxis","yAxis","grid","isAxisUsedInTheGrid","axisModel","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","preprocessForPiecewise","thisOption","pieceList","hasSpecialVisual","piece","originIndex","preprocessForSpecifiedCategory","categoryMap","cate","visualArr","CATEGORY_DEFAULT_VISUAL_INDEX","normalizeVisualRange","doNotNeedPair","symbol","makePartialColorVisualHandler","applyValue","applyVisual","mapValueToVisual","_doMap","makeDoMap","doMapToArray","normalized","makeApplyVisual","doMapCategory","doMapFixed","sourceExtent","linear","category","piecewise","getSpecifiedVisual","fixed","pieceIndex","VisualMapping","findPieceIndex","zrColor","mappingMethod","_normalizeData","normalizers","visualHandler","visualHandlers","getColorMapper","getNormalizer","parsedVisual","isNormalized","returnRGBArray","colorHue","colorSaturation","colorLightness","colorAlpha","symbolCfg","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","updatePossible","newAbs","possibleI","pieceValue","globalCoord","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","componentProto","chartInstance","echartsAPIList","legendHoverLink","clipOverflow","lineStyle","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","makeAxisEventDataBase","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","rawTick","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","tooltipModel","transitionDuration","padding","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderColor","borderRadius","borderWidth","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","moveSingleLine","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","rangeStart","rangeEnd","setRange","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","eachSeriesByType","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","findComponents","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","fontWeight","animationDuration","animationThreshold","progressiveThreshold","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","displayList","whIdx","wh","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","atan2","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","TOUCH_CLICK_DELAY","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","align","baseline","shadowColor","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","barLayoutGrid","brushSelector","createRect","animationModel","rectShape","animateProperty","animateTarget","removeRect","getRectItemLayout","fixedLineWidth","getLineWidth","signX","signY","updateStyle","itemStyleModel","getBarItemStyle","labelPositionOutside","helper","setLabel","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","_renderOnCartesian","newIndex","oldIndex","getMarkerPosition","barMinHeight","labelText","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","getSeriesStackId","getAxisKey","calBarWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","handleEnds","mode","handleIndex","getRealDelta","handleMinMax","visualDefault","visualSolution","DEFAULT_COLOR","VisualMapModel","stateList","replacableOptionKeys","dataBound","inRange","outOfRange","itemWidth","itemHeight","contentColor","inactiveColor","textGap","_dataExtent","targetVisuals","controllerVisuals","itemSize","realtime","replaceVisualOption","resetItemSize","completeVisualOption","resetVisual","supplementVisualOption","createVisualMappings","controller","resetTargetSeries","allSeriesIndex","eachTargetSeries","isTargetSeries","is","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","visualData","completeController","symbolExists","symbolSizeExists","visuals","setSelected","getValueState","getVisualMeta","autoPositionValues","visualMapModel","renderBackground","getControllerVisual","targetValue","visualCluster","visualObj","forceState","defaultColor","mappings","visualMapping","convertOpacityToAlpha","__alphaForOpacity","positionGroup","getItemAlign","modelOption","itemAlign","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","pieces","splitList","calculable","processSingleVisualMap","prepareVisualMeta","getColorVisual","valueState","resultVisual","mapping","selected","active","inactive","hasKeys","createMappings","Creater","__hidden","visualMappings","mappingOption","keys","eachItem","valueOrIndex","rawDataItem","visualTypesMap","getColorStopValues","stopValues","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","_orient","auto","getSelected","dataInterval","findTargetDataIndices","setStop","oVals","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","createPolygon","onDrift","onDragEnd","ondragend","createHandlePoints","textSize","createIndicatorPoints","isRange","halfHoverLinkSize","extentMax","HOVER_LINK_OUT","getHalfHoverLinkSize","sizeExtent","HOVER_LINK_SIZE","useHoverLinkOnHandle","VisualMapView","sliderMove","ContinuousView","_shapes","_dataInterval","_handleEnds","_useHandle","_hoverLinkDataIndices","_dragging","_hovering","_buildView","thisGroup","_resetInterval","_renderBar","dataRangeText","_renderEndsText","_updateView","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","barGroup","_applyTransform","targetGroup","shapes","useHandle","_createBarGroup","_dragHandle","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","handleThumb","handleLabel","handleLabelPoint","indicator","indicatorLabel","indicatorLabelPoint","isEnd","_updateInterval","visualMapId","_clearHoverLinkToSeries","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","sampleNumber","currValue","textPoint","_showIndicator","cursorValue","rangeSymbol","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverRange","valueRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","normalizeReverse","PiecewiseModel","minOpen","maxOpen","itemSymbol","selectedMode","showLabel","_pieceList","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","getSelectedMapKey","hasSel","getPieceList","getRepresentValue","representValue","pieceInterval","splitStep","pieceListItem","closeList","infinityList","useMinMax","symbolCreators","PiecewiseVisualMapView","renderItem","itemGroup","onclick","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","onHoverLink","shapeParam","newKey","sources","file","sourcesContent","sourceRoot","_vm","$createElement","_self","_c","class","className","attrs","staticRenderFns","staticClass","staticStyle","locals","defineProperty","default","mounted","initBar","methods","getElementById","xAxisData","data2","barBorderRadius","animationDelayUpdate","_interopRequireDefault","__esModule","_keyboard","_keyboard2","keyboardChart2"],"mappings":"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,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUF,EAAQC,EAASC,GqKlkmCjCD,EAAAD,EAAAC,QAAAC,EAAA,OAKAD,EAAA6D,MAAA9D,EAAAU,EAAA,6EAAoG,IAAQ+a,QAAA,EAAAkoG,SAAA,qCAAAzjF,SAAA03E,SAAA,8CAAAgM,KAAA,gBAAAC,gBAAA,0GAA8QC,WAAA,iBrK0kmCjX,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU9jH,EAAQC,EAASC,GsKrnmCjC,GAAAC,GAAAD,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,StK2nmCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUD,EAAQC,GuK1qmCxBD,EAAAC,SAAgBkR,OAAA,WAAmB,GAAA4yG,GAAAn/G,KAAaytC,EAAA0xE,EAAAC,cAChD,QAD0ED,EAAAE,MAAAC,IAAA7xE,GAC1E,OACA8xE,MAAAJ,EAAAK,UACAzsG,OACAvO,OAAA26G,EAAA36G,OACAD,MAAA46G,EAAA56G,OAEAk7G,OACA37G,GAAAq7G,EAAAr7G,OAGC47G,qBvK+qmCQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUtkH,EAAQC,GwKpsmCxBD,EAAAC,SAAgBkR,OAAA,WAAmB,GAAA4yG,GAAAn/G,KAAaytC,EAAA0xE,EAAAC,eAA0BE,EAAAH,EAAAE,MAAAC,IAAA7xE,CAC1E,OAAA6xE,GAAA,OACAK,YAAA,uBACAC,aACAp7G,OAAA,WAEG86G,EAAA,OACHK,YAAA,oBACGL,EAAA,kBACHG,OACA37G,GAAA,QACAU,OAAA,OACAD,MAAA,WAEG,MACFm7G,qBxKysmCQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUtkH,EAAQC,EAASC,GyK9vmCjC,GAAA+5E,GAAA/5E,EAAA,IACA,iBAAA+5E,SAAAj6E,EAAAU,EAAAu5E,EAAA,MACAA,EAAAwqC,SAAAzkH,EAAAC,QAAAg6E,EAAAwqC,OAEAvkH,GAAA,gBAAA+5E,GAAA,IzKmxmCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUj6E,EAAQC,EAASC,GAEjC,YAGA8G,QAAO09G,eAAezkH,EAAS,cAC7ByC,OAAO,G0K10mCT,IAAA8Y,GAAAtb,EACA,IACAA,GAAA,KACAA,EACA,KACAA,EAAA,KACAA,EAAA,KAEAA,EACA,K1K60mCAD,EAAQ0kH,SACN3qG,K0K50mCF,a1K60mCEiH,OACEmjG,WACEr/G,K0K50mCNktB,O1K60mCM0yF,Q0K30mCN,S1K60mCIj8G,IACE3D,K0K50mCNktB,O1K60mCM0yF,Q0K30mCN,S1K60mCIx7G,OACEpE,K0K50mCNktB,O1K60mCM0yF,Q0K30mCN,S1K60mCIv7G,QACErE,K0K50mCNktB,O1K60mCM0yF,Q0K10mCN,U1K60mCEthH,KAAM,WACJ,UAEFuhH,QAAS,WACPhgH,K0K50mCJigH,W1K+0mCEC,SACED,QAAS,WACPjgH,KAAKmK,MAAQyM,EAAQxS,KAAK7G,SAAS4iH,eAAengH,K0K50mCxD8D,I1Ki1mCM,KAAK,GAHDs8G,MACA3hH,KACA4hH,KACKvkH,EAAI,EAAGA,EAAI,GAAIA,IACtBskH,EAAUlhH,K0K70mClBpD,G1K80mCQ2C,EAAKS,K0K70mCb,G1K60mCmBmO,KAAKixB,IAAIxiC,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,IAChDukH,EAAMnhH,K0K70mCd,G1K60mCoBmO,KAAKixB,IAAIxiC,EAAI,IAAMA,EAAI,EAAI,IAAMA,EAAI,GAEnDkE,MAAKmK,M0K70mCX8F,W1K80mCQgB,gB0K50mCR,U1K60mCQ0sD,QACElM,M0K50mCV,E1K60mCUhzD,K0K50mCV2hH,I1K80mCU3uD,M0K50mCV,E1K60mCUhzD,K0K30mCV2hH,I1K60mCQ1zB,WACEj7B,M0K50mCV,E1K60mCU3/C,I0K50mCV,E1K60mCUE,I0K50mCV,G1K60mCUy3C,U0K50mCV,E1K60mCUgmD,SACEj2F,OAAQ,UAAW,UAAW,UAAW,UAAW,U0K10mChE,a1K60mCQokD,OACE6U,UACEhhB,M0K30mCZ,G1K60mCU6hB,WACE7yD,WACEjH,M0K10mCd,Y1K60mCUooE,WACEnwB,M0K50mCZ,E1K60mCY8W,WACE/uD,M0K10mCd,Y1K60mCUq5D,UACEphB,M0K10mCZ,I1K60mCQ/lD,SACE0J,K0K50mCV,O1K60mCUjV,K0K50mCV,M1K60mCU1B,K0K50mCV4hH,E1K60mCU1yG,E0K50mCV,E1K60mCUy/C,WACE59B,QACEq+B,Q0K50mCd,G1K60mCcyyD,gB0K50mCd,E1K60mCcjnD,W0K50mCd,E1K60mCc+rC,Y0K10mCd,W1K80mCUhwF,K0K50mCV,kB1K60mCUjV,K0K50mCV,OACA1B,O1K60mCUkP,E0K50mCV,E1K60mCU86D,Y0K50mCV,E1K60mCU7rD,e0K50mCV,E1K60mCUD,gB0K50mCV,S1K60mCU6uE,kB0K50mCV,K1K60mCUjjB,WACE/4C,QACEhW,M0K10mCd,gB1K60mCU09D,WACE1nD,QACEhW,M0K50mCd,U1K60mCc6/C,W0K50mCd,G1K60mCc+rC,Y0K10mCd,W1K80mCUhwF,K0K50mCV,Q1K60mCUjV,K0K50mCV,MACA1B,O1K60mCU8hE,W0K50mCV,E1K60mCU5yD,E0K50mCV,E1K60mCUy/C,WACE59B,QACE8wF,gB0Kz0mCd,M1K60mCQ3jG,gB0K50mCR,a1K60mCQ29D,sB0K50mCR,a1K60mCQ19D,eAAgB,SAAwB1S,GACtC,M0K50mCV,I1K40mCiBA,GAETq2G,qBAAsB,SAA8Br2G,GAClD,M0K50mCV,I1K40mCiBA,SAQR,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU9O,EAAQC,EAASC,GAEjC,YAWA,SAASklH,GAAuB7hH,GAAO,MAAOA,IAAOA,EAAI8hH,WAAa9hH,GAAQohH,QAASphH,GARvFyD,OAAO09G,eAAezkH,EAAS,cAC7ByC,OAAO,G2K5+mCT,IAAA4iH,GAAAplH,EAAA,K3Ki/mCIqlH,EAAaH,EAAuBE,EAIxCrlH,GAAQ0kH,SACN55B,Y2Kp/mCFy6B,eAAAD,EAAAZ","file":"js/3.2ec67a871a9963a62597.js","sourcesContent":["webpackJsonp([3,31],Array(299).concat([\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(692)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(753),\n  /* template */\n  __webpack_require__(651),\n  /* scopeId */\n  \"data-v-6811dc38\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(331);\n\n    var GlobalModel = __webpack_require__(411);\n    var ExtensionAPI = __webpack_require__(386);\n    var CoordinateSystemManager = __webpack_require__(350);\n    var OptionManager = __webpack_require__(412);\n\n    var ComponentModel = __webpack_require__(337);\n    var SeriesModel = __webpack_require__(357);\n\n    var ComponentView = __webpack_require__(385);\n    var ChartView = __webpack_require__(363);\n    var graphic = __webpack_require__(327);\n    var modelUtil = __webpack_require__(333);\n    var throttle = __webpack_require__(379);\n\n    var zrender = __webpack_require__(464);\n    var zrUtil = __webpack_require__(325);\n    var colorTool = __webpack_require__(340);\n    var Eventful = __webpack_require__(341);\n    var timsort = __webpack_require__(354);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(425));\n    echarts.registerPreprocessor(__webpack_require__(419));\n    echarts.registerLoading('default', __webpack_require__(410));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(358);\n    echarts.Model = __webpack_require__(335);\n\n    echarts.graphic = __webpack_require__(327);\n    echarts.number = __webpack_require__(328);\n    echarts.format = __webpack_require__(332);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(348);\n    echarts.vector = __webpack_require__(329);\n    echarts.color = __webpack_require__(340);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var pathTool = __webpack_require__(462);\n    var round = Math.round;\n    var Path = __webpack_require__(330);\n    var colorTool = __webpack_require__(340);\n    var matrix = __webpack_require__(348);\n    var vector = __webpack_require__(329);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(346);\n\n    graphic.Image = __webpack_require__(371);\n\n    graphic.Text = __webpack_require__(445);\n\n    graphic.Circle = __webpack_require__(452);\n\n    graphic.Sector = __webpack_require__(458);\n\n    graphic.Ring = __webpack_require__(457);\n\n    graphic.Polygon = __webpack_require__(454);\n\n    graphic.Polyline = __webpack_require__(455);\n\n    graphic.Rect = __webpack_require__(456);\n\n    graphic.Line = __webpack_require__(453);\n\n    graphic.BezierCurve = __webpack_require__(451);\n\n    graphic.Arc = __webpack_require__(450);\n\n    graphic.CompoundPath = __webpack_require__(443);\n\n    graphic.LinearGradient = __webpack_require__(381);\n\n    graphic.RadialGradient = __webpack_require__(444);\n\n    graphic.BoundingRect = __webpack_require__(334);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var zrUtil = __webpack_require__(325);\n    var PathProxy = __webpack_require__(347);\n    var pathContain = __webpack_require__(437);\n\n    var Pattern = __webpack_require__(372);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var textContain = __webpack_require__(342);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(332);\n    var nubmerUtil = __webpack_require__(328);\n    var Model = __webpack_require__(335);\n    var zrUtil = __webpack_require__(325);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var matrix = __webpack_require__(348);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var clazzUtil = __webpack_require__(336);\n    var env = __webpack_require__(331);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(417));\n    mixin(Model, __webpack_require__(414));\n    mixin(Model, __webpack_require__(418));\n    mixin(Model, __webpack_require__(416));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(335);\n    var zrUtil = __webpack_require__(325);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n    var layout = __webpack_require__(338);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(415));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(325);\n    var BoundingRect = __webpack_require__(334);\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(368);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(325);\n    var BoundingRect = __webpack_require__(334);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(341);\n    var env = __webpack_require__(331);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(336);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var Element = __webpack_require__(364);\n    var BoundingRect = __webpack_require__(334);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(339);\n    var vec2 = __webpack_require__(329);\n    var bbox = __webpack_require__(441);\n    var BoundingRect = __webpack_require__(334);\n    var dpr = __webpack_require__(345).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(325);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(423);\n    var IntervalScale = __webpack_require__(352);\n    __webpack_require__(424);\n    __webpack_require__(422);\n    var Scale = __webpack_require__(344);\n\n    var numberUtil = __webpack_require__(328);\n    var zrUtil = __webpack_require__(325);\n    var textContain = __webpack_require__(342);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n    var Scale = __webpack_require__(344);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var clazz = __webpack_require__(336);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Style = __webpack_require__(373);\n\n    var Element = __webpack_require__(364);\n    var RectText = __webpack_require__(449);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var classUtil = __webpack_require__(336);\n    var modelUtil = __webpack_require__(333);\n    var ComponentModel = __webpack_require__(337);\n    var colorPaletteMixin = __webpack_require__(361);\n    var env = __webpack_require__(331);\n    var layout = __webpack_require__(338);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(335);\n    var DataDiffer = __webpack_require__(407);\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var symbolUtil = __webpack_require__(362);\n    var graphic = __webpack_require__(327);\n    var numberUtil = __webpack_require__(328);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(337);\n    var zrUtil = __webpack_require__(325);\n    var axisModelCreator = __webpack_require__(401);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(400));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(336);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(327);\n    var BoundingRect = __webpack_require__(334);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(346);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n    var modelUtil = __webpack_require__(333);\n    var zrUtil = __webpack_require__(325);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(369);\n    var Eventful = __webpack_require__(341);\n    var Transformable = __webpack_require__(461);\n    var Animatable = __webpack_require__(459);\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(432);\n    var color = __webpack_require__(340);\n    var util = __webpack_require__(325);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(345);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var BoundingRect = __webpack_require__(334);\n    var zrUtil = __webpack_require__(325);\n\n    var LRU = __webpack_require__(368);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(448);\n    var smoothBezier = __webpack_require__(447);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 375 */,\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(358);\n    var completeDimensions = __webpack_require__(408);\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var CoordinateSystem = __webpack_require__(350);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var echarts = __webpack_require__(326);\n\n    __webpack_require__(378);\n\n    __webpack_require__(392);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(338);\n    var axisHelper = __webpack_require__(351);\n\n    var zrUtil = __webpack_require__(325);\n    var Cartesian2D = __webpack_require__(404);\n    var Axis2D = __webpack_require__(402);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(405);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(350).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Visual mapping.\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var zrColor = __webpack_require__(340);\n    var linearMap = __webpack_require__(328).linearMap;\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n\n    /**\n     * @param {Object} option\n     * @param {string} [option.type] See visualHandlers.\n     * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n     * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n     *                                              required when mappingMethod is 'linear'\n     * @param {Array.<Object>=} [option.pieceList] [\n     *                                             {value: someValue},\n     *                                             {interval: [min1, max1], visual: {...}},\n     *                                             {interval: [min2, max2]}\n     *                                             ],\n     *                                            required when mappingMethod is 'piecewise'.\n     *                                            Visual for only each piece can be specified.\n     * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n     *                                            required when mappingMethod is 'category'.\n     *                                            If no option.categories, categories is set\n     *                                            as [0, 1, 2, ...].\n     * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n     * @param {(Array|Object|*)} [option.visual]  Visual data.\n     *                                            when mappingMethod is 'category',\n     *                                            visual data can be array or object\n     *                                            (like: {cate1: '#222', none: '#fff'})\n     *                                            or primary types (which represents\n     *                                            defualt category visual), otherwise visual\n     *                                            can be array or primary (which will be\n     *                                            normalized to array).\n     *\n     */\n    var VisualMapping = function (option) {\n        var mappingMethod = option.mappingMethod;\n        var visualType = option.type;\n\n        /**\n         * @readOnly\n         * @type {Object}\n         */\n        var thisOption = this.option = zrUtil.clone(option);\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        this.type = visualType;\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        this.mappingMethod = mappingMethod;\n\n        /**\n         * @private\n         * @type {Function}\n         */\n        this._normalizeData = normalizers[mappingMethod];\n\n        var visualHandler = visualHandlers[visualType];\n\n        /**\n         * @public\n         * @type {Function}\n         */\n        this.applyVisual = visualHandler.applyVisual;\n\n        /**\n         * @public\n         * @type {Function}\n         */\n        this.getColorMapper = visualHandler.getColorMapper;\n\n        /**\n         * @private\n         * @type {Function}\n         */\n        this._doMap = visualHandler._doMap[mappingMethod];\n\n        if (mappingMethod === 'piecewise') {\n            normalizeVisualRange(thisOption);\n            preprocessForPiecewise(thisOption);\n        }\n        else if (mappingMethod === 'category') {\n            thisOption.categories\n                ? preprocessForSpecifiedCategory(thisOption)\n                // categories is ordinal when thisOption.categories not specified,\n                // which need no more preprocess except normalize visual.\n                : normalizeVisualRange(thisOption, true);\n        }\n        else { // mappingMethod === 'linear' or 'fixed'\n            zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n            normalizeVisualRange(thisOption);\n        }\n    };\n\n    VisualMapping.prototype = {\n\n        constructor: VisualMapping,\n\n        mapValueToVisual: function (value) {\n            var normalized = this._normalizeData(value);\n            return this._doMap(normalized, value);\n        },\n\n        getNormalizer: function () {\n            return zrUtil.bind(this._normalizeData, this);\n        }\n    };\n\n    var visualHandlers = VisualMapping.visualHandlers = {\n\n        color: {\n\n            applyVisual: makeApplyVisual('color'),\n\n            /**\n             * Create a mapper function\n             * @return {Function}\n             */\n            getColorMapper: function () {\n                var thisOption = this.option;\n                var parsedVisual = zrUtil.map(thisOption.visual, zrColor.parse);\n\n                return zrUtil.bind(\n                    thisOption.mappingMethod === 'category'\n                        ? function (value, isNormalized) {\n                            !isNormalized && (value = this._normalizeData(value));\n                            return doMapCategory.call(this, value);\n                        }\n                        : function (value, isNormalized, out) {\n                            // If output rgb array\n                            // which will be much faster and useful in pixel manipulation\n                            var returnRGBArray = !!out;\n                            !isNormalized && (value = this._normalizeData(value));\n                            out = zrColor.fastMapToColor(value, parsedVisual, out);\n                            return returnRGBArray ? out : zrUtil.stringify(out, 'rgba');\n                        },\n                    this\n                );\n            },\n\n            _doMap: {\n                linear: function (normalized) {\n                    return zrColor.mapToColor(normalized, this.option.visual);\n                },\n                category: doMapCategory,\n                piecewise: function (normalized, value) {\n                    var result = getSpecifiedVisual.call(this, value);\n                    if (result == null) {\n                        result = zrColor.mapToColor(normalized, this.option.visual);\n                    }\n                    return result;\n                },\n                fixed: doMapFixed\n            }\n        },\n\n        colorHue: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, value);\n        }),\n\n        colorSaturation: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, null, value);\n        }),\n\n        colorLightness: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, null, null, value);\n        }),\n\n        colorAlpha: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyAlpha(color, value);\n        }),\n\n        opacity: {\n            applyVisual: makeApplyVisual('opacity'),\n            _doMap: makeDoMap([0, 1])\n        },\n\n        symbol: {\n            applyVisual: function (value, getter, setter) {\n                var symbolCfg = this.mapValueToVisual(value);\n                if (zrUtil.isString(symbolCfg)) {\n                    setter('symbol', symbolCfg);\n                }\n                else if (isObject(symbolCfg)) {\n                    for (var name in symbolCfg) {\n                        if (symbolCfg.hasOwnProperty(name)) {\n                            setter(name, symbolCfg[name]);\n                        }\n                    }\n                }\n            },\n            _doMap: {\n                linear: doMapToArray,\n                category: doMapCategory,\n                piecewise: function (normalized, value) {\n                    var result = getSpecifiedVisual.call(this, value);\n                    if (result == null) {\n                        result = doMapToArray.call(this, normalized);\n                    }\n                    return result;\n                },\n                fixed: doMapFixed\n            }\n        },\n\n        symbolSize: {\n            applyVisual: makeApplyVisual('symbolSize'),\n            _doMap: makeDoMap([0, 1])\n        }\n    };\n\n\n    function preprocessForPiecewise(thisOption) {\n        var pieceList = thisOption.pieceList;\n        thisOption.hasSpecialVisual = false;\n\n        zrUtil.each(pieceList, function (piece, index) {\n            piece.originIndex = index;\n            // piece.visual is \"result visual value\" but not\n            // a visual range, so it does not need to be normalized.\n            if (piece.visual != null) {\n                thisOption.hasSpecialVisual = true;\n            }\n        });\n    }\n\n    function preprocessForSpecifiedCategory(thisOption) {\n        // Hash categories.\n        var categories = thisOption.categories;\n        var visual = thisOption.visual;\n\n        var categoryMap = thisOption.categoryMap = {};\n        each(categories, function (cate, index) {\n            categoryMap[cate] = index;\n        });\n\n        // Process visual map input.\n        if (!zrUtil.isArray(visual)) {\n            var visualArr = [];\n\n            if (zrUtil.isObject(visual)) {\n                each(visual, function (v, cate) {\n                    var index = categoryMap[cate];\n                    visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n                });\n            }\n            else { // Is primary type, represents default visual.\n                visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n            }\n\n            visual = thisOption.visual = visualArr;\n        }\n\n        // Remove categories that has no visual,\n        // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n        for (var i = categories.length - 1; i >= 0; i--) {\n            if (visual[i] == null) {\n                delete categoryMap[categories[i]];\n                categories.pop();\n            }\n        }\n    }\n\n    function normalizeVisualRange(thisOption, isCategory) {\n        var visual = thisOption.visual;\n        var visualArr = [];\n\n        if (zrUtil.isObject(visual)) {\n            each(visual, function (v) {\n                visualArr.push(v);\n            });\n        }\n        else if (visual != null) {\n            visualArr.push(visual);\n        }\n\n        var doNotNeedPair = {color: 1, symbol: 1};\n\n        if (!isCategory\n            && visualArr.length === 1\n            && !doNotNeedPair.hasOwnProperty(thisOption.type)\n        ) {\n            // Do not care visualArr.length === 0, which is illegal.\n            visualArr[1] = visualArr[0];\n        }\n\n        thisOption.visual = visualArr;\n    }\n\n    function makePartialColorVisualHandler(applyValue) {\n        return {\n            applyVisual: function (value, getter, setter) {\n                value = this.mapValueToVisual(value);\n                // Must not be array value\n                setter('color', applyValue(getter('color'), value));\n            },\n            _doMap: makeDoMap([0, 1])\n        };\n    }\n\n    function doMapToArray(normalized) {\n        var visual = this.option.visual;\n        return visual[\n            Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))\n        ] || {};\n    }\n\n    function makeApplyVisual(visualType) {\n        return function (value, getter, setter) {\n            setter(visualType, this.mapValueToVisual(value));\n        };\n    }\n\n    function doMapCategory(normalized) {\n        var visual = this.option.visual;\n        return visual[\n            (this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX)\n                ? normalized % visual.length\n                : normalized\n        ];\n    }\n\n    function doMapFixed() {\n        return this.option.visual[0];\n    }\n\n    function makeDoMap(sourceExtent) {\n        return {\n            linear: function (normalized) {\n                return linearMap(normalized, sourceExtent, this.option.visual, true);\n            },\n            category: doMapCategory,\n            piecewise: function (normalized, value) {\n                var result = getSpecifiedVisual.call(this, value);\n                if (result == null) {\n                    result = linearMap(normalized, sourceExtent, this.option.visual, true);\n                }\n                return result;\n            },\n            fixed: doMapFixed\n        };\n    }\n\n    function getSpecifiedVisual(value) {\n        var thisOption = this.option;\n        var pieceList = thisOption.pieceList;\n        if (thisOption.hasSpecialVisual) {\n            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n            var piece = pieceList[pieceIndex];\n            if (piece && piece.visual) {\n                return piece.visual[this.type];\n            }\n        }\n    }\n\n\n    /**\n     * Normalizers by mapping methods.\n     */\n    var normalizers = {\n\n        linear: function (value) {\n            return linearMap(value, this.option.dataExtent, [0, 1], true);\n        },\n\n        piecewise: function (value) {\n            var pieceList = this.option.pieceList;\n            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n            if (pieceIndex != null) {\n                return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n            }\n        },\n\n        category: function (value) {\n            var index = this.option.categories\n                ? this.option.categoryMap[value]\n                : value; // ordinal\n            return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n        },\n\n        fixed: zrUtil.noop\n    };\n\n\n\n    /**\n     * List available visual types.\n     *\n     * @public\n     * @return {Array.<string>}\n     */\n    VisualMapping.listVisualTypes = function () {\n        var visualTypes = [];\n        zrUtil.each(visualHandlers, function (handler, key) {\n            visualTypes.push(key);\n        });\n        return visualTypes;\n    };\n\n    /**\n     * @public\n     */\n    VisualMapping.addVisualHandler = function (name, handler) {\n        visualHandlers[name] = handler;\n    };\n\n    /**\n     * @public\n     */\n    VisualMapping.isValidType = function (visualType) {\n        return visualHandlers.hasOwnProperty(visualType);\n    };\n\n    /**\n     * Convinent method.\n     * Visual can be Object or Array or primary type.\n     *\n     * @public\n     */\n    VisualMapping.eachVisual = function (visual, callback, context) {\n        if (zrUtil.isObject(visual)) {\n            zrUtil.each(visual, callback, context);\n        }\n        else {\n            callback.call(context, visual);\n        }\n    };\n\n    VisualMapping.mapVisual = function (visual, callback, context) {\n        var isPrimary;\n        var newVisual = zrUtil.isArray(visual)\n            ? []\n            : zrUtil.isObject(visual)\n            ? {}\n            : (isPrimary = true, null);\n\n        VisualMapping.eachVisual(visual, function (v, key) {\n            var newVal = callback.call(context, v, key);\n            isPrimary ? (newVisual = newVal) : (newVisual[key] = newVal);\n        });\n        return newVisual;\n    };\n\n    /**\n     * @public\n     * @param {Object} obj\n     * @return {Oject} new object containers visual values.\n     *                 If no visuals, return null.\n     */\n    VisualMapping.retrieveVisuals = function (obj) {\n        var ret = {};\n        var hasVisual;\n\n        obj && each(visualHandlers, function (h, visualType) {\n            if (obj.hasOwnProperty(visualType)) {\n                ret[visualType] = obj[visualType];\n                hasVisual = true;\n            }\n        });\n\n        return hasVisual ? ret : null;\n    };\n\n    /**\n     * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n     *\n     * @public\n     * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n     *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n     * @return {Array.<string>} Sorted visual types.\n     */\n    VisualMapping.prepareVisualTypes = function (visualTypes) {\n        if (isObject(visualTypes)) {\n            var types = [];\n            each(visualTypes, function (item, type) {\n                types.push(type);\n            });\n            visualTypes = types;\n        }\n        else if (zrUtil.isArray(visualTypes)) {\n            visualTypes = visualTypes.slice();\n        }\n        else {\n            return [];\n        }\n\n        visualTypes.sort(function (type1, type2) {\n            // color should be front of colorSaturation, colorAlpha, ...\n            // symbol and symbolSize do not matter.\n            return (type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0)\n                ? 1 : -1;\n        });\n\n        return visualTypes;\n    };\n\n    /**\n     * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n     * Other visuals are only depends on themself.\n     *\n     * @public\n     * @param {string} visualType1\n     * @param {string} visualType2\n     * @return {boolean}\n     */\n    VisualMapping.dependsOn = function (visualType1, visualType2) {\n        return visualType2 === 'color'\n            ? !!(visualType1 && visualType1.indexOf(visualType2) === 0)\n            : visualType1 === visualType2;\n    };\n\n    /**\n     * @param {number} value\n     * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n     *                         Always from small to big.\n     * @param {boolean} [findClosestWhenOutside=false]\n     * @return {number} index\n     */\n    VisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n        var possibleI;\n        var abs = Infinity;\n\n        // value has the higher priority.\n        for (var i = 0, len = pieceList.length; i < len; i++) {\n            var pieceValue = pieceList[i].value;\n            if (pieceValue != null) {\n                if (pieceValue === value) {\n                    return i;\n                }\n                findClosestWhenOutside && updatePossible(pieceValue, i);\n            }\n        }\n\n        for (var i = 0, len = pieceList.length; i < len; i++) {\n            var piece = pieceList[i];\n            var interval = piece.interval;\n            var close = piece.close;\n\n            if (interval) {\n                if (interval[0] === -Infinity) {\n                    if (littleThan(close[1], value, interval[1])) {\n                        return i;\n                    }\n                }\n                else if (interval[1] === Infinity) {\n                    if (littleThan(close[0], interval[0], value)) {\n                        return i;\n                    }\n                }\n                else if (\n                    littleThan(close[0], interval[0], value)\n                    && littleThan(close[1], value, interval[1])\n                ) {\n                    return i;\n                }\n                findClosestWhenOutside && updatePossible(interval[0], i);\n                findClosestWhenOutside && updatePossible(interval[1], i);\n            }\n        }\n\n        if (findClosestWhenOutside) {\n            return value === Infinity\n                ? pieceList.length - 1\n                : value === -Infinity\n                ? 0\n                : possibleI;\n        }\n\n        function updatePossible(val, index) {\n            var newAbs = Math.abs(val - value);\n            if (newAbs < abs) {\n                abs = newAbs;\n                possibleI = index;\n            }\n        }\n\n    };\n\n    function littleThan(close, a, b) {\n        return close ? a <= b : a < b;\n    }\n\n    module.exports = VisualMapping;\n\n\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Gradient = __webpack_require__(356);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 382 */,\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(327);\n    var Symbol = __webpack_require__(359);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(396);\n\n    __webpack_require__(397);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(326).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(326).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(346);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(336);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var echarts = __webpack_require__(326);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(388);\n    __webpack_require__(389);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(426), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(409), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(421), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(377);\n\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(376);\n    var SeriesModel = __webpack_require__(357);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(325);\n    var SymbolDraw = __webpack_require__(383);\n    var Symbol = __webpack_require__(359);\n    var lineAnimationDiff = __webpack_require__(390);\n    var graphic = __webpack_require__(327);\n    var modelUtil = __webpack_require__(333);\n    var polyHelper = __webpack_require__(391);\n    var ChartView = __webpack_require__(363);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(330);\n    var vec2 = __webpack_require__(329);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(360);\n\n    __webpack_require__(394);\n\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var graphic = __webpack_require__(327);\n    var Model = __webpack_require__(335);\n    var numberUtil = __webpack_require__(328);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(329);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n    var AxisBuilder = __webpack_require__(393);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(326).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var zrColor = __webpack_require__(340);\n    var eventUtil = __webpack_require__(343);\n    var formatUtil = __webpack_require__(332);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(331);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(326).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(395);\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var formatUtil = __webpack_require__(332);\n    var numberUtil = __webpack_require__(328);\n    var modelUtil = __webpack_require__(333);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(331);\n    var Model = __webpack_require__(335);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(326).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(328);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(325);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var axisHelper = __webpack_require__(351);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(399);\n    var zrUtil = __webpack_require__(325);\n    var ComponentModel = __webpack_require__(337);\n    var layout = __webpack_require__(338);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var Axis = __webpack_require__(398);\n    var axisLabelInterval = __webpack_require__(406);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(325);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var Cartesian = __webpack_require__(403);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(360);\n    var ComponentModel = __webpack_require__(337);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var axisHelper = __webpack_require__(351);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(325);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var Model = __webpack_require__(335);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(337);\n\n    var globalDefault = __webpack_require__(413);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(361));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var modelUtil = __webpack_require__(333);\n    var ComponentModel = __webpack_require__(337);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(349)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(349)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(349)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(342);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(325);\n    var compatStyle = __webpack_require__(420);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var Scale = __webpack_require__(344);\n    var numberUtil = __webpack_require__(328);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(352);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(325);\n    var Scale = __webpack_require__(344);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var formatUtil = __webpack_require__(332);\n\n    var IntervalScale = __webpack_require__(352);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(356);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(325);\n    var Draggable = __webpack_require__(460);\n\n    var Eventful = __webpack_require__(341);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(325);\n    var config = __webpack_require__(345);\n    var Style = __webpack_require__(373);\n    var Pattern = __webpack_require__(372);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(345);\n    var util = __webpack_require__(325);\n    var log = __webpack_require__(370);\n    var BoundingRect = __webpack_require__(334);\n    var timsort = __webpack_require__(354);\n\n    var Layer = __webpack_require__(428);\n\n    var requestAnimationFrame = __webpack_require__(366);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(371);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(325);\n    var env = __webpack_require__(331);\n\n    var Group = __webpack_require__(346);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(354);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(325);\n    var Dispatcher = __webpack_require__(343).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(366);\n\n    var Animator = __webpack_require__(365);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(433);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(367).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(339);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(347).CMD;\n    var line = __webpack_require__(436);\n    var cubic = __webpack_require__(435);\n    var quadratic = __webpack_require__(438);\n    var arc = __webpack_require__(434);\n    var normalizeRadian = __webpack_require__(367).normalizeRadian;\n    var curve = __webpack_require__(339);\n\n    var windingLine = __webpack_require__(439);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(339);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(343);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var curve = __webpack_require__(339);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(343);\n    var zrUtil = __webpack_require__(325);\n    var Eventful = __webpack_require__(341);\n    var env = __webpack_require__(331);\n    var GestureMgr = __webpack_require__(440);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(330);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var Gradient = __webpack_require__(356);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(355);\n    var zrUtil = __webpack_require__(325);\n    var textContain = __webpack_require__(342);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(329);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(329);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(342);\n    var BoundingRect = __webpack_require__(334);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(339);\n    var vec2 = __webpack_require__(329);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(374);\n\n    module.exports = __webpack_require__(330).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(374);\n\n    module.exports = __webpack_require__(330).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(446);\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(330).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(331);\n    var Path = __webpack_require__(330);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(365);\n    var util = __webpack_require__(325);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(370);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(348);\n    var vector = __webpack_require__(329);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(330);\n    var PathProxy = __webpack_require__(347);\n    var transformPath = __webpack_require__(463);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(347).CMD;\n    var vec2 = __webpack_require__(329);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(369);\n    var env = __webpack_require__(331);\n    var zrUtil = __webpack_require__(325);\n\n    var Handler = __webpack_require__(427);\n    var Storage = __webpack_require__(430);\n    var Animation = __webpack_require__(431);\n    var HandlerProxy = __webpack_require__(442);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(429)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n\n    __webpack_require__(378);\n\n    __webpack_require__(466);\n    __webpack_require__(467);\n\n    var barLayoutGrid = __webpack_require__(472);\n    var echarts = __webpack_require__(326);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(377);\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(468).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n    var helper = __webpack_require__(470);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(335).prototype, __webpack_require__(469));\n\n    var BarView = __webpack_require__(326).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(357);\n    var createListFromArray = __webpack_require__(376);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(349)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(326);\n    var graphic = __webpack_require__(327);\n    var layout = __webpack_require__(338);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 473 */,\n/* 474 */,\n/* 475 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] and be bigger then handleEnds[1].\n     *                                    handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *                                extent[0] should less or equals than extent[1].\n     * @param {string} mode 'rigid': Math.abs(handleEnds[0] - handleEnds[1]) remain unchanged,\n     *                      'cross' handleEnds[0] can be bigger then handleEnds[1],\n     *                      'push' handleEnds[0] can not be bigger then handleEnds[1],\n     *                              when they touch, one push other.\n     * @param {number} handleIndex If mode is 'rigid', handleIndex is not required.\n     * @param {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, mode, handleIndex) {\n        if (!delta) {\n            return handleEnds;\n        }\n\n        if (mode === 'rigid') {\n            delta = getRealDelta(delta, handleEnds, extent);\n            handleEnds[0] += delta;\n            handleEnds[1] += delta;\n        }\n        else {\n            delta = getRealDelta(delta, handleEnds[handleIndex], extent);\n            handleEnds[handleIndex] += delta;\n\n            if (mode === 'push' && handleEnds[0] > handleEnds[1]) {\n                handleEnds[1 - handleIndex] = handleEnds[handleIndex];\n            }\n        }\n\n        return handleEnds;\n\n        function getRealDelta(delta, handleEnds, extent) {\n            var handleMinMax = !handleEnds.length\n                ? [handleEnds, handleEnds]\n                : handleEnds.slice();\n            handleEnds[0] > handleEnds[1] && handleMinMax.reverse();\n\n            if (delta < 0 && handleMinMax[0] + delta < extent[0]) {\n                delta = extent[0] - handleMinMax[0];\n            }\n            if (delta > 0 && handleMinMax[1] + delta > extent[1]) {\n                delta = extent[1] - handleMinMax[1];\n            }\n            return delta;\n        }\n    };\n\n\n/***/ }),\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Controller visual map model\n */\n\n\n    var echarts = __webpack_require__(326);\n    var zrUtil = __webpack_require__(325);\n    var env = __webpack_require__(331);\n    var visualDefault = __webpack_require__(487);\n    var VisualMapping = __webpack_require__(380);\n    var visualSolution = __webpack_require__(488);\n    var mapVisual = VisualMapping.mapVisual;\n    var modelUtil = __webpack_require__(333);\n    var eachVisual = VisualMapping.eachVisual;\n    var numberUtil = __webpack_require__(328);\n    var isArray = zrUtil.isArray;\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n    var linearMap = numberUtil.linearMap;\n    var noop = zrUtil.noop;\n\n    var DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\n\n    var VisualMapModel = echarts.extendComponentModel({\n\n        type: 'visualMap',\n\n        dependencies: ['series'],\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        stateList: ['inRange', 'outOfRange'],\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        replacableOptionKeys: [\n            'inRange', 'outOfRange', 'target', 'controller', 'color'\n        ],\n\n        /**\n         * [lowerBound, upperBound]\n         *\n         * @readOnly\n         * @type {Array.<number>}\n         */\n        dataBound: [-Infinity, Infinity],\n\n        /**\n         * @readOnly\n         * @type {string|Object}\n         */\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            zlevel: 0,\n            z: 4,\n\n            seriesIndex: null,       // 所控制的series indices，默认所有有value的series.\n\n                                    // set min: 0, max: 200, only for campatible with ec2.\n                                    // In fact min max should not have default value.\n            min: 0,                 // min value, must specified if pieces is not specified.\n            max: 200,               // max value, must specified if pieces is not specified.\n\n            dimension: null,\n            inRange: null,          // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n                                    // 'symbol', 'symbolSize'\n            outOfRange: null,       // 'color', 'colorHue', 'colorSaturation',\n                                    // 'colorLightness', 'colorAlpha',\n                                    // 'symbol', 'symbolSize'\n\n            left: 0,                // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n            right: null,            // The same as left.\n            top: null,              // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n            bottom: 0,              // The same as top.\n\n            itemWidth: null,\n            itemHeight: null,\n            inverse: false,\n            orient: 'vertical',        // 'horizontal' ¦ 'vertical'\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderColor: '#ccc',       // 值域边框颜色\n            contentColor: '#5793f3',\n            inactiveColor: '#aaa',\n            borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）\n            padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，\n                                       // 接受数组分别设定上右下左边距，同css\n            textGap: 10,               //\n            precision: 0,              // 小数精度，默认为0，无小数点\n            color: null,               //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n\n            formatter: null,\n            text: null,                // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n            textStyle: {\n                color: '#333'          // 值域文字颜色\n            }\n        },\n\n        /**\n         * @protected\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * @private\n             * @type {Array.<number>}\n             */\n            this._dataExtent;\n\n            /**\n             * @readOnly\n             */\n            this.targetVisuals = {};\n\n            /**\n             * @readOnly\n             */\n            this.controllerVisuals = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * [width, height]\n             * @readOnly\n             * @type {Array.<number>}\n             */\n            this.itemSize;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        /**\n         * @protected\n         */\n        optionUpdated: function (newOption, isInit) {\n            var thisOption = this.option;\n\n            // FIXME\n            // necessary?\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            !isInit && visualSolution.replaceVisualOption(\n                thisOption, newOption, this.replacableOptionKeys\n            );\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this.resetItemSize();\n\n            this.completeVisualOption();\n        },\n\n        /**\n         * @protected\n         */\n        resetVisual: function (supplementVisualOption) {\n            var stateList = this.stateList;\n            supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n\n            this.controllerVisuals = visualSolution.createVisualMappings(\n                this.option.controller, stateList, supplementVisualOption\n            );\n            this.targetVisuals = visualSolution.createVisualMappings(\n                this.option.target, stateList, supplementVisualOption\n            );\n        },\n\n\n        /**\n         * @protected\n         */\n        resetTargetSeries: function () {\n            var thisOption = this.option;\n            var allSeriesIndex = thisOption.seriesIndex == null;\n            thisOption.seriesIndex = allSeriesIndex\n                ? [] : modelUtil.normalizeToArray(thisOption.seriesIndex);\n\n            allSeriesIndex && this.ecModel.eachSeries(function (seriesModel, index) {\n                thisOption.seriesIndex.push(index);\n            });\n        },\n\n        /**\n         * @public\n         */\n        eachTargetSeries: function (callback, context) {\n            zrUtil.each(this.option.seriesIndex, function (seriesIndex) {\n                callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n            }, this);\n        },\n\n        /**\n         * @pubilc\n         */\n        isTargetSeries: function (seriesModel) {\n            var is = false;\n            this.eachTargetSeries(function (model) {\n                model === seriesModel && (is = true);\n            });\n            return is;\n        },\n\n        /**\n         * @example\n         * this.formatValueText(someVal); // format single numeric value to text.\n         * this.formatValueText(someVal, true); // format single category value to text.\n         * this.formatValueText([min, max]); // format numeric min-max to text.\n         * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n         * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n         *\n         * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n         * @param {boolean} [isCategory=false] Only available when value is number.\n         * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n         * @return {string}\n         * @protected\n         */\n        formatValueText: function(value, isCategory, edgeSymbols) {\n            var option = this.option;\n            var precision = option.precision;\n            var dataBound = this.dataBound;\n            var formatter = option.formatter;\n            var isMinMax;\n            var textValue;\n            edgeSymbols = edgeSymbols || ['<', '>'];\n\n            if (zrUtil.isArray(value)) {\n                value = value.slice();\n                isMinMax = true;\n            }\n\n            textValue = isCategory\n                ? value\n                : (isMinMax\n                    ? [toFixed(value[0]), toFixed(value[1])]\n                    : toFixed(value)\n                );\n\n            if (zrUtil.isString(formatter)) {\n                return formatter\n                    .replace('{value}', isMinMax ? textValue[0] : textValue)\n                    .replace('{value2}', isMinMax ? textValue[1] : textValue);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                return isMinMax\n                    ? formatter(value[0], value[1])\n                    : formatter(value);\n            }\n\n            if (isMinMax) {\n                if (value[0] === dataBound[0]) {\n                    return edgeSymbols[0] + ' ' + textValue[1];\n                }\n                else if (value[1] === dataBound[1]) {\n                    return edgeSymbols[1] + ' ' + textValue[0];\n                }\n                else {\n                    return textValue[0] + ' - ' + textValue[1];\n                }\n            }\n            else { // Format single value (includes category case).\n                return textValue;\n            }\n\n            function toFixed(val) {\n                return val === dataBound[0]\n                    ? 'min'\n                    : val === dataBound[1]\n                    ? 'max'\n                    : (+val).toFixed(precision);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        resetExtent: function () {\n            var thisOption = this.option;\n\n            // Can not calculate data extent by data here.\n            // Because series and data may be modified in processing stage.\n            // So we do not support the feature \"auto min/max\".\n\n            var extent = asc([thisOption.min, thisOption.max]);\n\n            this._dataExtent = extent;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/data/List} list\n         * @return {string} Concrete dimention. If return null/undefined,\n         *                  no dimension used.\n         */\n        getDataDimension: function (list) {\n            var optDim = this.option.dimension;\n            return optDim != null\n                ? optDim : list.dimensions.length - 1;\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        getExtent: function () {\n            return this._dataExtent.slice();\n        },\n\n        /**\n         * @protected\n         */\n        completeVisualOption: function () {\n            var thisOption = this.option;\n            var base = {inRange: thisOption.inRange, outOfRange: thisOption.outOfRange};\n\n            var target = thisOption.target || (thisOption.target = {});\n            var controller = thisOption.controller || (thisOption.controller = {});\n\n            zrUtil.merge(target, base); // Do not override\n            zrUtil.merge(controller, base); // Do not override\n\n            var isCategory = this.isCategory();\n\n            completeSingle.call(this, target);\n            completeSingle.call(this, controller);\n            completeInactive.call(this, target, 'inRange', 'outOfRange');\n            // completeInactive.call(this, target, 'outOfRange', 'inRange');\n            completeController.call(this, controller);\n\n            function completeSingle(base) {\n                // Compatible with ec2 dataRange.color.\n                // The mapping order of dataRange.color is: [high value, ..., low value]\n                // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n                // Notice: ec2 has no inverse.\n                if (isArray(thisOption.color)\n                    // If there has been inRange: {symbol: ...}, adding color is a mistake.\n                    // So adding color only when no inRange defined.\n                    && !base.inRange\n                ) {\n                    base.inRange = {color: thisOption.color.slice().reverse()};\n                }\n\n                // Compatible with previous logic, always give a defautl color, otherwise\n                // simple config with no inRange and outOfRange will not work.\n                // Originally we use visualMap.color as the default color, but setOption at\n                // the second time the default color will be erased. So we change to use\n                // constant DEFAULT_COLOR.\n                // If user do not want the defualt color, set inRange: {color: null}.\n                base.inRange = base.inRange || {color: DEFAULT_COLOR};\n\n                // If using shortcut like: {inRange: 'symbol'}, complete default value.\n                each(this.stateList, function (state) {\n                    var visualType = base[state];\n\n                    if (zrUtil.isString(visualType)) {\n                        var defa = visualDefault.get(visualType, 'active', isCategory);\n                        if (defa) {\n                            base[state] = {};\n                            base[state][visualType] = defa;\n                        }\n                        else {\n                            // Mark as not specified.\n                            delete base[state];\n                        }\n                    }\n                }, this);\n            }\n\n            function completeInactive(base, stateExist, stateAbsent) {\n                var optExist = base[stateExist];\n                var optAbsent = base[stateAbsent];\n\n                if (optExist && !optAbsent) {\n                    optAbsent = base[stateAbsent] = {};\n                    each(optExist, function (visualData, visualType) {\n                        if (!VisualMapping.isValidType(visualType)) {\n                            return;\n                        }\n\n                        var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n                        if (defa != null) {\n                            optAbsent[visualType] = defa;\n\n                            // Compatibable with ec2:\n                            // Only inactive color to rgba(0,0,0,0) can not\n                            // make label transparent, so use opacity also.\n                            if (visualType === 'color'\n                                && !optAbsent.hasOwnProperty('opacity')\n                                && !optAbsent.hasOwnProperty('colorAlpha')\n                            ) {\n                                optAbsent.opacity = [0, 0];\n                            }\n                        }\n                    });\n                }\n            }\n\n            function completeController(controller) {\n                var symbolExists = (controller.inRange || {}).symbol\n                    || (controller.outOfRange || {}).symbol;\n                var symbolSizeExists = (controller.inRange || {}).symbolSize\n                    || (controller.outOfRange || {}).symbolSize;\n                var inactiveColor = this.get('inactiveColor');\n\n                each(this.stateList, function (state) {\n\n                    var itemSize = this.itemSize;\n                    var visuals = controller[state];\n\n                    // Set inactive color for controller if no other color\n                    // attr (like colorAlpha) specified.\n                    if (!visuals) {\n                        visuals = controller[state] = {\n                            color: isCategory ? inactiveColor : [inactiveColor]\n                        };\n                    }\n\n                    // Consistent symbol and symbolSize if not specified.\n                    if (visuals.symbol == null) {\n                        visuals.symbol = symbolExists\n                            && zrUtil.clone(symbolExists)\n                            || (isCategory ? 'roundRect' : ['roundRect']);\n                    }\n                    if (visuals.symbolSize == null) {\n                        visuals.symbolSize = symbolSizeExists\n                            && zrUtil.clone(symbolSizeExists)\n                            || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n                    }\n\n                    // Filter square and none.\n                    visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n                        return (symbol === 'none' || symbol === 'square') ? 'roundRect' : symbol;\n                    });\n\n                    // Normalize symbolSize\n                    var symbolSize = visuals.symbolSize;\n\n                    if (symbolSize != null) {\n                        var max = -Infinity;\n                        // symbolSize can be object when categories defined.\n                        eachVisual(symbolSize, function (value) {\n                            value > max && (max = value);\n                        });\n                        visuals.symbolSize = mapVisual(symbolSize, function (value) {\n                            return linearMap(value, [0, max], [0, itemSize[0]], true);\n                        });\n                    }\n\n                }, this);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        resetItemSize: function () {\n            this.itemSize = [\n                parseFloat(this.get('itemWidth')),\n                parseFloat(this.get('itemHeight'))\n            ];\n        },\n\n        /**\n         * @public\n         */\n        isCategory: function () {\n            return !!this.option.categories;\n        },\n\n        /**\n         * @public\n         * @abstract\n         */\n        setSelected: noop,\n\n        /**\n         * @public\n         * @abstract\n         * @param {*|module:echarts/data/List} valueOrData\n         * @param {number} dataIndex\n         * @return {string} state See this.stateList\n         */\n        getValueState: noop,\n\n        /**\n         * FIXME\n         * Do not publish to thirt-part-dev temporarily\n         * util the interface is stable. (Should it return\n         * a function but not visual meta?)\n         *\n         * @pubilc\n         * @abstract\n         * @param {Function} getColorVisual\n         *        params: value, valueState\n         *        return: color\n         * @return {Object} visualMeta\n         *        should includes {stops, outerColors}\n         *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n         */\n        getVisualMeta: noop\n\n    });\n\n    module.exports = VisualMapModel;\n\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n    var formatUtil = __webpack_require__(332);\n    var layout = __webpack_require__(338);\n    var echarts = __webpack_require__(326);\n    var VisualMapping = __webpack_require__(380);\n\n    module.exports = echarts.extendComponentView({\n\n        type: 'visualMap',\n\n        /**\n         * @readOnly\n         * @type {Object}\n         */\n        autoPositionValues: {left: 1, right: 1, top: 1, bottom: 1},\n\n        init: function (ecModel, api) {\n            /**\n             * @readOnly\n             * @type {module:echarts/model/Global}\n             */\n            this.ecModel = ecModel;\n\n            /**\n             * @readOnly\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this.api = api;\n\n            /**\n             * @readOnly\n             * @type {module:echarts/component/visualMap/visualMapModel}\n             */\n            this.visualMapModel;\n        },\n\n        /**\n         * @protected\n         */\n        render: function (visualMapModel, ecModel, api, payload) {\n            this.visualMapModel = visualMapModel;\n\n            if (visualMapModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            this.doRender.apply(this, arguments);\n        },\n\n        /**\n         * @protected\n         */\n        renderBackground: function (group) {\n            var visualMapModel = this.visualMapModel;\n            var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n            var rect = group.getBoundingRect();\n\n            group.add(new graphic.Rect({\n                z2: -1, // Lay background rect on the lowest layer.\n                silent: true,\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[3] + padding[1],\n                    height: rect.height + padding[0] + padding[2]\n                },\n                style: {\n                    fill: visualMapModel.get('backgroundColor'),\n                    stroke: visualMapModel.get('borderColor'),\n                    lineWidth: visualMapModel.get('borderWidth')\n                }\n            }));\n        },\n\n        /**\n         * @protected\n         * @param {number} targetValue can be Infinity or -Infinity\n         * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n         * @param {Object} [opts]\n         * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n         * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n         * @return {*} Visual value.\n         */\n        getControllerVisual: function (targetValue, visualCluster, opts) {\n            opts = opts || {};\n\n            var forceState = opts.forceState;\n            var visualMapModel = this.visualMapModel;\n            var visualObj = {};\n\n            // Default values.\n            if (visualCluster === 'symbol') {\n                visualObj.symbol = visualMapModel.get('itemSymbol');\n            }\n            if (visualCluster === 'color') {\n                var defaultColor = visualMapModel.get('contentColor');\n                visualObj.color = defaultColor;\n            }\n\n            function getter(key) {\n                return visualObj[key];\n            }\n\n            function setter(key, value) {\n                visualObj[key] = value;\n            }\n\n            var mappings = visualMapModel.controllerVisuals[\n                forceState || visualMapModel.getValueState(targetValue)\n            ];\n            var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n\n            zrUtil.each(visualTypes, function (type) {\n                var visualMapping = mappings[type];\n                if (opts.convertOpacityToAlpha && type === 'opacity') {\n                    type = 'colorAlpha';\n                    visualMapping = mappings.__alphaForOpacity;\n                }\n                if (VisualMapping.dependsOn(type, visualCluster)) {\n                    visualMapping && visualMapping.applyVisual(\n                        targetValue, getter, setter\n                    );\n                }\n            });\n\n            return visualObj[visualCluster];\n        },\n\n        /**\n         * @protected\n         */\n        positionGroup: function (group) {\n            var model = this.visualMapModel;\n            var api = this.api;\n\n            layout.positionElement(\n                group,\n                model.getBoxLayoutParams(),\n                {width: api.getWidth(), height: api.getHeight()}\n            );\n        },\n\n        /**\n         * @protected\n         * @abstract\n         */\n        doRender: zrUtil.noop\n\n    });\n\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(325);\n    var layout = __webpack_require__(338);\n\n    var helper = {\n\n        /**\n         * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Array.<number>} itemSize always [short, long]\n         * @return {string} 'left' or 'right' or 'top' or 'bottom'\n         */\n        getItemAlign: function (visualMapModel, api, itemSize) {\n            var modelOption = visualMapModel.option;\n            var itemAlign = modelOption.align;\n\n            if (itemAlign != null && itemAlign !== 'auto') {\n                return itemAlign;\n            }\n\n            // Auto decision align.\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n\n            var paramsSet = [\n                ['left', 'right', 'width'],\n                ['top', 'bottom', 'height']\n            ];\n            var reals = paramsSet[realIndex];\n            var fakeValue = [0, null, 10];\n\n            var layoutInput = {};\n            for (var i = 0; i < 3; i++) {\n                layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n                layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n            }\n\n            var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n            var rect = layout.getLayoutRect(layoutInput, ecSize, modelOption.padding);\n\n            return reals[\n                (rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5\n                    < ecSize[rParam[1]] * 0.5 ? 0 : 1\n            ];\n        },\n\n        /**\n         * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n         * dataIndexInside means filtered index.\n         */\n        convertDataIndex: function (batch) {\n            zrUtil.each(batch || [], function (batchItem) {\n                if (batch.dataIndex != null) {\n                    batch.dataIndexInside = batch.dataIndex;\n                    batch.dataIndex = null;\n                }\n            });\n            return batch;\n        }\n\n    };\n\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file VisualMap preprocessor\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        var visualMap = option && option.visualMap;\n\n        if (!zrUtil.isArray(visualMap)) {\n            visualMap = visualMap ? [visualMap] : [];\n        }\n\n        each(visualMap, function (opt) {\n            if (!opt) {\n                return;\n            }\n\n            // rename splitList to pieces\n            if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n                opt.pieces = opt.splitList;\n                delete opt.splitList;\n            }\n\n            var pieces = opt.pieces;\n            if (pieces && zrUtil.isArray(pieces)) {\n                each(pieces, function (piece) {\n                    if (zrUtil.isObject(piece)) {\n                        if (has(piece, 'start') && !has(piece, 'min')) {\n                            piece.min = piece.start;\n                        }\n                        if (has(piece, 'end') && !has(piece, 'max')) {\n                            piece.max = piece.end;\n                        }\n                    }\n                });\n            }\n        });\n    };\n\n    function has(obj, name) {\n        return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n    }\n\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(337).registerSubTypeDefaulter('visualMap', function (option) {\n        // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n        return (\n                !option.categories\n                && (\n                    !(\n                        option.pieces\n                            ? option.pieces.length > 0\n                            : option.splitNumber > 0\n                    )\n                    || option.calculable\n                )\n            )\n            ? 'continuous' : 'piecewise';\n    });\n\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data range visual coding.\n */\n\n\n    var echarts = __webpack_require__(326);\n    var visualSolution = __webpack_require__(488);\n    var VisualMapping = __webpack_require__(380);\n    var zrUtil = __webpack_require__(325);\n\n    echarts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n        ecModel.eachComponent('visualMap', function (visualMapModel) {\n            processSingleVisualMap(visualMapModel, ecModel);\n        });\n\n        prepareVisualMeta(ecModel);\n    });\n\n    function processSingleVisualMap(visualMapModel, ecModel) {\n        visualMapModel.eachTargetSeries(function (seriesModel) {\n            var data = seriesModel.getData();\n\n            visualSolution.applyVisual(\n                visualMapModel.stateList,\n                visualMapModel.targetVisuals,\n                data,\n                visualMapModel.getValueState,\n                visualMapModel,\n                visualMapModel.getDataDimension(data)\n            );\n        });\n    }\n\n    // Only support color.\n    function prepareVisualMeta(ecModel) {\n        ecModel.eachSeries(function (seriesModel) {\n            var data = seriesModel.getData();\n            var visualMetaList = [];\n\n            ecModel.eachComponent('visualMap', function (visualMapModel) {\n                if (visualMapModel.isTargetSeries(seriesModel)) {\n                    var visualMeta = visualMapModel.getVisualMeta(\n                        zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)\n                    ) || {stops: [], outerColors: []};\n                    visualMeta.dimension = visualMapModel.getDataDimension(data);\n                    visualMetaList.push(visualMeta);\n                }\n            });\n\n            // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n            seriesModel.getData().setVisual('visualMeta', visualMetaList);\n        });\n    }\n\n    // FIXME\n    // performance and export for heatmap?\n    // value can be Infinity or -Infinity\n    function getColorVisual(seriesModel, visualMapModel, value, valueState) {\n        var mappings = visualMapModel.targetVisuals[valueState];\n        var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n        var resultVisual = {\n            color: seriesModel.getData().getVisual('color') // default color.\n        };\n\n        for (var i = 0, len = visualTypes.length; i < len; i++) {\n            var type = visualTypes[i];\n            var mapping = mappings[\n                type === 'opacity' ? '__alphaForOpacity' : type\n            ];\n            mapping && mapping.applyVisual(value, getVisual, setVisual);\n        }\n\n        return resultVisual.color;\n\n        function getVisual(key) {\n            return resultVisual[key];\n        }\n\n        function setVisual(key, value) {\n            resultVisual[key] = value;\n        }\n    }\n\n\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data range action\n */\n\n\n    var echarts = __webpack_require__(326);\n\n    var actionInfo = {\n        type: 'selectDataRange',\n        event: 'dataRangeSelected',\n        // FIXME use updateView appears wrong\n        update: 'update'\n    };\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n\n        ecModel.eachComponent({mainType: 'visualMap', query: payload}, function (model) {\n            model.setSelected(payload.selected);\n        });\n\n    });\n\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Visual mapping.\n */\n\n\n    var zrUtil = __webpack_require__(325);\n\n    var visualDefault = {\n\n        /**\n         * @public\n         */\n        get: function (visualType, key, isCategory) {\n            var value = zrUtil.clone(\n                (defaultOption[visualType] || {})[key]\n            );\n\n            return isCategory\n                ? (zrUtil.isArray(value) ? value[value.length - 1] : value)\n                : value;\n        }\n\n    };\n\n    var defaultOption = {\n\n        color: {\n            active: ['#006edd', '#e0ffff'],\n            inactive: ['rgba(0,0,0,0)']\n        },\n\n        colorHue: {\n            active: [0, 360],\n            inactive: [0, 0]\n        },\n\n        colorSaturation: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        colorLightness: {\n            active: [0.9, 0.5],\n            inactive: [0, 0]\n        },\n\n        colorAlpha: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        opacity: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        symbol: {\n            active: ['circle', 'roundRect', 'diamond'],\n            inactive: ['none']\n        },\n\n        symbolSize: {\n            active: [10, 50],\n            inactive: [0, 0]\n        }\n    };\n\n    module.exports = visualDefault;\n\n\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Visual solution, for consistent option specification.\n */\n\n\n    var zrUtil = __webpack_require__(325);\n    var VisualMapping = __webpack_require__(380);\n    var each = zrUtil.each;\n\n    function hasKeys(obj) {\n        if (obj) {\n            for (var name in obj){\n                if (obj.hasOwnProperty(name)) {\n                    return true;\n                }\n            }\n        }\n    }\n\n    var visualSolution = {\n\n        /**\n         * @param {Object} option\n         * @param {Array.<string>} stateList\n         * @param {Function} [supplementVisualOption]\n         * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n         */\n        createVisualMappings: function (option, stateList, supplementVisualOption) {\n            var visualMappings = {};\n\n            each(stateList, function (state) {\n                var mappings = visualMappings[state] = createMappings();\n\n                each(option[state], function (visualData, visualType) {\n                    if (!VisualMapping.isValidType(visualType)) {\n                        return;\n                    }\n                    var mappingOption = {\n                        type: visualType,\n                        visual: visualData\n                    };\n                    supplementVisualOption && supplementVisualOption(mappingOption, state);\n                    mappings[visualType] = new VisualMapping(mappingOption);\n\n                    // Prepare a alpha for opacity, for some case that opacity\n                    // is not supported, such as rendering using gradient color.\n                    if (visualType === 'opacity') {\n                        mappingOption = zrUtil.clone(mappingOption);\n                        mappingOption.type = 'colorAlpha';\n                        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n                    }\n                });\n            });\n\n            return visualMappings;\n\n            function createMappings() {\n                var Creater = function () {};\n                // Make sure hidden fields will not be visited by\n                // object iteration (with hasOwnProperty checking).\n                Creater.prototype.__hidden = Creater.prototype;\n                var obj = new Creater();\n                return obj;\n            }\n        },\n\n        /**\n         * @param {Object} thisOption\n         * @param {Object} newOption\n         * @param {Array.<string>} keys\n         */\n        replaceVisualOption: function (thisOption, newOption, keys) {\n            // Visual attributes merge is not supported, otherwise it\n            // brings overcomplicated merge logic. See #2853. So if\n            // newOption has anyone of these keys, all of these keys\n            // will be reset. Otherwise, all keys remain.\n            var has;\n            zrUtil.each(keys, function (key) {\n                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n                    has = true;\n                }\n            });\n            has && zrUtil.each(keys, function (key) {\n                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n                    thisOption[key] = zrUtil.clone(newOption[key]);\n                }\n                else {\n                    delete thisOption[key];\n                }\n            });\n        },\n\n        /**\n         * @param {Array.<string>} stateList\n         * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n         * @param {module:echarts/data/List} list\n         * @param {Function} getValueState param: valueOrIndex, return: state.\n         * @param {object} [scope] Scope for getValueState\n         * @param {string} [dimension] Concrete dimension, if used.\n         */\n        applyVisual: function (stateList, visualMappings, data, getValueState, scope, dimension) {\n            var visualTypesMap = {};\n            zrUtil.each(stateList, function (state) {\n                var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n                visualTypesMap[state] = visualTypes;\n            });\n\n            var dataIndex;\n\n            function getVisual(key) {\n                return data.getItemVisual(dataIndex, key);\n            }\n\n            function setVisual(key, value) {\n                data.setItemVisual(dataIndex, key, value);\n            }\n\n            if (dimension == null) {\n                data.each(eachItem, true);\n            }\n            else {\n                data.each([dimension], eachItem, true);\n            }\n\n            function eachItem(valueOrIndex, index) {\n                dataIndex = dimension == null ? valueOrIndex : index;\n\n                var rawDataItem = data.getRawDataItem(dataIndex);\n                // Consider performance\n                if (rawDataItem && rawDataItem.visualMap === false) {\n                    return;\n                }\n\n                var valueState = getValueState.call(scope, valueOrIndex);\n                var mappings = visualMappings[valueState];\n                var visualTypes = visualTypesMap[valueState];\n\n                for (var i = 0, len = visualTypes.length; i < len; i++) {\n                    var type = visualTypes[i];\n                    mappings[type] && mappings[type].applyVisual(\n                        valueOrIndex, getVisual, setVisual\n                    );\n                }\n            }\n        }\n    };\n\n    module.exports = visualSolution;\n\n\n\n/***/ }),\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */,\n/* 495 */,\n/* 496 */,\n/* 497 */,\n/* 498 */,\n/* 499 */,\n/* 500 */,\n/* 501 */,\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * visualMap component entry\n */\n\n\n    __webpack_require__(533);\n    __webpack_require__(534);\n\n\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var VisualMapModel = __webpack_require__(480);\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n\n    // Constant\n    var DEFAULT_BAR_BOUND = [20, 140];\n\n    var ContinuousModel = VisualMapModel.extend({\n\n        type: 'visualMap.continuous',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            align: 'auto',          // 'auto', 'left', 'right', 'top', 'bottom'\n            calculable: false,      // This prop effect default component type determine,\n                                    // See echarts/component/visualMap/typeDefaulter.\n            range: null,            // selected range. In default case `range` is [min, max]\n                                    // and can auto change along with modification of min max,\n                                    // util use specifid a range.\n            realtime: true,         // Whether realtime update.\n            itemHeight: null,       // The length of the range control edge.\n            itemWidth: null,        // The length of the other side.\n            hoverLink: true,        // Enable hover highlight.\n            hoverLinkDataSize: null,// The size of hovered data.\n            hoverLinkOnHandle: true // Whether trigger hoverLink when hover handle.\n        },\n\n        /**\n         * @override\n         */\n        optionUpdated: function (newOption, isInit) {\n            ContinuousModel.superApply(this, 'optionUpdated', arguments);\n\n            this.resetTargetSeries();\n            this.resetExtent();\n\n            this.resetVisual(function (mappingOption) {\n                mappingOption.mappingMethod = 'linear';\n                mappingOption.dataExtent = this.getExtent();\n            });\n\n            this._resetRange();\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        resetItemSize: function () {\n            ContinuousModel.superApply(this, 'resetItemSize', arguments);\n\n            var itemSize = this.itemSize;\n\n            this._orient === 'horizontal' && itemSize.reverse();\n\n            (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n            (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n        },\n\n        /**\n         * @private\n         */\n        _resetRange: function () {\n            var dataExtent = this.getExtent();\n            var range = this.option.range;\n\n            if (!range || range.auto) {\n                // `range` should always be array (so we dont use other\n                // value like 'auto') for user-friend. (consider getOption).\n                dataExtent.auto = 1;\n                this.option.range = dataExtent;\n            }\n            else if (zrUtil.isArray(range)) {\n                if (range[0] > range[1]) {\n                    range.reverse();\n                }\n                range[0] = Math.max(range[0], dataExtent[0]);\n                range[1] = Math.min(range[1], dataExtent[1]);\n            }\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        completeVisualOption: function () {\n            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n\n            zrUtil.each(this.stateList, function (state) {\n                var symbolSize = this.option.controller[state].symbolSize;\n                if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n                    symbolSize[0] = 0; // For good looking.\n                }\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        setSelected: function (selected) {\n            this.option.range = selected.slice();\n            this._resetRange();\n        },\n\n        /**\n         * @public\n         */\n        getSelected: function () {\n            var dataExtent = this.getExtent();\n\n            var dataInterval = numberUtil.asc(\n                (this.get('range') || []).slice()\n            );\n\n            // Clamp\n            dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n            dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n            dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n            dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n\n            return dataInterval;\n        },\n\n        /**\n         * @override\n         */\n        getValueState: function (value) {\n            var range = this.option.range;\n            var dataExtent = this.getExtent();\n\n            // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n            // range[1] is processed likewise.\n            return (\n                (range[0] <= dataExtent[0] || range[0] <= value)\n                && (range[1] >= dataExtent[1] || value <= range[1])\n            ) ? 'inRange' : 'outOfRange';\n        },\n\n        /**\n         * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n         */\n        findTargetDataIndices: function (range) {\n            var result = [];\n\n            this.eachTargetSeries(function (seriesModel) {\n                var dataIndices = [];\n                var data = seriesModel.getData();\n\n                data.each(this.getDataDimension(data), function (value, dataIndex) {\n                    range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n                }, true, this);\n\n                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\n            }, this);\n\n            return result;\n        },\n\n        /**\n         * @implement\n         */\n        getVisualMeta: function (getColorVisual) {\n            var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n            var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n            var stops = [];\n\n            function setStop(value, valueState) {\n                stops.push({\n                    value: value,\n                    color: getColorVisual(value, valueState)\n                });\n            }\n\n            // Format to: outOfRange -- inRange -- outOfRange.\n            var iIdx = 0;\n            var oIdx = 0;\n            var iLen = iVals.length;\n            var oLen = oVals.length;\n\n            for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n                // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n                if (oVals[oIdx] < iVals[iIdx]) {\n                    setStop(oVals[oIdx], 'outOfRange');\n                }\n            }\n            for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n                // If range is full, value beyond min, max will be clamped.\n                // make a singularity\n                first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n                setStop(iVals[iIdx], 'inRange');\n            }\n            for (var first = 1; oIdx < oLen; oIdx++) {\n                if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n                    // make a singularity\n                    if (first) {\n                        stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n                        first = 0;\n                    }\n                    setStop(oVals[oIdx], 'outOfRange');\n                }\n            }\n\n            var stopsLen = stops.length;\n\n            return {\n                stops: stops,\n                outerColors: [\n                    stopsLen ? stops[0].color : 'transparent',\n                    stopsLen ? stops[stopsLen - 1].color : 'transparent'\n                ]\n            };\n        }\n\n    });\n\n    function getColorStopValues(visualMapModel, valueState, dataExtent) {\n        if (dataExtent[0] === dataExtent[1]) {\n            return dataExtent.slice();\n        }\n\n        // When using colorHue mapping, it is not linear color any more.\n        // Moreover, canvas gradient seems not to be accurate linear.\n        // FIXME\n        // Should be arbitrary value 100? or based on pixel size?\n        var count = 200;\n        var step = (dataExtent[1] - dataExtent[0]) / count;\n\n        var value = dataExtent[0];\n        var stopValues = [];\n        for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n            stopValues.push(value);\n            value += step;\n        }\n        stopValues.push(dataExtent[1]);\n\n        return stopValues;\n    }\n\n    module.exports = ContinuousModel;\n\n\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var VisualMapView = __webpack_require__(481);\n    var graphic = __webpack_require__(327);\n    var zrUtil = __webpack_require__(325);\n    var numberUtil = __webpack_require__(328);\n    var sliderMove = __webpack_require__(475);\n    var LinearGradient = __webpack_require__(381);\n    var helper = __webpack_require__(482);\n    var modelUtil = __webpack_require__(333);\n\n    var linearMap = numberUtil.linearMap;\n    var each = zrUtil.each;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n\n    // Arbitrary value\n    var HOVER_LINK_SIZE = 12;\n    var HOVER_LINK_OUT = 6;\n\n    // Notice:\n    // Any \"interval\" should be by the order of [low, high].\n    // \"handle0\" (handleIndex === 0) maps to\n    // low data value: this._dataInterval[0] and has low coord.\n    // \"handle1\" (handleIndex === 1) maps to\n    // high data value: this._dataInterval[1] and has high coord.\n    // The logic of transform is implemented in this._createBarGroup.\n\n    var ContinuousView = VisualMapView.extend({\n\n        type: 'visualMap.continuous',\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            ContinuousView.superApply(this, 'init', arguments);\n\n            /**\n             * @private\n             */\n            this._shapes = {};\n\n            /**\n             * @private\n             */\n            this._dataInterval = [];\n\n            /**\n             * @private\n             */\n            this._handleEnds = [];\n\n            /**\n             * @private\n             */\n            this._orient;\n\n            /**\n             * @private\n             */\n            this._useHandle;\n\n            /**\n             * @private\n             */\n            this._hoverLinkDataIndices = [];\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._hovering;\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        doRender: function (visualMapModel, ecModel, api, payload) {\n            if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n                this._buildView();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _buildView: function () {\n            this.group.removeAll();\n\n            var visualMapModel = this.visualMapModel;\n            var thisGroup = this.group;\n\n            this._orient = visualMapModel.get('orient');\n            this._useHandle = visualMapModel.get('calculable');\n\n            this._resetInterval();\n\n            this._renderBar(thisGroup);\n\n            var dataRangeText = visualMapModel.get('text');\n            this._renderEndsText(thisGroup, dataRangeText, 0);\n            this._renderEndsText(thisGroup, dataRangeText, 1);\n\n            // Do this for background size calculation.\n            this._updateView(true);\n\n            // After updating view, inner shapes is built completely,\n            // and then background can be rendered.\n            this.renderBackground(thisGroup);\n\n            // Real update view\n            this._updateView();\n\n            this._enableHoverLinkToSeries();\n            this._enableHoverLinkFromSeries();\n\n            this.positionGroup(thisGroup);\n        },\n\n        /**\n         * @private\n         */\n        _renderEndsText: function (group, dataRangeText, endsIndex) {\n            if (!dataRangeText) {\n                return;\n            }\n\n            // Compatible with ec2, text[0] map to high value, text[1] map low value.\n            var text = dataRangeText[1 - endsIndex];\n            text = text != null ? text + '' : '';\n\n            var visualMapModel = this.visualMapModel;\n            var textGap = visualMapModel.get('textGap');\n            var itemSize = visualMapModel.itemSize;\n\n            var barGroup = this._shapes.barGroup;\n            var position = this._applyTransform(\n                [\n                    itemSize[0] / 2,\n                    endsIndex === 0 ? -textGap : itemSize[1] + textGap\n                ],\n                barGroup\n            );\n            var align = this._applyTransform(\n                endsIndex === 0 ? 'bottom' : 'top',\n                barGroup\n            );\n            var orient = this._orient;\n            var textStyleModel = this.visualMapModel.textStyleModel;\n\n            this.group.add(new graphic.Text({\n                style: {\n                    x: position[0],\n                    y: position[1],\n                    textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n                    textAlign: orient === 'horizontal' ? align : 'center',\n                    text: text,\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            }));\n        },\n\n        /**\n         * @private\n         */\n        _renderBar: function (targetGroup) {\n            var visualMapModel = this.visualMapModel;\n            var shapes = this._shapes;\n            var itemSize = visualMapModel.itemSize;\n            var orient = this._orient;\n            var useHandle = this._useHandle;\n            var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n            var barGroup = shapes.barGroup = this._createBarGroup(itemAlign);\n\n            // Bar\n            barGroup.add(shapes.outOfRange = createPolygon());\n            barGroup.add(shapes.inRange = createPolygon(\n                null,\n                useHandle ? 'move' : null,\n                zrUtil.bind(this._dragHandle, this, 'all', false),\n                zrUtil.bind(this._dragHandle, this, 'all', true)\n            ));\n\n            var textRect = visualMapModel.textStyleModel.getTextRect('国');\n            var textSize = mathMax(textRect.width, textRect.height);\n\n            // Handle\n            if (useHandle) {\n                shapes.handleThumbs = [];\n                shapes.handleLabels = [];\n                shapes.handleLabelPoints = [];\n\n                this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n                this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n            }\n\n            this._createIndicator(barGroup, itemSize, textSize, orient);\n\n            targetGroup.add(barGroup);\n        },\n\n        /**\n         * @private\n         */\n        _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n            var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n            var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n            var handleThumb = createPolygon(\n                createHandlePoints(handleIndex, textSize),\n                'move',\n                onDrift,\n                onDragEnd\n            );\n            handleThumb.position[0] = itemSize[0];\n            barGroup.add(handleThumb);\n\n            // Text is always horizontal layout but should not be effected by\n            // transform (orient/inverse). So label is built separately but not\n            // use zrender/graphic/helper/RectText, and is located based on view\n            // group (according to handleLabelPoint) but not barGroup.\n            var textStyleModel = this.visualMapModel.textStyleModel;\n            var handleLabel = new graphic.Text({\n                draggable: true,\n                drift: onDrift,\n                ondragend: onDragEnd,\n                style: {\n                    x: 0, y: 0, text: '',\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            });\n            this.group.add(handleLabel);\n\n            var handleLabelPoint = [\n                orient === 'horizontal'\n                    ? textSize / 2\n                    : textSize * 1.5,\n                orient === 'horizontal'\n                    ? (handleIndex === 0 ? -(textSize * 1.5) : (textSize * 1.5))\n                    : (handleIndex === 0 ? -textSize / 2 : textSize / 2)\n            ];\n\n            var shapes = this._shapes;\n            shapes.handleThumbs[handleIndex] = handleThumb;\n            shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n            shapes.handleLabels[handleIndex] = handleLabel;\n        },\n\n        /**\n         * @private\n         */\n        _createIndicator: function (barGroup, itemSize, textSize, orient) {\n            var indicator = createPolygon([[0, 0]], 'move');\n            indicator.position[0] = itemSize[0];\n            indicator.attr({invisible: true, silent: true});\n            barGroup.add(indicator);\n\n            var textStyleModel = this.visualMapModel.textStyleModel;\n            var indicatorLabel = new graphic.Text({\n                silent: true,\n                invisible: true,\n                style: {\n                    x: 0, y: 0, text: '',\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            });\n            this.group.add(indicatorLabel);\n\n            var indicatorLabelPoint = [\n                orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3,\n                0\n            ];\n\n            var shapes = this._shapes;\n            shapes.indicator = indicator;\n            shapes.indicatorLabel = indicatorLabel;\n            shapes.indicatorLabelPoint = indicatorLabelPoint;\n        },\n\n        /**\n         * @private\n         */\n        _dragHandle: function (handleIndex, isEnd, dx, dy) {\n            if (!this._useHandle) {\n                return;\n            }\n\n            this._dragging = !isEnd;\n\n            if (!isEnd) {\n                // Transform dx, dy to bar coordination.\n                var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n                this._updateInterval(handleIndex, vertex[1]);\n\n                // Considering realtime, update view should be executed\n                // before dispatch action.\n                this._updateView();\n            }\n\n            // dragEnd do not dispatch action when realtime.\n            if (isEnd === !this.visualMapModel.get('realtime')) { // jshint ignore:line\n                this.api.dispatchAction({\n                    type: 'selectDataRange',\n                    from: this.uid,\n                    visualMapId: this.visualMapModel.id,\n                    selected: this._dataInterval.slice()\n                });\n            }\n\n            if (isEnd) {\n                !this._hovering && this._clearHoverLinkToSeries();\n            }\n            else if (useHoverLinkOnHandle(this.visualMapModel)) {\n                this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var visualMapModel = this.visualMapModel;\n\n            var dataInterval = this._dataInterval = visualMapModel.getSelected();\n            var dataExtent = visualMapModel.getExtent();\n            var sizeExtent = [0, visualMapModel.itemSize[1]];\n\n            this._handleEnds = [\n                linearMap(dataInterval[0], dataExtent, sizeExtent, true),\n                linearMap(dataInterval[1], dataExtent, sizeExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} dx\n         * @param {number} dy\n         */\n        _updateInterval: function (handleIndex, delta) {\n            delta = delta || 0;\n            var visualMapModel = this.visualMapModel;\n            var handleEnds = this._handleEnds;\n\n            sliderMove(\n                delta,\n                handleEnds,\n                [0, visualMapModel.itemSize[1]],\n                handleIndex === 'all' ? 'rigid' : 'push',\n                handleIndex\n            );\n            var dataExtent = visualMapModel.getExtent();\n            var sizeExtent = [0, visualMapModel.itemSize[1]];\n            // Update data interval.\n            this._dataInterval = [\n                linearMap(handleEnds[0], sizeExtent, dataExtent, true),\n                linearMap(handleEnds[1], sizeExtent, dataExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (forSketch) {\n            var visualMapModel = this.visualMapModel;\n            var dataExtent = visualMapModel.getExtent();\n            var shapes = this._shapes;\n\n            var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n            var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n            var visualInRange = this._createBarVisual(\n                this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange'\n            );\n            var visualOutOfRange = this._createBarVisual(\n                dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange'\n            );\n\n            shapes.inRange\n                .setStyle({\n                    fill: visualInRange.barColor,\n                    opacity: visualInRange.opacity\n                })\n                .setShape('points', visualInRange.barPoints);\n            shapes.outOfRange\n                .setStyle({\n                    fill: visualOutOfRange.barColor,\n                    opacity: visualOutOfRange.opacity\n                })\n                .setShape('points', visualOutOfRange.barPoints);\n\n            this._updateHandle(inRangeHandleEnds, visualInRange);\n        },\n\n        /**\n         * @private\n         */\n        _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n            var opts = {\n                forceState: forceState,\n                convertOpacityToAlpha: true\n            };\n            var colorStops = this._makeColorGradient(dataInterval, opts);\n\n            var symbolSizes = [\n                this.getControllerVisual(dataInterval[0], 'symbolSize', opts),\n                this.getControllerVisual(dataInterval[1], 'symbolSize', opts)\n            ];\n            var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n            return {\n                barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n                barPoints: barPoints,\n                handlesColor: [\n                    colorStops[0].color,\n                    colorStops[colorStops.length - 1].color\n                ]\n            };\n        },\n\n        /**\n         * @private\n         */\n        _makeColorGradient: function (dataInterval, opts) {\n            // Considering colorHue, which is not linear, so we have to sample\n            // to calculate gradient color stops, but not only caculate head\n            // and tail.\n            var sampleNumber = 100; // Arbitrary value.\n            var colorStops = [];\n            var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n\n            colorStops.push({\n                color: this.getControllerVisual(dataInterval[0], 'color', opts),\n                offset: 0\n            });\n\n            for (var i = 1; i < sampleNumber; i++) {\n                var currValue = dataInterval[0] + step * i;\n                if (currValue > dataInterval[1]) {\n                    break;\n                }\n                colorStops.push({\n                    color: this.getControllerVisual(currValue, 'color', opts),\n                    offset: i / sampleNumber\n                });\n            }\n\n            colorStops.push({\n                color: this.getControllerVisual(dataInterval[1], 'color', opts),\n                offset: 1\n            });\n\n            return colorStops;\n        },\n\n        /**\n         * @private\n         */\n        _createBarPoints: function (handleEnds, symbolSizes) {\n            var itemSize = this.visualMapModel.itemSize;\n\n            return [\n                [itemSize[0] - symbolSizes[0], handleEnds[0]],\n                [itemSize[0], handleEnds[0]],\n                [itemSize[0], handleEnds[1]],\n                [itemSize[0] - symbolSizes[1], handleEnds[1]]\n            ];\n        },\n\n        /**\n         * @private\n         */\n        _createBarGroup: function (itemAlign) {\n            var orient = this._orient;\n            var inverse = this.visualMapModel.get('inverse');\n\n            return new graphic.Group(\n                (orient === 'horizontal' && !inverse)\n                ? {scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1], rotation: Math.PI / 2}\n                : (orient === 'horizontal' && inverse)\n                ? {scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1], rotation: -Math.PI / 2}\n                : (orient === 'vertical' && !inverse)\n                ? {scale: itemAlign === 'left' ? [1, -1] : [-1, -1]}\n                : {scale: itemAlign === 'left' ? [1, 1] : [-1, 1]}\n            );\n        },\n\n        /**\n         * @private\n         */\n        _updateHandle: function (handleEnds, visualInRange) {\n            if (!this._useHandle) {\n                return;\n            }\n\n            var shapes = this._shapes;\n            var visualMapModel = this.visualMapModel;\n            var handleThumbs = shapes.handleThumbs;\n            var handleLabels = shapes.handleLabels;\n\n            each([0, 1], function (handleIndex) {\n                var handleThumb = handleThumbs[handleIndex];\n                handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n                handleThumb.position[1] = handleEnds[handleIndex];\n\n                // Update handle label position.\n                var textPoint = graphic.applyTransform(\n                    shapes.handleLabelPoints[handleIndex],\n                    graphic.getTransform(handleThumb, this.group)\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n                    textVerticalAlign: 'middle',\n                    textAlign: this._applyTransform(\n                        this._orient === 'horizontal'\n                            ? (handleIndex === 0 ? 'bottom' : 'top')\n                            : 'left',\n                        shapes.barGroup\n                    )\n                });\n            }, this);\n        },\n\n        /**\n         * @private\n         * @param {number} cursorValue\n         * @param {number} textValue\n         * @param {string} [rangeSymbol]\n         * @param {number} [halfHoverLinkSize]\n         */\n        _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n            var visualMapModel = this.visualMapModel;\n            var dataExtent = visualMapModel.getExtent();\n            var itemSize = visualMapModel.itemSize;\n            var sizeExtent = [0, itemSize[1]];\n            var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n\n            var shapes = this._shapes;\n            var indicator = shapes.indicator;\n            if (!indicator) {\n                return;\n            }\n\n            indicator.position[1] = pos;\n            indicator.attr('invisible', false);\n            indicator.setShape('points', createIndicatorPoints(\n                !!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]\n            ));\n\n            var opts = {convertOpacityToAlpha: true};\n            var color = this.getControllerVisual(cursorValue, 'color', opts);\n            indicator.setStyle('fill', color);\n\n            // Update handle label position.\n            var textPoint = graphic.applyTransform(\n                shapes.indicatorLabelPoint,\n                graphic.getTransform(indicator, this.group)\n            );\n\n            var indicatorLabel = shapes.indicatorLabel;\n            indicatorLabel.attr('invisible', false);\n            var align = this._applyTransform('left', shapes.barGroup);\n            var orient = this._orient;\n            indicatorLabel.setStyle({\n                text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n                textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n                textAlign: orient === 'horizontal' ? 'center' : align,\n                x: textPoint[0],\n                y: textPoint[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLinkToSeries: function () {\n            var self = this;\n            this._shapes.barGroup\n\n                .on('mousemove', function (e) {\n                    self._hovering = true;\n\n                    if (!self._dragging) {\n                        var itemSize = self.visualMapModel.itemSize;\n                        var pos = self._applyTransform(\n                            [e.offsetX, e.offsetY], self._shapes.barGroup, true, true\n                        );\n                        // For hover link show when hover handle, which might be\n                        // below or upper than sizeExtent.\n                        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n                        self._doHoverLinkToSeries(\n                            pos[1],\n                            0 <= pos[0] && pos[0] <= itemSize[0]\n                        );\n                    }\n                })\n\n                .on('mouseout', function () {\n                    // When mouse is out of handle, hoverLink still need\n                    // to be displayed when realtime is set as false.\n                    self._hovering = false;\n                    !self._dragging && self._clearHoverLinkToSeries();\n                });\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLinkFromSeries: function () {\n            var zr = this.api.getZr();\n\n            if (this.visualMapModel.option.hoverLink) {\n                zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n                zr.on('mouseout', this._hideIndicator, this);\n            }\n            else {\n                this._clearHoverLinkFromSeries();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n            var visualMapModel = this.visualMapModel;\n            var itemSize = visualMapModel.itemSize;\n\n            if (!visualMapModel.option.hoverLink) {\n                return;\n            }\n\n            var sizeExtent = [0, itemSize[1]];\n            var dataExtent = visualMapModel.getExtent();\n\n            // For hover link show when hover handle, which might be below or upper than sizeExtent.\n            cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n\n            var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n            var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n            var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n            var valueRange = [\n                linearMap(hoverRange[0], sizeExtent, dataExtent, true),\n                linearMap(hoverRange[1], sizeExtent, dataExtent, true)\n            ];\n            // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n            // where china and india has very large population.\n            hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n            hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity);\n\n            // Do not show indicator when mouse is over handle,\n            // otherwise labels overlap, especially when dragging.\n            if (hoverOnBar) {\n                if (valueRange[0] === -Infinity) {\n                    this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n                }\n                else if (valueRange[1] === Infinity) {\n                    this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n                }\n                else {\n                    this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n                }\n            }\n\n            // When realtime is set as false, handles, which are in barGroup,\n            // also trigger hoverLink, which help user to realize where they\n            // focus on when dragging. (see test/heatmap-large.html)\n            // When realtime is set as true, highlight will not show when hover\n            // handle, because the label on handle, which displays a exact value\n            // but not range, might mislead users.\n            var oldBatch = this._hoverLinkDataIndices;\n            var newBatch = [];\n            if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n                newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n            }\n\n            var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n            this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n            this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n        },\n\n        /**\n         * @private\n         */\n        _hoverLinkFromSeriesMouseOver: function (e) {\n            var el = e.target;\n\n            if (!el || el.dataIndex == null) {\n                return;\n            }\n\n            var dataModel = el.dataModel || this.ecModel.getSeriesByIndex(el.seriesIndex);\n            var data = dataModel.getData(el.dataType);\n            var dim = data.getDimension(this.visualMapModel.getDataDimension(data));\n            var value = data.get(dim, el.dataIndex, true);\n\n            if (!isNaN(value)) {\n                this._showIndicator(value, value);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _hideIndicator: function () {\n            var shapes = this._shapes;\n            shapes.indicator && shapes.indicator.attr('invisible', true);\n            shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n        },\n\n        /**\n         * @private\n         */\n        _clearHoverLinkToSeries: function () {\n            this._hideIndicator();\n\n            var indices = this._hoverLinkDataIndices;\n\n            this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n            indices.length = 0;\n        },\n\n        /**\n         * @private\n         */\n        _clearHoverLinkFromSeries: function () {\n            this._hideIndicator();\n\n            var zr = this.api.getZr();\n            zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n            zr.off('mouseout', this._hideIndicator);\n        },\n\n        /**\n         * @private\n         */\n        _applyTransform: function (vertex, element, inverse, global) {\n            var transform = graphic.getTransform(element, global ? null : this.group);\n\n            return graphic[\n                zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'\n            ](vertex, transform, inverse);\n        },\n\n        /**\n         * @private\n         */\n        _dispatchHighDown: function (type, batch) {\n            batch && batch.length && this.api.dispatchAction({\n                type: type,\n                batch: batch\n            });\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            this._clearHoverLinkFromSeries();\n            this._clearHoverLinkToSeries();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            this._clearHoverLinkFromSeries();\n            this._clearHoverLinkToSeries();\n        }\n\n    });\n\n    function createPolygon(points, cursor, onDrift, onDragEnd) {\n        return new graphic.Polygon({\n            shape: {points: points},\n            draggable: !!onDrift,\n            cursor: cursor,\n            drift: onDrift,\n            ondragend: onDragEnd\n        });\n    }\n\n    function createHandlePoints(handleIndex, textSize) {\n        return handleIndex === 0\n            ? [[0, 0], [textSize, 0], [textSize, -textSize]]\n            : [[0, 0], [textSize, 0], [textSize, textSize]];\n    }\n\n    function createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n        return isRange\n            ? [ // indicate range\n                [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))],\n                [HOVER_LINK_OUT, 0],\n                [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]\n            ]\n            : [ // indicate single value\n                [0, 0], [5, -5], [5, 5]\n            ];\n    }\n\n    function getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n        var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n        var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n        if (hoverLinkDataSize) {\n            halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n        }\n        return halfHoverLinkSize;\n    }\n\n    function useHoverLinkOnHandle(visualMapModel) {\n        return !visualMapModel.get('realtime') && visualMapModel.get('hoverLinkOnHandle');\n    }\n\n    module.exports = ContinuousView;\n\n\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var VisualMapModel = __webpack_require__(480);\n    var zrUtil = __webpack_require__(325);\n    var VisualMapping = __webpack_require__(380);\n    var visualDefault = __webpack_require__(487);\n    var reformIntervals = __webpack_require__(328).reformIntervals;\n\n    var PiecewiseModel = VisualMapModel.extend({\n\n        type: 'visualMap.piecewise',\n\n        /**\n         * Order Rule:\n         *\n         * option.categories / option.pieces / option.text / option.selected:\n         *     If !option.inverse,\n         *     Order when vertical: ['top', ..., 'bottom'].\n         *     Order when horizontal: ['left', ..., 'right'].\n         *     If option.inverse, the meaning of\n         *     the order should be reversed.\n         *\n         * this._pieceList:\n         *     The order is always [low, ..., high].\n         *\n         * Mapping from location to low-high:\n         *     If !option.inverse\n         *     When vertical, top is high.\n         *     When horizontal, right is high.\n         *     If option.inverse, reverse.\n         */\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            selected: null,             // Object. If not specified, means selected.\n                                        // When pieces and splitNumber: {'0': true, '5': true}\n                                        // When categories: {'cate1': false, 'cate3': true}\n                                        // When selected === false, means all unselected.\n\n            minOpen: false,             // Whether include values that smaller than `min`.\n            maxOpen: false,             // Whether include values that bigger than `max`.\n\n            align: 'auto',              // 'auto', 'left', 'right'\n            itemWidth: 20,              // When put the controller vertically, it is the length of\n                                        // horizontal side of each item. Otherwise, vertical side.\n            itemHeight: 14,             // When put the controller vertically, it is the length of\n                                        // vertical side of each item. Otherwise, horizontal side.\n            itemSymbol: 'roundRect',\n            pieceList: null,            // Each item is Object, with some of those attrs:\n                                        // {min, max, lt, gt, lte, gte, value,\n                                        // color, colorSaturation, colorAlpha, opacity,\n                                        // symbol, symbolSize}, which customize the range or visual\n                                        // coding of the certain piece. Besides, see \"Order Rule\".\n            categories: null,           // category names, like: ['some1', 'some2', 'some3'].\n                                        // Attr min/max are ignored when categories set. See \"Order Rule\"\n            splitNumber: 5,             // If set to 5, auto split five pieces equally.\n                                        // If set to 0 and component type not set, component type will be\n                                        // determined as \"continuous\". (It is less reasonable but for ec2\n                                        // compatibility, see echarts/component/visualMap/typeDefaulter)\n            selectedMode: 'multiple',   // Can be 'multiple' or 'single'.\n            itemGap: 10,                // The gap between two items, in px.\n            hoverLink: true,            // Enable hover highlight.\n\n            showLabel: null             // By default, when text is used, label will hide (the logic\n                                        // is remained for compatibility reason)\n        },\n\n        /**\n         * @override\n         */\n        optionUpdated: function (newOption, isInit) {\n            PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n\n            /**\n             * The order is always [low, ..., high].\n             * [{text: string, interval: Array.<number>}, ...]\n             * @private\n             * @type {Array.<Object>}\n             */\n            this._pieceList = [];\n\n            this.resetTargetSeries();\n            this.resetExtent();\n\n            /**\n             * 'pieces', 'categories', 'splitNumber'\n             * @type {string}\n             */\n            var mode = this._mode = this._determineMode();\n\n            resetMethods[this._mode].call(this);\n\n            this._resetSelected(newOption, isInit);\n\n            var categories = this.option.categories;\n\n            this.resetVisual(function (mappingOption, state) {\n                if (mode === 'categories') {\n                    mappingOption.mappingMethod = 'category';\n                    mappingOption.categories = zrUtil.clone(categories);\n                }\n                else {\n                    mappingOption.dataExtent = this.getExtent();\n                    mappingOption.mappingMethod = 'piecewise';\n                    mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n                        var piece = zrUtil.clone(piece);\n                        if (state !== 'inRange') {\n                            // FIXME\n                            // outOfRange do not support special visual in pieces.\n                            piece.visual = null;\n                        }\n                        return piece;\n                    });\n                }\n            });\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        completeVisualOption: function () {\n            // Consider this case:\n            // visualMap: {\n            //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n            // }\n            // where no inRange/outOfRange set but only pieces. So we should make\n            // default inRange/outOfRange for this case, otherwise visuals that only\n            // appear in `pieces` will not be taken into account in visual encoding.\n\n            var option = this.option;\n            var visualTypesInPieces = {};\n            var visualTypes = VisualMapping.listVisualTypes();\n            var isCategory = this.isCategory();\n\n            zrUtil.each(option.pieces, function (piece) {\n                zrUtil.each(visualTypes, function (visualType) {\n                    if (piece.hasOwnProperty(visualType)) {\n                        visualTypesInPieces[visualType] = 1;\n                    }\n                });\n            });\n\n            zrUtil.each(visualTypesInPieces, function (v, visualType) {\n                var exists = 0;\n                zrUtil.each(this.stateList, function (state) {\n                    exists |= has(option, state, visualType)\n                        || has(option.target, state, visualType);\n                }, this);\n\n                !exists && zrUtil.each(this.stateList, function (state) {\n                    (option[state] || (option[state] = {}))[visualType] = visualDefault.get(\n                        visualType, state === 'inRange' ? 'active' : 'inactive', isCategory\n                    );\n                });\n            }, this);\n\n            function has(obj, state, visualType) {\n                return obj && obj[state] && (\n                    zrUtil.isObject(obj[state])\n                        ? obj[state].hasOwnProperty(visualType)\n                        : obj[state] === visualType // e.g., inRange: 'symbol'\n                );\n            }\n\n            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n        },\n\n        _resetSelected: function (newOption, isInit) {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n\n            // Selected do not merge but all override.\n            var selected = (isInit ? thisOption : newOption).selected || {};\n            thisOption.selected = selected;\n\n            // Consider 'not specified' means true.\n            zrUtil.each(pieceList, function (piece, index) {\n                var key = this.getSelectedMapKey(piece);\n                if (!selected.hasOwnProperty(key)) {\n                    selected[key] = true;\n                }\n            }, this);\n\n            if (thisOption.selectedMode === 'single') {\n                // Ensure there is only one selected.\n                var hasSel = false;\n\n                zrUtil.each(pieceList, function (piece, index) {\n                    var key = this.getSelectedMapKey(piece);\n                    if (selected[key]) {\n                        hasSel\n                            ? (selected[key] = false)\n                            : (hasSel = true);\n                    }\n                }, this);\n            }\n            // thisOption.selectedMode === 'multiple', default: all selected.\n        },\n\n        /**\n         * @public\n         */\n        getSelectedMapKey: function (piece) {\n            return this._mode === 'categories'\n                ? piece.value + '' : piece.index + '';\n        },\n\n        /**\n         * @public\n         */\n        getPieceList: function () {\n            return this._pieceList;\n        },\n\n        /**\n         * @private\n         * @return {string}\n         */\n        _determineMode: function () {\n            var option = this.option;\n\n            return option.pieces && option.pieces.length > 0\n                ? 'pieces'\n                : this.option.categories\n                ? 'categories'\n                : 'splitNumber';\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        setSelected: function (selected) {\n            this.option.selected = zrUtil.clone(selected);\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        getValueState: function (value) {\n            var index = VisualMapping.findPieceIndex(value, this._pieceList);\n\n            return index != null\n                ? (this.option.selected[this.getSelectedMapKey(this._pieceList[index])]\n                    ? 'inRange' : 'outOfRange'\n                )\n                : 'outOfRange';\n        },\n\n        /**\n         * @public\n         * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n         */\n        findTargetDataIndices: function (pieceIndex) {\n            var result = [];\n\n            this.eachTargetSeries(function (seriesModel) {\n                var dataIndices = [];\n                var data = seriesModel.getData();\n\n                data.each(this.getDataDimension(data), function (value, dataIndex) {\n                    // Should always base on model pieceList, because it is order sensitive.\n                    var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n                    pIdx === pieceIndex && dataIndices.push(dataIndex);\n                }, true, this);\n\n                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\n            }, this);\n\n            return result;\n        },\n\n        /**\n         * @private\n         * @param {Object} piece piece.value or piece.interval is required.\n         * @return {number} Can be Infinity or -Infinity\n         */\n        getRepresentValue: function (piece) {\n            var representValue;\n            if (this.isCategory()) {\n                representValue = piece.value;\n            }\n            else {\n                if (piece.value != null) {\n                    representValue = piece.value;\n                }\n                else {\n                    var pieceInterval = piece.interval || [];\n                    representValue = (pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity)\n                        ? 0\n                        : (pieceInterval[0] + pieceInterval[1]) / 2;\n                }\n            }\n            return representValue;\n        },\n\n        getVisualMeta: function (getColorVisual) {\n            // Do not support category. (category axis is ordinal, numerical)\n            if (this.isCategory()) {\n                return;\n            }\n\n            var stops = [];\n            var outerColors = [];\n            var visualMapModel = this;\n\n            function setStop(interval, valueState) {\n                var representValue = visualMapModel.getRepresentValue({interval: interval});\n                if (!valueState) {\n                    valueState = visualMapModel.getValueState(representValue);\n                }\n                var color = getColorVisual(representValue, valueState);\n                if (interval[0] === -Infinity) {\n                    outerColors[0] = color;\n                }\n                else if (interval[1] === Infinity) {\n                    outerColors[1] = color;\n                }\n                else {\n                    stops.push(\n                        {value: interval[0], color: color},\n                        {value: interval[1], color: color}\n                    );\n                }\n            }\n\n            // Suplement\n            var pieceList = this._pieceList.slice();\n            if (!pieceList.length) {\n                pieceList.push({interval: [-Infinity, Infinity]});\n            }\n            else {\n                var edge = pieceList[0].interval[0];\n                edge !== -Infinity && pieceList.unshift({interval: [-Infinity, edge]});\n                edge = pieceList[pieceList.length - 1].interval[1];\n                edge !== Infinity && pieceList.push({interval: [edge, Infinity]});\n            }\n\n            var curr = -Infinity;\n            zrUtil.each(pieceList, function (piece) {\n                var interval = piece.interval;\n                if (interval) {\n                    // Fulfill gap.\n                    interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n                    setStop(interval.slice());\n                    curr = interval[1];\n                }\n            }, this);\n\n            return {stops: stops, outerColors: outerColors};\n        }\n\n    });\n\n    /**\n     * Key is this._mode\n     * @type {Object}\n     * @this {module:echarts/component/viusalMap/PiecewiseMode}\n     */\n    var resetMethods = {\n\n        splitNumber: function () {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n            var precision = thisOption.precision;\n            var dataExtent = this.getExtent();\n            var splitNumber = thisOption.splitNumber;\n            splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n            thisOption.splitNumber = splitNumber;\n\n            var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber;\n            // Precision auto-adaption\n            while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n                precision++;\n            }\n            thisOption.precision = precision;\n            splitStep = +splitStep.toFixed(precision);\n\n            var index = 0;\n\n            if (thisOption.minOpen) {\n                pieceList.push({\n                    index: index++,\n                    interval: [-Infinity, dataExtent[0]],\n                    close: [0, 0]\n                });\n            }\n\n            for (\n                var curr = dataExtent[0], len = index + splitNumber;\n                index < len;\n                curr += splitStep\n            ) {\n                var max = index === splitNumber - 1 ? dataExtent[1] : (curr + splitStep);\n\n                pieceList.push({\n                    index: index++,\n                    interval: [curr, max],\n                    close: [1, 1]\n                });\n            }\n\n            if (thisOption.maxOpen) {\n                pieceList.push({\n                    index: index++,\n                    interval: [dataExtent[1], Infinity],\n                    close: [0, 0]\n                });\n            }\n\n            reformIntervals(pieceList);\n\n            zrUtil.each(pieceList, function (piece) {\n                piece.text = this.formatValueText(piece.interval);\n            }, this);\n        },\n\n        categories: function () {\n            var thisOption = this.option;\n            zrUtil.each(thisOption.categories, function (cate) {\n                // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n                // 是否改一致。\n                this._pieceList.push({\n                    text: this.formatValueText(cate, true),\n                    value: cate\n                });\n            }, this);\n\n            // See \"Order Rule\".\n            normalizeReverse(thisOption, this._pieceList);\n        },\n\n        pieces: function () {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n\n            zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n\n                if (!zrUtil.isObject(pieceListItem)) {\n                    pieceListItem = {value: pieceListItem};\n                }\n\n                var item = {text: '', index: index};\n\n                if (pieceListItem.label != null) {\n                    item.text = pieceListItem.label;\n                }\n\n                if (pieceListItem.hasOwnProperty('value')) {\n                    var value = item.value = pieceListItem.value;\n                    item.interval = [value, value];\n                    item.close = [1, 1];\n                }\n                else {\n                    // `min` `max` is legacy option.\n                    // `lt` `gt` `lte` `gte` is recommanded.\n                    var interval = item.interval = [];\n                    var close = item.close = [0, 0];\n\n                    var closeList = [1, 0, 1];\n                    var infinityList = [-Infinity, Infinity];\n\n                    var useMinMax = [];\n                    for (var lg = 0; lg < 2; lg++) {\n                        var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n                        for (var i = 0; i < 3 && interval[lg] == null; i++) {\n                            interval[lg] = pieceListItem[names[i]];\n                            close[lg] = closeList[i];\n                            useMinMax[lg] = i === 2;\n                        }\n                        interval[lg] == null && (interval[lg] = infinityList[lg]);\n                    }\n                    useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n                    useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n                    if (__DEV__) {\n                        if (interval[0] > interval[1]) {\n                            console.warn(\n                                'Piece ' + index + 'is illegal: ' + interval\n                                + ' lower bound should not greater then uppper bound.'\n                            );\n                        }\n                    }\n\n                    if (interval[0] === interval[1] && close[0] && close[1]) {\n                        // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n                        // we use value to lift the priority when min === max\n                        item.value = interval[0];\n                    }\n                }\n\n                item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n\n                pieceList.push(item);\n\n            }, this);\n\n            // See \"Order Rule\".\n            normalizeReverse(thisOption, pieceList);\n            // Only pieces\n            reformIntervals(pieceList);\n\n            zrUtil.each(pieceList, function (piece) {\n                var close = piece.close;\n                var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n                piece.text = piece.text || this.formatValueText(\n                    piece.value != null ? piece.value : piece.interval,\n                    false,\n                    edgeSymbols\n                );\n            }, this);\n        }\n    };\n\n    function normalizeReverse(thisOption, pieceList) {\n        var inverse = thisOption.inverse;\n        if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n             pieceList.reverse();\n        }\n    }\n\n    module.exports = PiecewiseModel;\n\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var VisualMapView = __webpack_require__(481);\n    var zrUtil = __webpack_require__(325);\n    var graphic = __webpack_require__(327);\n    var symbolCreators = __webpack_require__(362);\n    var layout = __webpack_require__(338);\n    var helper = __webpack_require__(482);\n\n    var PiecewiseVisualMapView = VisualMapView.extend({\n\n        type: 'visualMap.piecewise',\n\n        /**\n         * @protected\n         * @override\n         */\n        doRender: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            var visualMapModel = this.visualMapModel;\n            var textGap = visualMapModel.get('textGap');\n            var textStyleModel = visualMapModel.textStyleModel;\n            var textFont = textStyleModel.getFont();\n            var textFill = textStyleModel.getTextColor();\n            var itemAlign = this._getItemAlign();\n            var itemSize = visualMapModel.itemSize;\n            var viewData = this._getViewData();\n            var endsText = viewData.endsText;\n            var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n\n            endsText && this._renderEndsText(\n                thisGroup, endsText[0], itemSize, showLabel, itemAlign\n            );\n\n            zrUtil.each(viewData.viewPieceList, renderItem, this);\n\n            endsText && this._renderEndsText(\n                thisGroup, endsText[1], itemSize, showLabel, itemAlign\n            );\n\n            layout.box(\n                visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap')\n            );\n\n            this.renderBackground(thisGroup);\n\n            this.positionGroup(thisGroup);\n\n            function renderItem(item) {\n                var piece = item.piece;\n\n                var itemGroup = new graphic.Group();\n                itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n                this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n                var representValue = visualMapModel.getRepresentValue(piece);\n\n                this._createItemSymbol(\n                    itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]\n                );\n\n                if (showLabel) {\n                    var visualState = this.visualMapModel.getValueState(representValue);\n\n                    itemGroup.add(new graphic.Text({\n                        style: {\n                            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n                            y: itemSize[1] / 2,\n                            text: piece.text,\n                            textVerticalAlign: 'middle',\n                            textAlign: itemAlign,\n                            textFont: textFont,\n                            fill: textFill,\n                            opacity: visualState === 'outOfRange' ? 0.5 : 1\n                        }\n                    }));\n                }\n\n                thisGroup.add(itemGroup);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLink: function (itemGroup, pieceIndex) {\n            itemGroup\n                .on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight'))\n                .on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n            function onHoverLink(method) {\n                var visualMapModel = this.visualMapModel;\n\n                visualMapModel.option.hoverLink && this.api.dispatchAction({\n                    type: method,\n                    batch: helper.convertDataIndex(\n                        visualMapModel.findTargetDataIndices(pieceIndex)\n                    )\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _getItemAlign: function () {\n            var visualMapModel = this.visualMapModel;\n            var modelOption = visualMapModel.option;\n\n            if (modelOption.orient === 'vertical') {\n                return helper.getItemAlign(\n                    visualMapModel, this.api, visualMapModel.itemSize\n                );\n            }\n            else { // horizontal, most case left unless specifying right.\n                var align = modelOption.align;\n                if (!align || align === 'auto') {\n                    align = 'left';\n                }\n                return align;\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n            if (!text) {\n                return;\n            }\n\n            var itemGroup = new graphic.Group();\n            var textStyleModel = this.visualMapModel.textStyleModel;\n\n            itemGroup.add(new graphic.Text({\n                style: {\n                    x: showLabel ? (itemAlign === 'right' ? itemSize[0] : 0) : itemSize[0] / 2,\n                    y: itemSize[1] / 2,\n                    textVerticalAlign: 'middle',\n                    textAlign: showLabel ? itemAlign : 'center',\n                    text: text,\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            }));\n\n            group.add(itemGroup);\n        },\n\n        /**\n         * @private\n         * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n         */\n        _getViewData: function () {\n            var visualMapModel = this.visualMapModel;\n\n            var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n                return {piece: piece, indexInModelPieceList: index};\n            });\n            var endsText = visualMapModel.get('text');\n\n            // Consider orient and inverse.\n            var orient = visualMapModel.get('orient');\n            var inverse = visualMapModel.get('inverse');\n\n            // Order of model pieceList is always [low, ..., high]\n            if (orient === 'horizontal' ? inverse : !inverse) {\n                viewPieceList.reverse();\n            }\n            // Origin order of endsText is [high, low]\n            else if (endsText) {\n                endsText = endsText.slice().reverse();\n            }\n\n            return {viewPieceList: viewPieceList, endsText: endsText};\n        },\n\n        /**\n         * @private\n         */\n        _createItemSymbol: function (group, representValue, shapeParam) {\n            group.add(symbolCreators.createSymbol(\n                this.getControllerVisual(representValue, 'symbol'),\n                shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3],\n                this.getControllerVisual(representValue, 'color')\n            ));\n        },\n\n        /**\n         * @private\n         */\n        _onItemClick: function (piece) {\n            var visualMapModel = this.visualMapModel;\n            var option = visualMapModel.option;\n            var selected = zrUtil.clone(option.selected);\n            var newKey = visualMapModel.getSelectedMapKey(piece);\n\n            if (option.selectedMode === 'single') {\n                selected[newKey] = true;\n                zrUtil.each(selected, function (o, key) {\n                    selected[key] = key === newKey;\n                });\n            }\n            else {\n                selected[newKey] = !selected[newKey];\n            }\n\n            this.api.dispatchAction({\n                type: 'selectDataRange',\n                from: this.uid,\n                visualMapId: this.visualMapModel.id,\n                selected: selected\n            });\n        }\n    });\n\n    module.exports = PiecewiseVisualMapView;\n\n\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(326).registerPreprocessor(\n        __webpack_require__(483)\n    );\n\n    __webpack_require__(484);\n    __webpack_require__(485);\n    __webpack_require__(529);\n    __webpack_require__(530);\n    __webpack_require__(486);\n\n\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(326).registerPreprocessor(\n        __webpack_require__(483)\n    );\n\n    __webpack_require__(484);\n    __webpack_require__(485);\n    __webpack_require__(531);\n    __webpack_require__(532);\n    __webpack_require__(486);\n\n\n\n/***/ }),\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */,\n/* 539 */,\n/* 540 */,\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */,\n/* 546 */,\n/* 547 */,\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */,\n/* 562 */,\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(295)();\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-6811dc38]{position:relative;width:100%;height:90%}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/charts/keyboard2.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"keyboard2.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-6811dc38]{\\n    position: relative;\\n    width: 100%;\\n    height: 90%;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 568 */,\n/* 569 */,\n/* 570 */,\n/* 571 */,\n/* 572 */,\n/* 573 */,\n/* 574 */,\n/* 575 */,\n/* 576 */,\n/* 577 */,\n/* 578 */,\n/* 579 */,\n/* 580 */,\n/* 581 */,\n/* 582 */,\n/* 583 */,\n/* 584 */,\n/* 585 */,\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(739),\n  /* template */\n  __webpack_require__(641),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 606 */,\n/* 607 */,\n/* 608 */,\n/* 609 */,\n/* 610 */,\n/* 611 */,\n/* 612 */,\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */,\n/* 634 */,\n/* 635 */,\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */,\n/* 649 */,\n/* 650 */,\n/* 651 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('keyboardChart2', {\n    attrs: {\n      \"id\": \"apple\",\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n/* 652 */,\n/* 653 */,\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */,\n/* 658 */,\n/* 659 */,\n/* 660 */,\n/* 661 */,\n/* 662 */,\n/* 663 */,\n/* 664 */,\n/* 665 */,\n/* 666 */,\n/* 667 */,\n/* 668 */,\n/* 669 */,\n/* 670 */,\n/* 671 */,\n/* 672 */,\n/* 673 */,\n/* 674 */,\n/* 675 */,\n/* 676 */,\n/* 677 */,\n/* 678 */,\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(567);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(296)(\"8255cbda\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./keyboard2.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./keyboard2.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */,\n/* 723 */,\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */,\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(326);\n\n__webpack_require__(465);\n__webpack_require__(387);\n\n__webpack_require__(384);\n__webpack_require__(471);\n\n__webpack_require__(528);\nexports.default = {\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.initBar();\n  },\n\n  methods: {\n    initBar: function initBar() {\n      this.chart = echarts.init(document.getElementById(this.id));\n\n      var xAxisData = [];\n      var data = [];\n      var data2 = [];\n      for (var i = 0; i < 50; i++) {\n        xAxisData.push(i);\n        data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n        data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\n      }\n      this.chart.setOption({\n        backgroundColor: '#08263a',\n        xAxis: [{\n          show: false,\n          data: xAxisData\n        }, {\n          show: false,\n          data: xAxisData\n        }],\n        visualMap: {\n          show: false,\n          min: 0,\n          max: 50,\n          dimension: 0,\n          inRange: {\n            color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\n          }\n        },\n        yAxis: {\n          axisLine: {\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#4a657a'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#08263f'\n            }\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        series: [{\n          name: 'back',\n          type: 'bar',\n          data: data2,\n          z: 1,\n          itemStyle: {\n            normal: {\n              opacity: 0.4,\n              barBorderRadius: 5,\n              shadowBlur: 3,\n              shadowColor: '#111'\n            }\n          }\n        }, {\n          name: 'Simulate Shadow',\n          type: 'line',\n          data: data,\n          z: 2,\n          showSymbol: false,\n          animationDelay: 0,\n          animationEasing: 'linear',\n          animationDuration: 1200,\n          lineStyle: {\n            normal: {\n              color: 'transparent'\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: '#08263a',\n              shadowBlur: 50,\n              shadowColor: '#000'\n            }\n          }\n        }, {\n          name: 'front',\n          type: 'bar',\n          data: data,\n          xAxisIndex: 1,\n          z: 3,\n          itemStyle: {\n            normal: {\n              barBorderRadius: 5\n            }\n          }\n        }],\n        animationEasing: 'elasticOut',\n        animationEasingUpdate: 'elasticOut',\n        animationDelay: function animationDelay(idx) {\n          return idx * 20;\n        },\n        animationDelayUpdate: function animationDelayUpdate(idx) {\n          return idx * 20;\n        }\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */,\n/* 747 */,\n/* 748 */,\n/* 749 */,\n/* 750 */,\n/* 751 */,\n/* 752 */,\n/* 753 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keyboard = __webpack_require__(605);\n\nvar _keyboard2 = _interopRequireDefault(_keyboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: { keyboardChart2: _keyboard2.default }\n};\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// js/3.2ec67a871a9963a62597.js","\n/* styles */\nrequire(\"!!../../../node_modules/.2.0.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./keyboard2.vue\")\n\nvar Component = require(\"!../../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./keyboard2.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6811dc38\\\"}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./keyboard2.vue\"),\n  /* scopeId */\n  \"data-v-6811dc38\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/charts/keyboard2.vue\n// module id = 299\n// module chunks = 3","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/util.js\n// module id = 325\n// module chunks = 0 1 2 3 4","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/echarts.js\n// module id = 326\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/graphic.js\n// module id = 327\n// module chunks = 0 1 2 3 4","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/number.js\n// module id = 328\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/vector.js\n// module id = 329\n// module chunks = 0 1 2 3 4","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Path.js\n// module id = 330\n// module chunks = 0 1 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/env.js\n// module id = 331\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/format.js\n// module id = 332\n// module chunks = 0 1 2 3 4","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/model.js\n// module id = 333\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/BoundingRect.js\n// module id = 334\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Model.js\n// module id = 335\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/clazz.js\n// module id = 336\n// module chunks = 0 1 2 3 4","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Component.js\n// module id = 337\n// module chunks = 0 1 2 3 4","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/layout.js\n// module id = 338\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/curve.js\n// module id = 339\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/color.js\n// module id = 340\n// module chunks = 0 1 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Eventful.js\n// module id = 341\n// module chunks = 0 1 2 3 4","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/text.js\n// module id = 342\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/event.js\n// module id = 343\n// module chunks = 0 1 2 3 4","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Scale.js\n// module id = 344\n// module chunks = 0 1 2 3 4","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/config.js\n// module id = 345\n// module chunks = 0 1 2 3 4","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/container/Group.js\n// module id = 346\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/PathProxy.js\n// module id = 347\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/matrix.js\n// module id = 348\n// module chunks = 0 1 2 3 4","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 349\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/CoordinateSystem.js\n// module id = 350\n// module chunks = 0 1 2 3 4","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisHelper.js\n// module id = 351\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Interval.js\n// module id = 352\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/component.js\n// module id = 353\n// module chunks = 0 1 2 3 4","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/timsort.js\n// module id = 354\n// module chunks = 0 1 2 3 4","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Displayable.js\n// module id = 355\n// module chunks = 0 1 2 3 4","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Gradient.js\n// module id = 356\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Series.js\n// module id = 357\n// module chunks = 0 1 2 3 4","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/List.js\n// module id = 358\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/Symbol.js\n// module id = 359\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 360\n// module chunks = 0 1 2 3 4","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/colorPalette.js\n// module id = 361\n// module chunks = 0 1 2 3 4","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/symbol.js\n// module id = 362\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/view/Chart.js\n// module id = 363\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Element.js\n// module id = 364\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Animator.js\n// module id = 365\n// module chunks = 0 1 2 3 4","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/requestAnimationFrame.js\n// module id = 366\n// module chunks = 0 1 2 3 4","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/util.js\n// module id = 367\n// module chunks = 0 1 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/LRU.js\n// module id = 368\n// module chunks = 0 1 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/guid.js\n// module id = 369\n// module chunks = 0 1 2 3 4","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/log.js\n// module id = 370\n// module chunks = 0 1 2 3 4","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Image.js\n// module id = 371\n// module chunks = 0 1 2 3 4","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Pattern.js\n// module id = 372\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Style.js\n// module id = 373\n// module chunks = 0 1 2 3 4","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/poly.js\n// module id = 374\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/createListFromArray.js\n// module id = 376\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/grid.js\n// module id = 377\n// module chunks = 0 1 2 3 4","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Grid.js\n// module id = 378\n// module chunks = 0 1 2 3 4","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/util/throttle.js\n// module id = 379\n// module chunks = 0 1 2 3 4","/**\n * @file Visual mapping.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var linearMap = require('../util/number').linearMap;\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n\n    /**\n     * @param {Object} option\n     * @param {string} [option.type] See visualHandlers.\n     * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n     * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n     *                                              required when mappingMethod is 'linear'\n     * @param {Array.<Object>=} [option.pieceList] [\n     *                                             {value: someValue},\n     *                                             {interval: [min1, max1], visual: {...}},\n     *                                             {interval: [min2, max2]}\n     *                                             ],\n     *                                            required when mappingMethod is 'piecewise'.\n     *                                            Visual for only each piece can be specified.\n     * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n     *                                            required when mappingMethod is 'category'.\n     *                                            If no option.categories, categories is set\n     *                                            as [0, 1, 2, ...].\n     * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n     * @param {(Array|Object|*)} [option.visual]  Visual data.\n     *                                            when mappingMethod is 'category',\n     *                                            visual data can be array or object\n     *                                            (like: {cate1: '#222', none: '#fff'})\n     *                                            or primary types (which represents\n     *                                            defualt category visual), otherwise visual\n     *                                            can be array or primary (which will be\n     *                                            normalized to array).\n     *\n     */\n    var VisualMapping = function (option) {\n        var mappingMethod = option.mappingMethod;\n        var visualType = option.type;\n\n        /**\n         * @readOnly\n         * @type {Object}\n         */\n        var thisOption = this.option = zrUtil.clone(option);\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        this.type = visualType;\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        this.mappingMethod = mappingMethod;\n\n        /**\n         * @private\n         * @type {Function}\n         */\n        this._normalizeData = normalizers[mappingMethod];\n\n        var visualHandler = visualHandlers[visualType];\n\n        /**\n         * @public\n         * @type {Function}\n         */\n        this.applyVisual = visualHandler.applyVisual;\n\n        /**\n         * @public\n         * @type {Function}\n         */\n        this.getColorMapper = visualHandler.getColorMapper;\n\n        /**\n         * @private\n         * @type {Function}\n         */\n        this._doMap = visualHandler._doMap[mappingMethod];\n\n        if (mappingMethod === 'piecewise') {\n            normalizeVisualRange(thisOption);\n            preprocessForPiecewise(thisOption);\n        }\n        else if (mappingMethod === 'category') {\n            thisOption.categories\n                ? preprocessForSpecifiedCategory(thisOption)\n                // categories is ordinal when thisOption.categories not specified,\n                // which need no more preprocess except normalize visual.\n                : normalizeVisualRange(thisOption, true);\n        }\n        else { // mappingMethod === 'linear' or 'fixed'\n            zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n            normalizeVisualRange(thisOption);\n        }\n    };\n\n    VisualMapping.prototype = {\n\n        constructor: VisualMapping,\n\n        mapValueToVisual: function (value) {\n            var normalized = this._normalizeData(value);\n            return this._doMap(normalized, value);\n        },\n\n        getNormalizer: function () {\n            return zrUtil.bind(this._normalizeData, this);\n        }\n    };\n\n    var visualHandlers = VisualMapping.visualHandlers = {\n\n        color: {\n\n            applyVisual: makeApplyVisual('color'),\n\n            /**\n             * Create a mapper function\n             * @return {Function}\n             */\n            getColorMapper: function () {\n                var thisOption = this.option;\n                var parsedVisual = zrUtil.map(thisOption.visual, zrColor.parse);\n\n                return zrUtil.bind(\n                    thisOption.mappingMethod === 'category'\n                        ? function (value, isNormalized) {\n                            !isNormalized && (value = this._normalizeData(value));\n                            return doMapCategory.call(this, value);\n                        }\n                        : function (value, isNormalized, out) {\n                            // If output rgb array\n                            // which will be much faster and useful in pixel manipulation\n                            var returnRGBArray = !!out;\n                            !isNormalized && (value = this._normalizeData(value));\n                            out = zrColor.fastMapToColor(value, parsedVisual, out);\n                            return returnRGBArray ? out : zrUtil.stringify(out, 'rgba');\n                        },\n                    this\n                );\n            },\n\n            _doMap: {\n                linear: function (normalized) {\n                    return zrColor.mapToColor(normalized, this.option.visual);\n                },\n                category: doMapCategory,\n                piecewise: function (normalized, value) {\n                    var result = getSpecifiedVisual.call(this, value);\n                    if (result == null) {\n                        result = zrColor.mapToColor(normalized, this.option.visual);\n                    }\n                    return result;\n                },\n                fixed: doMapFixed\n            }\n        },\n\n        colorHue: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, value);\n        }),\n\n        colorSaturation: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, null, value);\n        }),\n\n        colorLightness: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyHSL(color, null, null, value);\n        }),\n\n        colorAlpha: makePartialColorVisualHandler(function (color, value) {\n            return zrColor.modifyAlpha(color, value);\n        }),\n\n        opacity: {\n            applyVisual: makeApplyVisual('opacity'),\n            _doMap: makeDoMap([0, 1])\n        },\n\n        symbol: {\n            applyVisual: function (value, getter, setter) {\n                var symbolCfg = this.mapValueToVisual(value);\n                if (zrUtil.isString(symbolCfg)) {\n                    setter('symbol', symbolCfg);\n                }\n                else if (isObject(symbolCfg)) {\n                    for (var name in symbolCfg) {\n                        if (symbolCfg.hasOwnProperty(name)) {\n                            setter(name, symbolCfg[name]);\n                        }\n                    }\n                }\n            },\n            _doMap: {\n                linear: doMapToArray,\n                category: doMapCategory,\n                piecewise: function (normalized, value) {\n                    var result = getSpecifiedVisual.call(this, value);\n                    if (result == null) {\n                        result = doMapToArray.call(this, normalized);\n                    }\n                    return result;\n                },\n                fixed: doMapFixed\n            }\n        },\n\n        symbolSize: {\n            applyVisual: makeApplyVisual('symbolSize'),\n            _doMap: makeDoMap([0, 1])\n        }\n    };\n\n\n    function preprocessForPiecewise(thisOption) {\n        var pieceList = thisOption.pieceList;\n        thisOption.hasSpecialVisual = false;\n\n        zrUtil.each(pieceList, function (piece, index) {\n            piece.originIndex = index;\n            // piece.visual is \"result visual value\" but not\n            // a visual range, so it does not need to be normalized.\n            if (piece.visual != null) {\n                thisOption.hasSpecialVisual = true;\n            }\n        });\n    }\n\n    function preprocessForSpecifiedCategory(thisOption) {\n        // Hash categories.\n        var categories = thisOption.categories;\n        var visual = thisOption.visual;\n\n        var categoryMap = thisOption.categoryMap = {};\n        each(categories, function (cate, index) {\n            categoryMap[cate] = index;\n        });\n\n        // Process visual map input.\n        if (!zrUtil.isArray(visual)) {\n            var visualArr = [];\n\n            if (zrUtil.isObject(visual)) {\n                each(visual, function (v, cate) {\n                    var index = categoryMap[cate];\n                    visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n                });\n            }\n            else { // Is primary type, represents default visual.\n                visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n            }\n\n            visual = thisOption.visual = visualArr;\n        }\n\n        // Remove categories that has no visual,\n        // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n        for (var i = categories.length - 1; i >= 0; i--) {\n            if (visual[i] == null) {\n                delete categoryMap[categories[i]];\n                categories.pop();\n            }\n        }\n    }\n\n    function normalizeVisualRange(thisOption, isCategory) {\n        var visual = thisOption.visual;\n        var visualArr = [];\n\n        if (zrUtil.isObject(visual)) {\n            each(visual, function (v) {\n                visualArr.push(v);\n            });\n        }\n        else if (visual != null) {\n            visualArr.push(visual);\n        }\n\n        var doNotNeedPair = {color: 1, symbol: 1};\n\n        if (!isCategory\n            && visualArr.length === 1\n            && !doNotNeedPair.hasOwnProperty(thisOption.type)\n        ) {\n            // Do not care visualArr.length === 0, which is illegal.\n            visualArr[1] = visualArr[0];\n        }\n\n        thisOption.visual = visualArr;\n    }\n\n    function makePartialColorVisualHandler(applyValue) {\n        return {\n            applyVisual: function (value, getter, setter) {\n                value = this.mapValueToVisual(value);\n                // Must not be array value\n                setter('color', applyValue(getter('color'), value));\n            },\n            _doMap: makeDoMap([0, 1])\n        };\n    }\n\n    function doMapToArray(normalized) {\n        var visual = this.option.visual;\n        return visual[\n            Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))\n        ] || {};\n    }\n\n    function makeApplyVisual(visualType) {\n        return function (value, getter, setter) {\n            setter(visualType, this.mapValueToVisual(value));\n        };\n    }\n\n    function doMapCategory(normalized) {\n        var visual = this.option.visual;\n        return visual[\n            (this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX)\n                ? normalized % visual.length\n                : normalized\n        ];\n    }\n\n    function doMapFixed() {\n        return this.option.visual[0];\n    }\n\n    function makeDoMap(sourceExtent) {\n        return {\n            linear: function (normalized) {\n                return linearMap(normalized, sourceExtent, this.option.visual, true);\n            },\n            category: doMapCategory,\n            piecewise: function (normalized, value) {\n                var result = getSpecifiedVisual.call(this, value);\n                if (result == null) {\n                    result = linearMap(normalized, sourceExtent, this.option.visual, true);\n                }\n                return result;\n            },\n            fixed: doMapFixed\n        };\n    }\n\n    function getSpecifiedVisual(value) {\n        var thisOption = this.option;\n        var pieceList = thisOption.pieceList;\n        if (thisOption.hasSpecialVisual) {\n            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n            var piece = pieceList[pieceIndex];\n            if (piece && piece.visual) {\n                return piece.visual[this.type];\n            }\n        }\n    }\n\n\n    /**\n     * Normalizers by mapping methods.\n     */\n    var normalizers = {\n\n        linear: function (value) {\n            return linearMap(value, this.option.dataExtent, [0, 1], true);\n        },\n\n        piecewise: function (value) {\n            var pieceList = this.option.pieceList;\n            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n            if (pieceIndex != null) {\n                return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n            }\n        },\n\n        category: function (value) {\n            var index = this.option.categories\n                ? this.option.categoryMap[value]\n                : value; // ordinal\n            return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n        },\n\n        fixed: zrUtil.noop\n    };\n\n\n\n    /**\n     * List available visual types.\n     *\n     * @public\n     * @return {Array.<string>}\n     */\n    VisualMapping.listVisualTypes = function () {\n        var visualTypes = [];\n        zrUtil.each(visualHandlers, function (handler, key) {\n            visualTypes.push(key);\n        });\n        return visualTypes;\n    };\n\n    /**\n     * @public\n     */\n    VisualMapping.addVisualHandler = function (name, handler) {\n        visualHandlers[name] = handler;\n    };\n\n    /**\n     * @public\n     */\n    VisualMapping.isValidType = function (visualType) {\n        return visualHandlers.hasOwnProperty(visualType);\n    };\n\n    /**\n     * Convinent method.\n     * Visual can be Object or Array or primary type.\n     *\n     * @public\n     */\n    VisualMapping.eachVisual = function (visual, callback, context) {\n        if (zrUtil.isObject(visual)) {\n            zrUtil.each(visual, callback, context);\n        }\n        else {\n            callback.call(context, visual);\n        }\n    };\n\n    VisualMapping.mapVisual = function (visual, callback, context) {\n        var isPrimary;\n        var newVisual = zrUtil.isArray(visual)\n            ? []\n            : zrUtil.isObject(visual)\n            ? {}\n            : (isPrimary = true, null);\n\n        VisualMapping.eachVisual(visual, function (v, key) {\n            var newVal = callback.call(context, v, key);\n            isPrimary ? (newVisual = newVal) : (newVisual[key] = newVal);\n        });\n        return newVisual;\n    };\n\n    /**\n     * @public\n     * @param {Object} obj\n     * @return {Oject} new object containers visual values.\n     *                 If no visuals, return null.\n     */\n    VisualMapping.retrieveVisuals = function (obj) {\n        var ret = {};\n        var hasVisual;\n\n        obj && each(visualHandlers, function (h, visualType) {\n            if (obj.hasOwnProperty(visualType)) {\n                ret[visualType] = obj[visualType];\n                hasVisual = true;\n            }\n        });\n\n        return hasVisual ? ret : null;\n    };\n\n    /**\n     * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n     *\n     * @public\n     * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n     *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n     * @return {Array.<string>} Sorted visual types.\n     */\n    VisualMapping.prepareVisualTypes = function (visualTypes) {\n        if (isObject(visualTypes)) {\n            var types = [];\n            each(visualTypes, function (item, type) {\n                types.push(type);\n            });\n            visualTypes = types;\n        }\n        else if (zrUtil.isArray(visualTypes)) {\n            visualTypes = visualTypes.slice();\n        }\n        else {\n            return [];\n        }\n\n        visualTypes.sort(function (type1, type2) {\n            // color should be front of colorSaturation, colorAlpha, ...\n            // symbol and symbolSize do not matter.\n            return (type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0)\n                ? 1 : -1;\n        });\n\n        return visualTypes;\n    };\n\n    /**\n     * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n     * Other visuals are only depends on themself.\n     *\n     * @public\n     * @param {string} visualType1\n     * @param {string} visualType2\n     * @return {boolean}\n     */\n    VisualMapping.dependsOn = function (visualType1, visualType2) {\n        return visualType2 === 'color'\n            ? !!(visualType1 && visualType1.indexOf(visualType2) === 0)\n            : visualType1 === visualType2;\n    };\n\n    /**\n     * @param {number} value\n     * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n     *                         Always from small to big.\n     * @param {boolean} [findClosestWhenOutside=false]\n     * @return {number} index\n     */\n    VisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n        var possibleI;\n        var abs = Infinity;\n\n        // value has the higher priority.\n        for (var i = 0, len = pieceList.length; i < len; i++) {\n            var pieceValue = pieceList[i].value;\n            if (pieceValue != null) {\n                if (pieceValue === value) {\n                    return i;\n                }\n                findClosestWhenOutside && updatePossible(pieceValue, i);\n            }\n        }\n\n        for (var i = 0, len = pieceList.length; i < len; i++) {\n            var piece = pieceList[i];\n            var interval = piece.interval;\n            var close = piece.close;\n\n            if (interval) {\n                if (interval[0] === -Infinity) {\n                    if (littleThan(close[1], value, interval[1])) {\n                        return i;\n                    }\n                }\n                else if (interval[1] === Infinity) {\n                    if (littleThan(close[0], interval[0], value)) {\n                        return i;\n                    }\n                }\n                else if (\n                    littleThan(close[0], interval[0], value)\n                    && littleThan(close[1], value, interval[1])\n                ) {\n                    return i;\n                }\n                findClosestWhenOutside && updatePossible(interval[0], i);\n                findClosestWhenOutside && updatePossible(interval[1], i);\n            }\n        }\n\n        if (findClosestWhenOutside) {\n            return value === Infinity\n                ? pieceList.length - 1\n                : value === -Infinity\n                ? 0\n                : possibleI;\n        }\n\n        function updatePossible(val, index) {\n            var newAbs = Math.abs(val - value);\n            if (newAbs < abs) {\n                abs = newAbs;\n                possibleI = index;\n            }\n        }\n\n    };\n\n    function littleThan(close, a, b) {\n        return close ? a <= b : a < b;\n    }\n\n    module.exports = VisualMapping;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/VisualMapping.js\n// module id = 380\n// module chunks = 2 3","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/LinearGradient.js\n// module id = 381\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 383\n// module chunks = 0 1 2 3 4","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip.js\n// module id = 384\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/view/Component.js\n// module id = 385\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/ExtensionAPI.js\n// module id = 386\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line.js\n// module id = 387\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/LineSeries.js\n// module id = 388\n// module chunks = 0 1 2 3 4","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/LineView.js\n// module id = 389\n// module chunks = 0 1 2 3 4","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 390\n// module chunks = 0 1 2 3 4","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/line/poly.js\n// module id = 391\n// module chunks = 0 1 2 3 4","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis.js\n// module id = 392\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis/AxisBuilder.js\n// module id = 393\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/axis/AxisView.js\n// module id = 394\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 395\n// module chunks = 0 1 2 3 4","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 396\n// module chunks = 0 1 2 3 4","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/tooltip/TooltipView.js\n// module id = 397\n// module chunks = 0 1 2 3 4","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/Axis.js\n// module id = 398\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisDefault.js\n// module id = 399\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 400\n// module chunks = 0 1 2 3 4","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/axisModelCreator.js\n// module id = 401\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 402\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 403\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 404\n// module chunks = 0 1 2 3 4","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/GridModel.js\n// module id = 405\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 406\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/DataDiffer.js\n// module id = 407\n// module chunks = 0 1 2 3 4","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/data/helper/completeDimensions.js\n// module id = 408\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/layout/points.js\n// module id = 409\n// module chunks = 0 1 2 3 4","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/loading/default.js\n// module id = 410\n// module chunks = 0 1 2 3 4","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/Global.js\n// module id = 411\n// module chunks = 0 1 2 3 4","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/OptionManager.js\n// module id = 412\n// module chunks = 0 1 2 3 4","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/globalDefault.js\n// module id = 413\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/areaStyle.js\n// module id = 414\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/boxLayout.js\n// module id = 415\n// module chunks = 0 1 2 3 4","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/itemStyle.js\n// module id = 416\n// module chunks = 0 1 2 3 4","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/lineStyle.js\n// module id = 417\n// module chunks = 0 1 2 3 4","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/model/mixin/textStyle.js\n// module id = 418\n// module chunks = 0 1 2 3 4","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/preprocessor/backwardCompat.js\n// module id = 419\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 420\n// module chunks = 0 1 2 3 4","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/processor/dataSample.js\n// module id = 421\n// module chunks = 0 1 2 3 4","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Log.js\n// module id = 422\n// module chunks = 0 1 2 3 4","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Ordinal.js\n// module id = 423\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/scale/Time.js\n// module id = 424\n// module chunks = 0 1 2 3 4","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/seriesColor.js\n// module id = 425\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/symbol.js\n// module id = 426\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Handler.js\n// module id = 427\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Layer.js\n// module id = 428\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Painter.js\n// module id = 429\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/Storage.js\n// module id = 430\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Animation.js\n// module id = 431\n// module chunks = 0 1 2 3 4","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/Clip.js\n// module id = 432\n// module chunks = 0 1 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/animation/easing.js\n// module id = 433\n// module chunks = 0 1 2 3 4","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/arc.js\n// module id = 434\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/cubic.js\n// module id = 435\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/line.js\n// module id = 436\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/path.js\n// module id = 437\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/quadratic.js\n// module id = 438\n// module chunks = 0 1 2 3 4","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/contain/windingLine.js\n// module id = 439\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/GestureMgr.js\n// module id = 440\n// module chunks = 0 1 2 3 4","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/core/bbox.js\n// module id = 441\n// module chunks = 0 1 2 3 4","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/dom/HandlerProxy.js\n// module id = 442\n// module chunks = 0 1 2 3 4","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/CompoundPath.js\n// module id = 443\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/RadialGradient.js\n// module id = 444\n// module chunks = 0 1 2 3 4","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/Text.js\n// module id = 445\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/roundRect.js\n// module id = 446\n// module chunks = 0 1 2 3 4","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 447\n// module chunks = 0 1 2 3 4","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 448\n// module chunks = 0 1 2 3 4","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/mixin/RectText.js\n// module id = 449\n// module chunks = 0 1 2 3 4","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Arc.js\n// module id = 450\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 451\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Circle.js\n// module id = 452\n// module chunks = 0 1 2 3 4","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Line.js\n// module id = 453\n// module chunks = 0 1 2 3 4","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Polygon.js\n// module id = 454\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Polyline.js\n// module id = 455\n// module chunks = 0 1 2 3 4","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Rect.js\n// module id = 456\n// module chunks = 0 1 2 3 4","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Ring.js\n// module id = 457\n// module chunks = 0 1 2 3 4","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/graphic/shape/Sector.js\n// module id = 458\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Animatable.js\n// module id = 459\n// module chunks = 0 1 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Draggable.js\n// module id = 460\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/mixin/Transformable.js\n// module id = 461\n// module chunks = 0 1 2 3 4","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/path.js\n// module id = 462\n// module chunks = 0 1 2 3 4","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/tool/transformPath.js\n// module id = 463\n// module chunks = 0 1 2 3 4","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.4@zrender/lib/zrender.js\n// module id = 464\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar.js\n// module id = 465\n// module chunks = 0 1 2 3","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar/BarSeries.js\n// module id = 466\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar/BarView.js\n// module id = 467\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 468\n// module chunks = 0 1 2 3","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar/barItemStyle.js\n// module id = 469\n// module chunks = 0 1 2 3","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/chart/bar/helper.js\n// module id = 470\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/title.js\n// module id = 471\n// module chunks = 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/layout/barGrid.js\n// module id = 472\n// module chunks = 0 1 2 3","\n\n    /**\n     * Calculate slider move result.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] and be bigger then handleEnds[1].\n     *                                    handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *                                extent[0] should less or equals than extent[1].\n     * @param {string} mode 'rigid': Math.abs(handleEnds[0] - handleEnds[1]) remain unchanged,\n     *                      'cross' handleEnds[0] can be bigger then handleEnds[1],\n     *                      'push' handleEnds[0] can not be bigger then handleEnds[1],\n     *                              when they touch, one push other.\n     * @param {number} handleIndex If mode is 'rigid', handleIndex is not required.\n     * @param {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, mode, handleIndex) {\n        if (!delta) {\n            return handleEnds;\n        }\n\n        if (mode === 'rigid') {\n            delta = getRealDelta(delta, handleEnds, extent);\n            handleEnds[0] += delta;\n            handleEnds[1] += delta;\n        }\n        else {\n            delta = getRealDelta(delta, handleEnds[handleIndex], extent);\n            handleEnds[handleIndex] += delta;\n\n            if (mode === 'push' && handleEnds[0] > handleEnds[1]) {\n                handleEnds[1 - handleIndex] = handleEnds[handleIndex];\n            }\n        }\n\n        return handleEnds;\n\n        function getRealDelta(delta, handleEnds, extent) {\n            var handleMinMax = !handleEnds.length\n                ? [handleEnds, handleEnds]\n                : handleEnds.slice();\n            handleEnds[0] > handleEnds[1] && handleMinMax.reverse();\n\n            if (delta < 0 && handleMinMax[0] + delta < extent[0]) {\n                delta = extent[0] - handleMinMax[0];\n            }\n            if (delta > 0 && handleMinMax[1] + delta > extent[1]) {\n                delta = extent[1] - handleMinMax[1];\n            }\n            return delta;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/helper/sliderMove.js\n// module id = 475\n// module chunks = 1 2 3","/**\n * @file Controller visual map model\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var visualDefault = require('../../visual/visualDefault');\n    var VisualMapping = require('../../visual/VisualMapping');\n    var visualSolution = require('../../visual/visualSolution');\n    var mapVisual = VisualMapping.mapVisual;\n    var modelUtil = require('../../util/model');\n    var eachVisual = VisualMapping.eachVisual;\n    var numberUtil = require('../../util/number');\n    var isArray = zrUtil.isArray;\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n    var linearMap = numberUtil.linearMap;\n    var noop = zrUtil.noop;\n\n    var DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\n\n    var VisualMapModel = echarts.extendComponentModel({\n\n        type: 'visualMap',\n\n        dependencies: ['series'],\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        stateList: ['inRange', 'outOfRange'],\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        replacableOptionKeys: [\n            'inRange', 'outOfRange', 'target', 'controller', 'color'\n        ],\n\n        /**\n         * [lowerBound, upperBound]\n         *\n         * @readOnly\n         * @type {Array.<number>}\n         */\n        dataBound: [-Infinity, Infinity],\n\n        /**\n         * @readOnly\n         * @type {string|Object}\n         */\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            zlevel: 0,\n            z: 4,\n\n            seriesIndex: null,       // 所控制的series indices，默认所有有value的series.\n\n                                    // set min: 0, max: 200, only for campatible with ec2.\n                                    // In fact min max should not have default value.\n            min: 0,                 // min value, must specified if pieces is not specified.\n            max: 200,               // max value, must specified if pieces is not specified.\n\n            dimension: null,\n            inRange: null,          // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n                                    // 'symbol', 'symbolSize'\n            outOfRange: null,       // 'color', 'colorHue', 'colorSaturation',\n                                    // 'colorLightness', 'colorAlpha',\n                                    // 'symbol', 'symbolSize'\n\n            left: 0,                // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n            right: null,            // The same as left.\n            top: null,              // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n            bottom: 0,              // The same as top.\n\n            itemWidth: null,\n            itemHeight: null,\n            inverse: false,\n            orient: 'vertical',        // 'horizontal' ¦ 'vertical'\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderColor: '#ccc',       // 值域边框颜色\n            contentColor: '#5793f3',\n            inactiveColor: '#aaa',\n            borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）\n            padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，\n                                       // 接受数组分别设定上右下左边距，同css\n            textGap: 10,               //\n            precision: 0,              // 小数精度，默认为0，无小数点\n            color: null,               //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n\n            formatter: null,\n            text: null,                // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n            textStyle: {\n                color: '#333'          // 值域文字颜色\n            }\n        },\n\n        /**\n         * @protected\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * @private\n             * @type {Array.<number>}\n             */\n            this._dataExtent;\n\n            /**\n             * @readOnly\n             */\n            this.targetVisuals = {};\n\n            /**\n             * @readOnly\n             */\n            this.controllerVisuals = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * [width, height]\n             * @readOnly\n             * @type {Array.<number>}\n             */\n            this.itemSize;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        /**\n         * @protected\n         */\n        optionUpdated: function (newOption, isInit) {\n            var thisOption = this.option;\n\n            // FIXME\n            // necessary?\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            !isInit && visualSolution.replaceVisualOption(\n                thisOption, newOption, this.replacableOptionKeys\n            );\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this.resetItemSize();\n\n            this.completeVisualOption();\n        },\n\n        /**\n         * @protected\n         */\n        resetVisual: function (supplementVisualOption) {\n            var stateList = this.stateList;\n            supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n\n            this.controllerVisuals = visualSolution.createVisualMappings(\n                this.option.controller, stateList, supplementVisualOption\n            );\n            this.targetVisuals = visualSolution.createVisualMappings(\n                this.option.target, stateList, supplementVisualOption\n            );\n        },\n\n\n        /**\n         * @protected\n         */\n        resetTargetSeries: function () {\n            var thisOption = this.option;\n            var allSeriesIndex = thisOption.seriesIndex == null;\n            thisOption.seriesIndex = allSeriesIndex\n                ? [] : modelUtil.normalizeToArray(thisOption.seriesIndex);\n\n            allSeriesIndex && this.ecModel.eachSeries(function (seriesModel, index) {\n                thisOption.seriesIndex.push(index);\n            });\n        },\n\n        /**\n         * @public\n         */\n        eachTargetSeries: function (callback, context) {\n            zrUtil.each(this.option.seriesIndex, function (seriesIndex) {\n                callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n            }, this);\n        },\n\n        /**\n         * @pubilc\n         */\n        isTargetSeries: function (seriesModel) {\n            var is = false;\n            this.eachTargetSeries(function (model) {\n                model === seriesModel && (is = true);\n            });\n            return is;\n        },\n\n        /**\n         * @example\n         * this.formatValueText(someVal); // format single numeric value to text.\n         * this.formatValueText(someVal, true); // format single category value to text.\n         * this.formatValueText([min, max]); // format numeric min-max to text.\n         * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n         * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n         *\n         * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n         * @param {boolean} [isCategory=false] Only available when value is number.\n         * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n         * @return {string}\n         * @protected\n         */\n        formatValueText: function(value, isCategory, edgeSymbols) {\n            var option = this.option;\n            var precision = option.precision;\n            var dataBound = this.dataBound;\n            var formatter = option.formatter;\n            var isMinMax;\n            var textValue;\n            edgeSymbols = edgeSymbols || ['<', '>'];\n\n            if (zrUtil.isArray(value)) {\n                value = value.slice();\n                isMinMax = true;\n            }\n\n            textValue = isCategory\n                ? value\n                : (isMinMax\n                    ? [toFixed(value[0]), toFixed(value[1])]\n                    : toFixed(value)\n                );\n\n            if (zrUtil.isString(formatter)) {\n                return formatter\n                    .replace('{value}', isMinMax ? textValue[0] : textValue)\n                    .replace('{value2}', isMinMax ? textValue[1] : textValue);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                return isMinMax\n                    ? formatter(value[0], value[1])\n                    : formatter(value);\n            }\n\n            if (isMinMax) {\n                if (value[0] === dataBound[0]) {\n                    return edgeSymbols[0] + ' ' + textValue[1];\n                }\n                else if (value[1] === dataBound[1]) {\n                    return edgeSymbols[1] + ' ' + textValue[0];\n                }\n                else {\n                    return textValue[0] + ' - ' + textValue[1];\n                }\n            }\n            else { // Format single value (includes category case).\n                return textValue;\n            }\n\n            function toFixed(val) {\n                return val === dataBound[0]\n                    ? 'min'\n                    : val === dataBound[1]\n                    ? 'max'\n                    : (+val).toFixed(precision);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        resetExtent: function () {\n            var thisOption = this.option;\n\n            // Can not calculate data extent by data here.\n            // Because series and data may be modified in processing stage.\n            // So we do not support the feature \"auto min/max\".\n\n            var extent = asc([thisOption.min, thisOption.max]);\n\n            this._dataExtent = extent;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/data/List} list\n         * @return {string} Concrete dimention. If return null/undefined,\n         *                  no dimension used.\n         */\n        getDataDimension: function (list) {\n            var optDim = this.option.dimension;\n            return optDim != null\n                ? optDim : list.dimensions.length - 1;\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        getExtent: function () {\n            return this._dataExtent.slice();\n        },\n\n        /**\n         * @protected\n         */\n        completeVisualOption: function () {\n            var thisOption = this.option;\n            var base = {inRange: thisOption.inRange, outOfRange: thisOption.outOfRange};\n\n            var target = thisOption.target || (thisOption.target = {});\n            var controller = thisOption.controller || (thisOption.controller = {});\n\n            zrUtil.merge(target, base); // Do not override\n            zrUtil.merge(controller, base); // Do not override\n\n            var isCategory = this.isCategory();\n\n            completeSingle.call(this, target);\n            completeSingle.call(this, controller);\n            completeInactive.call(this, target, 'inRange', 'outOfRange');\n            // completeInactive.call(this, target, 'outOfRange', 'inRange');\n            completeController.call(this, controller);\n\n            function completeSingle(base) {\n                // Compatible with ec2 dataRange.color.\n                // The mapping order of dataRange.color is: [high value, ..., low value]\n                // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n                // Notice: ec2 has no inverse.\n                if (isArray(thisOption.color)\n                    // If there has been inRange: {symbol: ...}, adding color is a mistake.\n                    // So adding color only when no inRange defined.\n                    && !base.inRange\n                ) {\n                    base.inRange = {color: thisOption.color.slice().reverse()};\n                }\n\n                // Compatible with previous logic, always give a defautl color, otherwise\n                // simple config with no inRange and outOfRange will not work.\n                // Originally we use visualMap.color as the default color, but setOption at\n                // the second time the default color will be erased. So we change to use\n                // constant DEFAULT_COLOR.\n                // If user do not want the defualt color, set inRange: {color: null}.\n                base.inRange = base.inRange || {color: DEFAULT_COLOR};\n\n                // If using shortcut like: {inRange: 'symbol'}, complete default value.\n                each(this.stateList, function (state) {\n                    var visualType = base[state];\n\n                    if (zrUtil.isString(visualType)) {\n                        var defa = visualDefault.get(visualType, 'active', isCategory);\n                        if (defa) {\n                            base[state] = {};\n                            base[state][visualType] = defa;\n                        }\n                        else {\n                            // Mark as not specified.\n                            delete base[state];\n                        }\n                    }\n                }, this);\n            }\n\n            function completeInactive(base, stateExist, stateAbsent) {\n                var optExist = base[stateExist];\n                var optAbsent = base[stateAbsent];\n\n                if (optExist && !optAbsent) {\n                    optAbsent = base[stateAbsent] = {};\n                    each(optExist, function (visualData, visualType) {\n                        if (!VisualMapping.isValidType(visualType)) {\n                            return;\n                        }\n\n                        var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n                        if (defa != null) {\n                            optAbsent[visualType] = defa;\n\n                            // Compatibable with ec2:\n                            // Only inactive color to rgba(0,0,0,0) can not\n                            // make label transparent, so use opacity also.\n                            if (visualType === 'color'\n                                && !optAbsent.hasOwnProperty('opacity')\n                                && !optAbsent.hasOwnProperty('colorAlpha')\n                            ) {\n                                optAbsent.opacity = [0, 0];\n                            }\n                        }\n                    });\n                }\n            }\n\n            function completeController(controller) {\n                var symbolExists = (controller.inRange || {}).symbol\n                    || (controller.outOfRange || {}).symbol;\n                var symbolSizeExists = (controller.inRange || {}).symbolSize\n                    || (controller.outOfRange || {}).symbolSize;\n                var inactiveColor = this.get('inactiveColor');\n\n                each(this.stateList, function (state) {\n\n                    var itemSize = this.itemSize;\n                    var visuals = controller[state];\n\n                    // Set inactive color for controller if no other color\n                    // attr (like colorAlpha) specified.\n                    if (!visuals) {\n                        visuals = controller[state] = {\n                            color: isCategory ? inactiveColor : [inactiveColor]\n                        };\n                    }\n\n                    // Consistent symbol and symbolSize if not specified.\n                    if (visuals.symbol == null) {\n                        visuals.symbol = symbolExists\n                            && zrUtil.clone(symbolExists)\n                            || (isCategory ? 'roundRect' : ['roundRect']);\n                    }\n                    if (visuals.symbolSize == null) {\n                        visuals.symbolSize = symbolSizeExists\n                            && zrUtil.clone(symbolSizeExists)\n                            || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n                    }\n\n                    // Filter square and none.\n                    visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n                        return (symbol === 'none' || symbol === 'square') ? 'roundRect' : symbol;\n                    });\n\n                    // Normalize symbolSize\n                    var symbolSize = visuals.symbolSize;\n\n                    if (symbolSize != null) {\n                        var max = -Infinity;\n                        // symbolSize can be object when categories defined.\n                        eachVisual(symbolSize, function (value) {\n                            value > max && (max = value);\n                        });\n                        visuals.symbolSize = mapVisual(symbolSize, function (value) {\n                            return linearMap(value, [0, max], [0, itemSize[0]], true);\n                        });\n                    }\n\n                }, this);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        resetItemSize: function () {\n            this.itemSize = [\n                parseFloat(this.get('itemWidth')),\n                parseFloat(this.get('itemHeight'))\n            ];\n        },\n\n        /**\n         * @public\n         */\n        isCategory: function () {\n            return !!this.option.categories;\n        },\n\n        /**\n         * @public\n         * @abstract\n         */\n        setSelected: noop,\n\n        /**\n         * @public\n         * @abstract\n         * @param {*|module:echarts/data/List} valueOrData\n         * @param {number} dataIndex\n         * @return {string} state See this.stateList\n         */\n        getValueState: noop,\n\n        /**\n         * FIXME\n         * Do not publish to thirt-part-dev temporarily\n         * util the interface is stable. (Should it return\n         * a function but not visual meta?)\n         *\n         * @pubilc\n         * @abstract\n         * @param {Function} getColorVisual\n         *        params: value, valueState\n         *        return: color\n         * @return {Object} visualMeta\n         *        should includes {stops, outerColors}\n         *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n         */\n        getVisualMeta: noop\n\n    });\n\n    module.exports = VisualMapModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/VisualMapModel.js\n// module id = 480\n// module chunks = 2 3","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var formatUtil = require('../../util/format');\n    var layout = require('../../util/layout');\n    var echarts = require('../../echarts');\n    var VisualMapping = require('../../visual/VisualMapping');\n\n    module.exports = echarts.extendComponentView({\n\n        type: 'visualMap',\n\n        /**\n         * @readOnly\n         * @type {Object}\n         */\n        autoPositionValues: {left: 1, right: 1, top: 1, bottom: 1},\n\n        init: function (ecModel, api) {\n            /**\n             * @readOnly\n             * @type {module:echarts/model/Global}\n             */\n            this.ecModel = ecModel;\n\n            /**\n             * @readOnly\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this.api = api;\n\n            /**\n             * @readOnly\n             * @type {module:echarts/component/visualMap/visualMapModel}\n             */\n            this.visualMapModel;\n        },\n\n        /**\n         * @protected\n         */\n        render: function (visualMapModel, ecModel, api, payload) {\n            this.visualMapModel = visualMapModel;\n\n            if (visualMapModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            this.doRender.apply(this, arguments);\n        },\n\n        /**\n         * @protected\n         */\n        renderBackground: function (group) {\n            var visualMapModel = this.visualMapModel;\n            var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n            var rect = group.getBoundingRect();\n\n            group.add(new graphic.Rect({\n                z2: -1, // Lay background rect on the lowest layer.\n                silent: true,\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[3] + padding[1],\n                    height: rect.height + padding[0] + padding[2]\n                },\n                style: {\n                    fill: visualMapModel.get('backgroundColor'),\n                    stroke: visualMapModel.get('borderColor'),\n                    lineWidth: visualMapModel.get('borderWidth')\n                }\n            }));\n        },\n\n        /**\n         * @protected\n         * @param {number} targetValue can be Infinity or -Infinity\n         * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n         * @param {Object} [opts]\n         * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n         * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n         * @return {*} Visual value.\n         */\n        getControllerVisual: function (targetValue, visualCluster, opts) {\n            opts = opts || {};\n\n            var forceState = opts.forceState;\n            var visualMapModel = this.visualMapModel;\n            var visualObj = {};\n\n            // Default values.\n            if (visualCluster === 'symbol') {\n                visualObj.symbol = visualMapModel.get('itemSymbol');\n            }\n            if (visualCluster === 'color') {\n                var defaultColor = visualMapModel.get('contentColor');\n                visualObj.color = defaultColor;\n            }\n\n            function getter(key) {\n                return visualObj[key];\n            }\n\n            function setter(key, value) {\n                visualObj[key] = value;\n            }\n\n            var mappings = visualMapModel.controllerVisuals[\n                forceState || visualMapModel.getValueState(targetValue)\n            ];\n            var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n\n            zrUtil.each(visualTypes, function (type) {\n                var visualMapping = mappings[type];\n                if (opts.convertOpacityToAlpha && type === 'opacity') {\n                    type = 'colorAlpha';\n                    visualMapping = mappings.__alphaForOpacity;\n                }\n                if (VisualMapping.dependsOn(type, visualCluster)) {\n                    visualMapping && visualMapping.applyVisual(\n                        targetValue, getter, setter\n                    );\n                }\n            });\n\n            return visualObj[visualCluster];\n        },\n\n        /**\n         * @protected\n         */\n        positionGroup: function (group) {\n            var model = this.visualMapModel;\n            var api = this.api;\n\n            layout.positionElement(\n                group,\n                model.getBoxLayoutParams(),\n                {width: api.getWidth(), height: api.getHeight()}\n            );\n        },\n\n        /**\n         * @protected\n         * @abstract\n         */\n        doRender: zrUtil.noop\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/VisualMapView.js\n// module id = 481\n// module chunks = 2 3","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var layout = require('../../util/layout');\n\n    var helper = {\n\n        /**\n         * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Array.<number>} itemSize always [short, long]\n         * @return {string} 'left' or 'right' or 'top' or 'bottom'\n         */\n        getItemAlign: function (visualMapModel, api, itemSize) {\n            var modelOption = visualMapModel.option;\n            var itemAlign = modelOption.align;\n\n            if (itemAlign != null && itemAlign !== 'auto') {\n                return itemAlign;\n            }\n\n            // Auto decision align.\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n\n            var paramsSet = [\n                ['left', 'right', 'width'],\n                ['top', 'bottom', 'height']\n            ];\n            var reals = paramsSet[realIndex];\n            var fakeValue = [0, null, 10];\n\n            var layoutInput = {};\n            for (var i = 0; i < 3; i++) {\n                layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n                layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n            }\n\n            var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n            var rect = layout.getLayoutRect(layoutInput, ecSize, modelOption.padding);\n\n            return reals[\n                (rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5\n                    < ecSize[rParam[1]] * 0.5 ? 0 : 1\n            ];\n        },\n\n        /**\n         * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n         * dataIndexInside means filtered index.\n         */\n        convertDataIndex: function (batch) {\n            zrUtil.each(batch || [], function (batchItem) {\n                if (batch.dataIndex != null) {\n                    batch.dataIndexInside = batch.dataIndex;\n                    batch.dataIndex = null;\n                }\n            });\n            return batch;\n        }\n\n    };\n\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/helper.js\n// module id = 482\n// module chunks = 2 3","/**\n * @file VisualMap preprocessor\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        var visualMap = option && option.visualMap;\n\n        if (!zrUtil.isArray(visualMap)) {\n            visualMap = visualMap ? [visualMap] : [];\n        }\n\n        each(visualMap, function (opt) {\n            if (!opt) {\n                return;\n            }\n\n            // rename splitList to pieces\n            if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n                opt.pieces = opt.splitList;\n                delete opt.splitList;\n            }\n\n            var pieces = opt.pieces;\n            if (pieces && zrUtil.isArray(pieces)) {\n                each(pieces, function (piece) {\n                    if (zrUtil.isObject(piece)) {\n                        if (has(piece, 'start') && !has(piece, 'min')) {\n                            piece.min = piece.start;\n                        }\n                        if (has(piece, 'end') && !has(piece, 'max')) {\n                            piece.max = piece.end;\n                        }\n                    }\n                });\n            }\n        });\n    };\n\n    function has(obj, name) {\n        return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/preprocessor.js\n// module id = 483\n// module chunks = 2 3","\n\n    require('../../model/Component').registerSubTypeDefaulter('visualMap', function (option) {\n        // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n        return (\n                !option.categories\n                && (\n                    !(\n                        option.pieces\n                            ? option.pieces.length > 0\n                            : option.splitNumber > 0\n                    )\n                    || option.calculable\n                )\n            )\n            ? 'continuous' : 'piecewise';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/typeDefaulter.js\n// module id = 484\n// module chunks = 2 3","/**\n * @file Data range visual coding.\n */\n\n\n    var echarts = require('../../echarts');\n    var visualSolution = require('../../visual/visualSolution');\n    var VisualMapping = require('../../visual/VisualMapping');\n    var zrUtil = require('zrender/lib/core/util');\n\n    echarts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n        ecModel.eachComponent('visualMap', function (visualMapModel) {\n            processSingleVisualMap(visualMapModel, ecModel);\n        });\n\n        prepareVisualMeta(ecModel);\n    });\n\n    function processSingleVisualMap(visualMapModel, ecModel) {\n        visualMapModel.eachTargetSeries(function (seriesModel) {\n            var data = seriesModel.getData();\n\n            visualSolution.applyVisual(\n                visualMapModel.stateList,\n                visualMapModel.targetVisuals,\n                data,\n                visualMapModel.getValueState,\n                visualMapModel,\n                visualMapModel.getDataDimension(data)\n            );\n        });\n    }\n\n    // Only support color.\n    function prepareVisualMeta(ecModel) {\n        ecModel.eachSeries(function (seriesModel) {\n            var data = seriesModel.getData();\n            var visualMetaList = [];\n\n            ecModel.eachComponent('visualMap', function (visualMapModel) {\n                if (visualMapModel.isTargetSeries(seriesModel)) {\n                    var visualMeta = visualMapModel.getVisualMeta(\n                        zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)\n                    ) || {stops: [], outerColors: []};\n                    visualMeta.dimension = visualMapModel.getDataDimension(data);\n                    visualMetaList.push(visualMeta);\n                }\n            });\n\n            // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n            seriesModel.getData().setVisual('visualMeta', visualMetaList);\n        });\n    }\n\n    // FIXME\n    // performance and export for heatmap?\n    // value can be Infinity or -Infinity\n    function getColorVisual(seriesModel, visualMapModel, value, valueState) {\n        var mappings = visualMapModel.targetVisuals[valueState];\n        var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n        var resultVisual = {\n            color: seriesModel.getData().getVisual('color') // default color.\n        };\n\n        for (var i = 0, len = visualTypes.length; i < len; i++) {\n            var type = visualTypes[i];\n            var mapping = mappings[\n                type === 'opacity' ? '__alphaForOpacity' : type\n            ];\n            mapping && mapping.applyVisual(value, getVisual, setVisual);\n        }\n\n        return resultVisual.color;\n\n        function getVisual(key) {\n            return resultVisual[key];\n        }\n\n        function setVisual(key, value) {\n            resultVisual[key] = value;\n        }\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/visualEncoding.js\n// module id = 485\n// module chunks = 2 3","/**\n * @file Data range action\n */\n\n\n    var echarts = require('../../echarts');\n\n    var actionInfo = {\n        type: 'selectDataRange',\n        event: 'dataRangeSelected',\n        // FIXME use updateView appears wrong\n        update: 'update'\n    };\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n\n        ecModel.eachComponent({mainType: 'visualMap', query: payload}, function (model) {\n            model.setSelected(payload.selected);\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/visualMapAction.js\n// module id = 486\n// module chunks = 2 3","/**\n * @file Visual mapping.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var visualDefault = {\n\n        /**\n         * @public\n         */\n        get: function (visualType, key, isCategory) {\n            var value = zrUtil.clone(\n                (defaultOption[visualType] || {})[key]\n            );\n\n            return isCategory\n                ? (zrUtil.isArray(value) ? value[value.length - 1] : value)\n                : value;\n        }\n\n    };\n\n    var defaultOption = {\n\n        color: {\n            active: ['#006edd', '#e0ffff'],\n            inactive: ['rgba(0,0,0,0)']\n        },\n\n        colorHue: {\n            active: [0, 360],\n            inactive: [0, 0]\n        },\n\n        colorSaturation: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        colorLightness: {\n            active: [0.9, 0.5],\n            inactive: [0, 0]\n        },\n\n        colorAlpha: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        opacity: {\n            active: [0.3, 1],\n            inactive: [0, 0]\n        },\n\n        symbol: {\n            active: ['circle', 'roundRect', 'diamond'],\n            inactive: ['none']\n        },\n\n        symbolSize: {\n            active: [10, 50],\n            inactive: [0, 0]\n        }\n    };\n\n    module.exports = visualDefault;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/visualDefault.js\n// module id = 487\n// module chunks = 2 3","/**\n * @file Visual solution, for consistent option specification.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var VisualMapping = require('./VisualMapping');\n    var each = zrUtil.each;\n\n    function hasKeys(obj) {\n        if (obj) {\n            for (var name in obj){\n                if (obj.hasOwnProperty(name)) {\n                    return true;\n                }\n            }\n        }\n    }\n\n    var visualSolution = {\n\n        /**\n         * @param {Object} option\n         * @param {Array.<string>} stateList\n         * @param {Function} [supplementVisualOption]\n         * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n         */\n        createVisualMappings: function (option, stateList, supplementVisualOption) {\n            var visualMappings = {};\n\n            each(stateList, function (state) {\n                var mappings = visualMappings[state] = createMappings();\n\n                each(option[state], function (visualData, visualType) {\n                    if (!VisualMapping.isValidType(visualType)) {\n                        return;\n                    }\n                    var mappingOption = {\n                        type: visualType,\n                        visual: visualData\n                    };\n                    supplementVisualOption && supplementVisualOption(mappingOption, state);\n                    mappings[visualType] = new VisualMapping(mappingOption);\n\n                    // Prepare a alpha for opacity, for some case that opacity\n                    // is not supported, such as rendering using gradient color.\n                    if (visualType === 'opacity') {\n                        mappingOption = zrUtil.clone(mappingOption);\n                        mappingOption.type = 'colorAlpha';\n                        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n                    }\n                });\n            });\n\n            return visualMappings;\n\n            function createMappings() {\n                var Creater = function () {};\n                // Make sure hidden fields will not be visited by\n                // object iteration (with hasOwnProperty checking).\n                Creater.prototype.__hidden = Creater.prototype;\n                var obj = new Creater();\n                return obj;\n            }\n        },\n\n        /**\n         * @param {Object} thisOption\n         * @param {Object} newOption\n         * @param {Array.<string>} keys\n         */\n        replaceVisualOption: function (thisOption, newOption, keys) {\n            // Visual attributes merge is not supported, otherwise it\n            // brings overcomplicated merge logic. See #2853. So if\n            // newOption has anyone of these keys, all of these keys\n            // will be reset. Otherwise, all keys remain.\n            var has;\n            zrUtil.each(keys, function (key) {\n                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n                    has = true;\n                }\n            });\n            has && zrUtil.each(keys, function (key) {\n                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n                    thisOption[key] = zrUtil.clone(newOption[key]);\n                }\n                else {\n                    delete thisOption[key];\n                }\n            });\n        },\n\n        /**\n         * @param {Array.<string>} stateList\n         * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n         * @param {module:echarts/data/List} list\n         * @param {Function} getValueState param: valueOrIndex, return: state.\n         * @param {object} [scope] Scope for getValueState\n         * @param {string} [dimension] Concrete dimension, if used.\n         */\n        applyVisual: function (stateList, visualMappings, data, getValueState, scope, dimension) {\n            var visualTypesMap = {};\n            zrUtil.each(stateList, function (state) {\n                var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n                visualTypesMap[state] = visualTypes;\n            });\n\n            var dataIndex;\n\n            function getVisual(key) {\n                return data.getItemVisual(dataIndex, key);\n            }\n\n            function setVisual(key, value) {\n                data.setItemVisual(dataIndex, key, value);\n            }\n\n            if (dimension == null) {\n                data.each(eachItem, true);\n            }\n            else {\n                data.each([dimension], eachItem, true);\n            }\n\n            function eachItem(valueOrIndex, index) {\n                dataIndex = dimension == null ? valueOrIndex : index;\n\n                var rawDataItem = data.getRawDataItem(dataIndex);\n                // Consider performance\n                if (rawDataItem && rawDataItem.visualMap === false) {\n                    return;\n                }\n\n                var valueState = getValueState.call(scope, valueOrIndex);\n                var mappings = visualMappings[valueState];\n                var visualTypes = visualTypesMap[valueState];\n\n                for (var i = 0, len = visualTypes.length; i < len; i++) {\n                    var type = visualTypes[i];\n                    mappings[type] && mappings[type].applyVisual(\n                        valueOrIndex, getVisual, setVisual\n                    );\n                }\n            }\n        }\n    };\n\n    module.exports = visualSolution;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/visual/visualSolution.js\n// module id = 488\n// module chunks = 2 3","/**\n * visualMap component entry\n */\n\n\n    require('./visualMapContinuous');\n    require('./visualMapPiecewise');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap.js\n// module id = 528\n// module chunks = 2 3","/**\n * @file Data zoom model\n */\n\n\n    var VisualMapModel = require('./VisualMapModel');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n\n    // Constant\n    var DEFAULT_BAR_BOUND = [20, 140];\n\n    var ContinuousModel = VisualMapModel.extend({\n\n        type: 'visualMap.continuous',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            align: 'auto',          // 'auto', 'left', 'right', 'top', 'bottom'\n            calculable: false,      // This prop effect default component type determine,\n                                    // See echarts/component/visualMap/typeDefaulter.\n            range: null,            // selected range. In default case `range` is [min, max]\n                                    // and can auto change along with modification of min max,\n                                    // util use specifid a range.\n            realtime: true,         // Whether realtime update.\n            itemHeight: null,       // The length of the range control edge.\n            itemWidth: null,        // The length of the other side.\n            hoverLink: true,        // Enable hover highlight.\n            hoverLinkDataSize: null,// The size of hovered data.\n            hoverLinkOnHandle: true // Whether trigger hoverLink when hover handle.\n        },\n\n        /**\n         * @override\n         */\n        optionUpdated: function (newOption, isInit) {\n            ContinuousModel.superApply(this, 'optionUpdated', arguments);\n\n            this.resetTargetSeries();\n            this.resetExtent();\n\n            this.resetVisual(function (mappingOption) {\n                mappingOption.mappingMethod = 'linear';\n                mappingOption.dataExtent = this.getExtent();\n            });\n\n            this._resetRange();\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        resetItemSize: function () {\n            ContinuousModel.superApply(this, 'resetItemSize', arguments);\n\n            var itemSize = this.itemSize;\n\n            this._orient === 'horizontal' && itemSize.reverse();\n\n            (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n            (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n        },\n\n        /**\n         * @private\n         */\n        _resetRange: function () {\n            var dataExtent = this.getExtent();\n            var range = this.option.range;\n\n            if (!range || range.auto) {\n                // `range` should always be array (so we dont use other\n                // value like 'auto') for user-friend. (consider getOption).\n                dataExtent.auto = 1;\n                this.option.range = dataExtent;\n            }\n            else if (zrUtil.isArray(range)) {\n                if (range[0] > range[1]) {\n                    range.reverse();\n                }\n                range[0] = Math.max(range[0], dataExtent[0]);\n                range[1] = Math.min(range[1], dataExtent[1]);\n            }\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        completeVisualOption: function () {\n            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n\n            zrUtil.each(this.stateList, function (state) {\n                var symbolSize = this.option.controller[state].symbolSize;\n                if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n                    symbolSize[0] = 0; // For good looking.\n                }\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        setSelected: function (selected) {\n            this.option.range = selected.slice();\n            this._resetRange();\n        },\n\n        /**\n         * @public\n         */\n        getSelected: function () {\n            var dataExtent = this.getExtent();\n\n            var dataInterval = numberUtil.asc(\n                (this.get('range') || []).slice()\n            );\n\n            // Clamp\n            dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n            dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n            dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n            dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n\n            return dataInterval;\n        },\n\n        /**\n         * @override\n         */\n        getValueState: function (value) {\n            var range = this.option.range;\n            var dataExtent = this.getExtent();\n\n            // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n            // range[1] is processed likewise.\n            return (\n                (range[0] <= dataExtent[0] || range[0] <= value)\n                && (range[1] >= dataExtent[1] || value <= range[1])\n            ) ? 'inRange' : 'outOfRange';\n        },\n\n        /**\n         * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n         */\n        findTargetDataIndices: function (range) {\n            var result = [];\n\n            this.eachTargetSeries(function (seriesModel) {\n                var dataIndices = [];\n                var data = seriesModel.getData();\n\n                data.each(this.getDataDimension(data), function (value, dataIndex) {\n                    range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n                }, true, this);\n\n                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\n            }, this);\n\n            return result;\n        },\n\n        /**\n         * @implement\n         */\n        getVisualMeta: function (getColorVisual) {\n            var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n            var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n            var stops = [];\n\n            function setStop(value, valueState) {\n                stops.push({\n                    value: value,\n                    color: getColorVisual(value, valueState)\n                });\n            }\n\n            // Format to: outOfRange -- inRange -- outOfRange.\n            var iIdx = 0;\n            var oIdx = 0;\n            var iLen = iVals.length;\n            var oLen = oVals.length;\n\n            for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n                // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n                if (oVals[oIdx] < iVals[iIdx]) {\n                    setStop(oVals[oIdx], 'outOfRange');\n                }\n            }\n            for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n                // If range is full, value beyond min, max will be clamped.\n                // make a singularity\n                first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n                setStop(iVals[iIdx], 'inRange');\n            }\n            for (var first = 1; oIdx < oLen; oIdx++) {\n                if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n                    // make a singularity\n                    if (first) {\n                        stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n                        first = 0;\n                    }\n                    setStop(oVals[oIdx], 'outOfRange');\n                }\n            }\n\n            var stopsLen = stops.length;\n\n            return {\n                stops: stops,\n                outerColors: [\n                    stopsLen ? stops[0].color : 'transparent',\n                    stopsLen ? stops[stopsLen - 1].color : 'transparent'\n                ]\n            };\n        }\n\n    });\n\n    function getColorStopValues(visualMapModel, valueState, dataExtent) {\n        if (dataExtent[0] === dataExtent[1]) {\n            return dataExtent.slice();\n        }\n\n        // When using colorHue mapping, it is not linear color any more.\n        // Moreover, canvas gradient seems not to be accurate linear.\n        // FIXME\n        // Should be arbitrary value 100? or based on pixel size?\n        var count = 200;\n        var step = (dataExtent[1] - dataExtent[0]) / count;\n\n        var value = dataExtent[0];\n        var stopValues = [];\n        for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n            stopValues.push(value);\n            value += step;\n        }\n        stopValues.push(dataExtent[1]);\n\n        return stopValues;\n    }\n\n    module.exports = ContinuousModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/ContinuousModel.js\n// module id = 529\n// module chunks = 2 3","\n\n    var VisualMapView = require('./VisualMapView');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var sliderMove = require('../helper/sliderMove');\n    var LinearGradient = require('zrender/lib/graphic/LinearGradient');\n    var helper = require('./helper');\n    var modelUtil = require('../../util/model');\n\n    var linearMap = numberUtil.linearMap;\n    var each = zrUtil.each;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n\n    // Arbitrary value\n    var HOVER_LINK_SIZE = 12;\n    var HOVER_LINK_OUT = 6;\n\n    // Notice:\n    // Any \"interval\" should be by the order of [low, high].\n    // \"handle0\" (handleIndex === 0) maps to\n    // low data value: this._dataInterval[0] and has low coord.\n    // \"handle1\" (handleIndex === 1) maps to\n    // high data value: this._dataInterval[1] and has high coord.\n    // The logic of transform is implemented in this._createBarGroup.\n\n    var ContinuousView = VisualMapView.extend({\n\n        type: 'visualMap.continuous',\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            ContinuousView.superApply(this, 'init', arguments);\n\n            /**\n             * @private\n             */\n            this._shapes = {};\n\n            /**\n             * @private\n             */\n            this._dataInterval = [];\n\n            /**\n             * @private\n             */\n            this._handleEnds = [];\n\n            /**\n             * @private\n             */\n            this._orient;\n\n            /**\n             * @private\n             */\n            this._useHandle;\n\n            /**\n             * @private\n             */\n            this._hoverLinkDataIndices = [];\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._hovering;\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        doRender: function (visualMapModel, ecModel, api, payload) {\n            if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n                this._buildView();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _buildView: function () {\n            this.group.removeAll();\n\n            var visualMapModel = this.visualMapModel;\n            var thisGroup = this.group;\n\n            this._orient = visualMapModel.get('orient');\n            this._useHandle = visualMapModel.get('calculable');\n\n            this._resetInterval();\n\n            this._renderBar(thisGroup);\n\n            var dataRangeText = visualMapModel.get('text');\n            this._renderEndsText(thisGroup, dataRangeText, 0);\n            this._renderEndsText(thisGroup, dataRangeText, 1);\n\n            // Do this for background size calculation.\n            this._updateView(true);\n\n            // After updating view, inner shapes is built completely,\n            // and then background can be rendered.\n            this.renderBackground(thisGroup);\n\n            // Real update view\n            this._updateView();\n\n            this._enableHoverLinkToSeries();\n            this._enableHoverLinkFromSeries();\n\n            this.positionGroup(thisGroup);\n        },\n\n        /**\n         * @private\n         */\n        _renderEndsText: function (group, dataRangeText, endsIndex) {\n            if (!dataRangeText) {\n                return;\n            }\n\n            // Compatible with ec2, text[0] map to high value, text[1] map low value.\n            var text = dataRangeText[1 - endsIndex];\n            text = text != null ? text + '' : '';\n\n            var visualMapModel = this.visualMapModel;\n            var textGap = visualMapModel.get('textGap');\n            var itemSize = visualMapModel.itemSize;\n\n            var barGroup = this._shapes.barGroup;\n            var position = this._applyTransform(\n                [\n                    itemSize[0] / 2,\n                    endsIndex === 0 ? -textGap : itemSize[1] + textGap\n                ],\n                barGroup\n            );\n            var align = this._applyTransform(\n                endsIndex === 0 ? 'bottom' : 'top',\n                barGroup\n            );\n            var orient = this._orient;\n            var textStyleModel = this.visualMapModel.textStyleModel;\n\n            this.group.add(new graphic.Text({\n                style: {\n                    x: position[0],\n                    y: position[1],\n                    textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n                    textAlign: orient === 'horizontal' ? align : 'center',\n                    text: text,\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            }));\n        },\n\n        /**\n         * @private\n         */\n        _renderBar: function (targetGroup) {\n            var visualMapModel = this.visualMapModel;\n            var shapes = this._shapes;\n            var itemSize = visualMapModel.itemSize;\n            var orient = this._orient;\n            var useHandle = this._useHandle;\n            var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n            var barGroup = shapes.barGroup = this._createBarGroup(itemAlign);\n\n            // Bar\n            barGroup.add(shapes.outOfRange = createPolygon());\n            barGroup.add(shapes.inRange = createPolygon(\n                null,\n                useHandle ? 'move' : null,\n                zrUtil.bind(this._dragHandle, this, 'all', false),\n                zrUtil.bind(this._dragHandle, this, 'all', true)\n            ));\n\n            var textRect = visualMapModel.textStyleModel.getTextRect('国');\n            var textSize = mathMax(textRect.width, textRect.height);\n\n            // Handle\n            if (useHandle) {\n                shapes.handleThumbs = [];\n                shapes.handleLabels = [];\n                shapes.handleLabelPoints = [];\n\n                this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n                this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n            }\n\n            this._createIndicator(barGroup, itemSize, textSize, orient);\n\n            targetGroup.add(barGroup);\n        },\n\n        /**\n         * @private\n         */\n        _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n            var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n            var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n            var handleThumb = createPolygon(\n                createHandlePoints(handleIndex, textSize),\n                'move',\n                onDrift,\n                onDragEnd\n            );\n            handleThumb.position[0] = itemSize[0];\n            barGroup.add(handleThumb);\n\n            // Text is always horizontal layout but should not be effected by\n            // transform (orient/inverse). So label is built separately but not\n            // use zrender/graphic/helper/RectText, and is located based on view\n            // group (according to handleLabelPoint) but not barGroup.\n            var textStyleModel = this.visualMapModel.textStyleModel;\n            var handleLabel = new graphic.Text({\n                draggable: true,\n                drift: onDrift,\n                ondragend: onDragEnd,\n                style: {\n                    x: 0, y: 0, text: '',\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            });\n            this.group.add(handleLabel);\n\n            var handleLabelPoint = [\n                orient === 'horizontal'\n                    ? textSize / 2\n                    : textSize * 1.5,\n                orient === 'horizontal'\n                    ? (handleIndex === 0 ? -(textSize * 1.5) : (textSize * 1.5))\n                    : (handleIndex === 0 ? -textSize / 2 : textSize / 2)\n            ];\n\n            var shapes = this._shapes;\n            shapes.handleThumbs[handleIndex] = handleThumb;\n            shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n            shapes.handleLabels[handleIndex] = handleLabel;\n        },\n\n        /**\n         * @private\n         */\n        _createIndicator: function (barGroup, itemSize, textSize, orient) {\n            var indicator = createPolygon([[0, 0]], 'move');\n            indicator.position[0] = itemSize[0];\n            indicator.attr({invisible: true, silent: true});\n            barGroup.add(indicator);\n\n            var textStyleModel = this.visualMapModel.textStyleModel;\n            var indicatorLabel = new graphic.Text({\n                silent: true,\n                invisible: true,\n                style: {\n                    x: 0, y: 0, text: '',\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            });\n            this.group.add(indicatorLabel);\n\n            var indicatorLabelPoint = [\n                orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3,\n                0\n            ];\n\n            var shapes = this._shapes;\n            shapes.indicator = indicator;\n            shapes.indicatorLabel = indicatorLabel;\n            shapes.indicatorLabelPoint = indicatorLabelPoint;\n        },\n\n        /**\n         * @private\n         */\n        _dragHandle: function (handleIndex, isEnd, dx, dy) {\n            if (!this._useHandle) {\n                return;\n            }\n\n            this._dragging = !isEnd;\n\n            if (!isEnd) {\n                // Transform dx, dy to bar coordination.\n                var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n                this._updateInterval(handleIndex, vertex[1]);\n\n                // Considering realtime, update view should be executed\n                // before dispatch action.\n                this._updateView();\n            }\n\n            // dragEnd do not dispatch action when realtime.\n            if (isEnd === !this.visualMapModel.get('realtime')) { // jshint ignore:line\n                this.api.dispatchAction({\n                    type: 'selectDataRange',\n                    from: this.uid,\n                    visualMapId: this.visualMapModel.id,\n                    selected: this._dataInterval.slice()\n                });\n            }\n\n            if (isEnd) {\n                !this._hovering && this._clearHoverLinkToSeries();\n            }\n            else if (useHoverLinkOnHandle(this.visualMapModel)) {\n                this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var visualMapModel = this.visualMapModel;\n\n            var dataInterval = this._dataInterval = visualMapModel.getSelected();\n            var dataExtent = visualMapModel.getExtent();\n            var sizeExtent = [0, visualMapModel.itemSize[1]];\n\n            this._handleEnds = [\n                linearMap(dataInterval[0], dataExtent, sizeExtent, true),\n                linearMap(dataInterval[1], dataExtent, sizeExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} dx\n         * @param {number} dy\n         */\n        _updateInterval: function (handleIndex, delta) {\n            delta = delta || 0;\n            var visualMapModel = this.visualMapModel;\n            var handleEnds = this._handleEnds;\n\n            sliderMove(\n                delta,\n                handleEnds,\n                [0, visualMapModel.itemSize[1]],\n                handleIndex === 'all' ? 'rigid' : 'push',\n                handleIndex\n            );\n            var dataExtent = visualMapModel.getExtent();\n            var sizeExtent = [0, visualMapModel.itemSize[1]];\n            // Update data interval.\n            this._dataInterval = [\n                linearMap(handleEnds[0], sizeExtent, dataExtent, true),\n                linearMap(handleEnds[1], sizeExtent, dataExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (forSketch) {\n            var visualMapModel = this.visualMapModel;\n            var dataExtent = visualMapModel.getExtent();\n            var shapes = this._shapes;\n\n            var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n            var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n            var visualInRange = this._createBarVisual(\n                this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange'\n            );\n            var visualOutOfRange = this._createBarVisual(\n                dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange'\n            );\n\n            shapes.inRange\n                .setStyle({\n                    fill: visualInRange.barColor,\n                    opacity: visualInRange.opacity\n                })\n                .setShape('points', visualInRange.barPoints);\n            shapes.outOfRange\n                .setStyle({\n                    fill: visualOutOfRange.barColor,\n                    opacity: visualOutOfRange.opacity\n                })\n                .setShape('points', visualOutOfRange.barPoints);\n\n            this._updateHandle(inRangeHandleEnds, visualInRange);\n        },\n\n        /**\n         * @private\n         */\n        _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n            var opts = {\n                forceState: forceState,\n                convertOpacityToAlpha: true\n            };\n            var colorStops = this._makeColorGradient(dataInterval, opts);\n\n            var symbolSizes = [\n                this.getControllerVisual(dataInterval[0], 'symbolSize', opts),\n                this.getControllerVisual(dataInterval[1], 'symbolSize', opts)\n            ];\n            var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n            return {\n                barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n                barPoints: barPoints,\n                handlesColor: [\n                    colorStops[0].color,\n                    colorStops[colorStops.length - 1].color\n                ]\n            };\n        },\n\n        /**\n         * @private\n         */\n        _makeColorGradient: function (dataInterval, opts) {\n            // Considering colorHue, which is not linear, so we have to sample\n            // to calculate gradient color stops, but not only caculate head\n            // and tail.\n            var sampleNumber = 100; // Arbitrary value.\n            var colorStops = [];\n            var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n\n            colorStops.push({\n                color: this.getControllerVisual(dataInterval[0], 'color', opts),\n                offset: 0\n            });\n\n            for (var i = 1; i < sampleNumber; i++) {\n                var currValue = dataInterval[0] + step * i;\n                if (currValue > dataInterval[1]) {\n                    break;\n                }\n                colorStops.push({\n                    color: this.getControllerVisual(currValue, 'color', opts),\n                    offset: i / sampleNumber\n                });\n            }\n\n            colorStops.push({\n                color: this.getControllerVisual(dataInterval[1], 'color', opts),\n                offset: 1\n            });\n\n            return colorStops;\n        },\n\n        /**\n         * @private\n         */\n        _createBarPoints: function (handleEnds, symbolSizes) {\n            var itemSize = this.visualMapModel.itemSize;\n\n            return [\n                [itemSize[0] - symbolSizes[0], handleEnds[0]],\n                [itemSize[0], handleEnds[0]],\n                [itemSize[0], handleEnds[1]],\n                [itemSize[0] - symbolSizes[1], handleEnds[1]]\n            ];\n        },\n\n        /**\n         * @private\n         */\n        _createBarGroup: function (itemAlign) {\n            var orient = this._orient;\n            var inverse = this.visualMapModel.get('inverse');\n\n            return new graphic.Group(\n                (orient === 'horizontal' && !inverse)\n                ? {scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1], rotation: Math.PI / 2}\n                : (orient === 'horizontal' && inverse)\n                ? {scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1], rotation: -Math.PI / 2}\n                : (orient === 'vertical' && !inverse)\n                ? {scale: itemAlign === 'left' ? [1, -1] : [-1, -1]}\n                : {scale: itemAlign === 'left' ? [1, 1] : [-1, 1]}\n            );\n        },\n\n        /**\n         * @private\n         */\n        _updateHandle: function (handleEnds, visualInRange) {\n            if (!this._useHandle) {\n                return;\n            }\n\n            var shapes = this._shapes;\n            var visualMapModel = this.visualMapModel;\n            var handleThumbs = shapes.handleThumbs;\n            var handleLabels = shapes.handleLabels;\n\n            each([0, 1], function (handleIndex) {\n                var handleThumb = handleThumbs[handleIndex];\n                handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n                handleThumb.position[1] = handleEnds[handleIndex];\n\n                // Update handle label position.\n                var textPoint = graphic.applyTransform(\n                    shapes.handleLabelPoints[handleIndex],\n                    graphic.getTransform(handleThumb, this.group)\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n                    textVerticalAlign: 'middle',\n                    textAlign: this._applyTransform(\n                        this._orient === 'horizontal'\n                            ? (handleIndex === 0 ? 'bottom' : 'top')\n                            : 'left',\n                        shapes.barGroup\n                    )\n                });\n            }, this);\n        },\n\n        /**\n         * @private\n         * @param {number} cursorValue\n         * @param {number} textValue\n         * @param {string} [rangeSymbol]\n         * @param {number} [halfHoverLinkSize]\n         */\n        _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n            var visualMapModel = this.visualMapModel;\n            var dataExtent = visualMapModel.getExtent();\n            var itemSize = visualMapModel.itemSize;\n            var sizeExtent = [0, itemSize[1]];\n            var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n\n            var shapes = this._shapes;\n            var indicator = shapes.indicator;\n            if (!indicator) {\n                return;\n            }\n\n            indicator.position[1] = pos;\n            indicator.attr('invisible', false);\n            indicator.setShape('points', createIndicatorPoints(\n                !!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]\n            ));\n\n            var opts = {convertOpacityToAlpha: true};\n            var color = this.getControllerVisual(cursorValue, 'color', opts);\n            indicator.setStyle('fill', color);\n\n            // Update handle label position.\n            var textPoint = graphic.applyTransform(\n                shapes.indicatorLabelPoint,\n                graphic.getTransform(indicator, this.group)\n            );\n\n            var indicatorLabel = shapes.indicatorLabel;\n            indicatorLabel.attr('invisible', false);\n            var align = this._applyTransform('left', shapes.barGroup);\n            var orient = this._orient;\n            indicatorLabel.setStyle({\n                text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n                textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n                textAlign: orient === 'horizontal' ? 'center' : align,\n                x: textPoint[0],\n                y: textPoint[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLinkToSeries: function () {\n            var self = this;\n            this._shapes.barGroup\n\n                .on('mousemove', function (e) {\n                    self._hovering = true;\n\n                    if (!self._dragging) {\n                        var itemSize = self.visualMapModel.itemSize;\n                        var pos = self._applyTransform(\n                            [e.offsetX, e.offsetY], self._shapes.barGroup, true, true\n                        );\n                        // For hover link show when hover handle, which might be\n                        // below or upper than sizeExtent.\n                        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n                        self._doHoverLinkToSeries(\n                            pos[1],\n                            0 <= pos[0] && pos[0] <= itemSize[0]\n                        );\n                    }\n                })\n\n                .on('mouseout', function () {\n                    // When mouse is out of handle, hoverLink still need\n                    // to be displayed when realtime is set as false.\n                    self._hovering = false;\n                    !self._dragging && self._clearHoverLinkToSeries();\n                });\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLinkFromSeries: function () {\n            var zr = this.api.getZr();\n\n            if (this.visualMapModel.option.hoverLink) {\n                zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n                zr.on('mouseout', this._hideIndicator, this);\n            }\n            else {\n                this._clearHoverLinkFromSeries();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n            var visualMapModel = this.visualMapModel;\n            var itemSize = visualMapModel.itemSize;\n\n            if (!visualMapModel.option.hoverLink) {\n                return;\n            }\n\n            var sizeExtent = [0, itemSize[1]];\n            var dataExtent = visualMapModel.getExtent();\n\n            // For hover link show when hover handle, which might be below or upper than sizeExtent.\n            cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n\n            var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n            var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n            var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n            var valueRange = [\n                linearMap(hoverRange[0], sizeExtent, dataExtent, true),\n                linearMap(hoverRange[1], sizeExtent, dataExtent, true)\n            ];\n            // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n            // where china and india has very large population.\n            hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n            hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity);\n\n            // Do not show indicator when mouse is over handle,\n            // otherwise labels overlap, especially when dragging.\n            if (hoverOnBar) {\n                if (valueRange[0] === -Infinity) {\n                    this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n                }\n                else if (valueRange[1] === Infinity) {\n                    this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n                }\n                else {\n                    this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n                }\n            }\n\n            // When realtime is set as false, handles, which are in barGroup,\n            // also trigger hoverLink, which help user to realize where they\n            // focus on when dragging. (see test/heatmap-large.html)\n            // When realtime is set as true, highlight will not show when hover\n            // handle, because the label on handle, which displays a exact value\n            // but not range, might mislead users.\n            var oldBatch = this._hoverLinkDataIndices;\n            var newBatch = [];\n            if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n                newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n            }\n\n            var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n            this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n            this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n        },\n\n        /**\n         * @private\n         */\n        _hoverLinkFromSeriesMouseOver: function (e) {\n            var el = e.target;\n\n            if (!el || el.dataIndex == null) {\n                return;\n            }\n\n            var dataModel = el.dataModel || this.ecModel.getSeriesByIndex(el.seriesIndex);\n            var data = dataModel.getData(el.dataType);\n            var dim = data.getDimension(this.visualMapModel.getDataDimension(data));\n            var value = data.get(dim, el.dataIndex, true);\n\n            if (!isNaN(value)) {\n                this._showIndicator(value, value);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _hideIndicator: function () {\n            var shapes = this._shapes;\n            shapes.indicator && shapes.indicator.attr('invisible', true);\n            shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n        },\n\n        /**\n         * @private\n         */\n        _clearHoverLinkToSeries: function () {\n            this._hideIndicator();\n\n            var indices = this._hoverLinkDataIndices;\n\n            this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n            indices.length = 0;\n        },\n\n        /**\n         * @private\n         */\n        _clearHoverLinkFromSeries: function () {\n            this._hideIndicator();\n\n            var zr = this.api.getZr();\n            zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n            zr.off('mouseout', this._hideIndicator);\n        },\n\n        /**\n         * @private\n         */\n        _applyTransform: function (vertex, element, inverse, global) {\n            var transform = graphic.getTransform(element, global ? null : this.group);\n\n            return graphic[\n                zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'\n            ](vertex, transform, inverse);\n        },\n\n        /**\n         * @private\n         */\n        _dispatchHighDown: function (type, batch) {\n            batch && batch.length && this.api.dispatchAction({\n                type: type,\n                batch: batch\n            });\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            this._clearHoverLinkFromSeries();\n            this._clearHoverLinkToSeries();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            this._clearHoverLinkFromSeries();\n            this._clearHoverLinkToSeries();\n        }\n\n    });\n\n    function createPolygon(points, cursor, onDrift, onDragEnd) {\n        return new graphic.Polygon({\n            shape: {points: points},\n            draggable: !!onDrift,\n            cursor: cursor,\n            drift: onDrift,\n            ondragend: onDragEnd\n        });\n    }\n\n    function createHandlePoints(handleIndex, textSize) {\n        return handleIndex === 0\n            ? [[0, 0], [textSize, 0], [textSize, -textSize]]\n            : [[0, 0], [textSize, 0], [textSize, textSize]];\n    }\n\n    function createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n        return isRange\n            ? [ // indicate range\n                [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))],\n                [HOVER_LINK_OUT, 0],\n                [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]\n            ]\n            : [ // indicate single value\n                [0, 0], [5, -5], [5, 5]\n            ];\n    }\n\n    function getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n        var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n        var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n        if (hoverLinkDataSize) {\n            halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n        }\n        return halfHoverLinkSize;\n    }\n\n    function useHoverLinkOnHandle(visualMapModel) {\n        return !visualMapModel.get('realtime') && visualMapModel.get('hoverLinkOnHandle');\n    }\n\n    module.exports = ContinuousView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/ContinuousView.js\n// module id = 530\n// module chunks = 2 3","\n\n    var VisualMapModel = require('./VisualMapModel');\n    var zrUtil = require('zrender/lib/core/util');\n    var VisualMapping = require('../../visual/VisualMapping');\n    var visualDefault = require('../../visual/visualDefault');\n    var reformIntervals = require('../../util/number').reformIntervals;\n\n    var PiecewiseModel = VisualMapModel.extend({\n\n        type: 'visualMap.piecewise',\n\n        /**\n         * Order Rule:\n         *\n         * option.categories / option.pieces / option.text / option.selected:\n         *     If !option.inverse,\n         *     Order when vertical: ['top', ..., 'bottom'].\n         *     Order when horizontal: ['left', ..., 'right'].\n         *     If option.inverse, the meaning of\n         *     the order should be reversed.\n         *\n         * this._pieceList:\n         *     The order is always [low, ..., high].\n         *\n         * Mapping from location to low-high:\n         *     If !option.inverse\n         *     When vertical, top is high.\n         *     When horizontal, right is high.\n         *     If option.inverse, reverse.\n         */\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            selected: null,             // Object. If not specified, means selected.\n                                        // When pieces and splitNumber: {'0': true, '5': true}\n                                        // When categories: {'cate1': false, 'cate3': true}\n                                        // When selected === false, means all unselected.\n\n            minOpen: false,             // Whether include values that smaller than `min`.\n            maxOpen: false,             // Whether include values that bigger than `max`.\n\n            align: 'auto',              // 'auto', 'left', 'right'\n            itemWidth: 20,              // When put the controller vertically, it is the length of\n                                        // horizontal side of each item. Otherwise, vertical side.\n            itemHeight: 14,             // When put the controller vertically, it is the length of\n                                        // vertical side of each item. Otherwise, horizontal side.\n            itemSymbol: 'roundRect',\n            pieceList: null,            // Each item is Object, with some of those attrs:\n                                        // {min, max, lt, gt, lte, gte, value,\n                                        // color, colorSaturation, colorAlpha, opacity,\n                                        // symbol, symbolSize}, which customize the range or visual\n                                        // coding of the certain piece. Besides, see \"Order Rule\".\n            categories: null,           // category names, like: ['some1', 'some2', 'some3'].\n                                        // Attr min/max are ignored when categories set. See \"Order Rule\"\n            splitNumber: 5,             // If set to 5, auto split five pieces equally.\n                                        // If set to 0 and component type not set, component type will be\n                                        // determined as \"continuous\". (It is less reasonable but for ec2\n                                        // compatibility, see echarts/component/visualMap/typeDefaulter)\n            selectedMode: 'multiple',   // Can be 'multiple' or 'single'.\n            itemGap: 10,                // The gap between two items, in px.\n            hoverLink: true,            // Enable hover highlight.\n\n            showLabel: null             // By default, when text is used, label will hide (the logic\n                                        // is remained for compatibility reason)\n        },\n\n        /**\n         * @override\n         */\n        optionUpdated: function (newOption, isInit) {\n            PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n\n            /**\n             * The order is always [low, ..., high].\n             * [{text: string, interval: Array.<number>}, ...]\n             * @private\n             * @type {Array.<Object>}\n             */\n            this._pieceList = [];\n\n            this.resetTargetSeries();\n            this.resetExtent();\n\n            /**\n             * 'pieces', 'categories', 'splitNumber'\n             * @type {string}\n             */\n            var mode = this._mode = this._determineMode();\n\n            resetMethods[this._mode].call(this);\n\n            this._resetSelected(newOption, isInit);\n\n            var categories = this.option.categories;\n\n            this.resetVisual(function (mappingOption, state) {\n                if (mode === 'categories') {\n                    mappingOption.mappingMethod = 'category';\n                    mappingOption.categories = zrUtil.clone(categories);\n                }\n                else {\n                    mappingOption.dataExtent = this.getExtent();\n                    mappingOption.mappingMethod = 'piecewise';\n                    mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n                        var piece = zrUtil.clone(piece);\n                        if (state !== 'inRange') {\n                            // FIXME\n                            // outOfRange do not support special visual in pieces.\n                            piece.visual = null;\n                        }\n                        return piece;\n                    });\n                }\n            });\n        },\n\n        /**\n         * @protected\n         * @override\n         */\n        completeVisualOption: function () {\n            // Consider this case:\n            // visualMap: {\n            //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n            // }\n            // where no inRange/outOfRange set but only pieces. So we should make\n            // default inRange/outOfRange for this case, otherwise visuals that only\n            // appear in `pieces` will not be taken into account in visual encoding.\n\n            var option = this.option;\n            var visualTypesInPieces = {};\n            var visualTypes = VisualMapping.listVisualTypes();\n            var isCategory = this.isCategory();\n\n            zrUtil.each(option.pieces, function (piece) {\n                zrUtil.each(visualTypes, function (visualType) {\n                    if (piece.hasOwnProperty(visualType)) {\n                        visualTypesInPieces[visualType] = 1;\n                    }\n                });\n            });\n\n            zrUtil.each(visualTypesInPieces, function (v, visualType) {\n                var exists = 0;\n                zrUtil.each(this.stateList, function (state) {\n                    exists |= has(option, state, visualType)\n                        || has(option.target, state, visualType);\n                }, this);\n\n                !exists && zrUtil.each(this.stateList, function (state) {\n                    (option[state] || (option[state] = {}))[visualType] = visualDefault.get(\n                        visualType, state === 'inRange' ? 'active' : 'inactive', isCategory\n                    );\n                });\n            }, this);\n\n            function has(obj, state, visualType) {\n                return obj && obj[state] && (\n                    zrUtil.isObject(obj[state])\n                        ? obj[state].hasOwnProperty(visualType)\n                        : obj[state] === visualType // e.g., inRange: 'symbol'\n                );\n            }\n\n            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n        },\n\n        _resetSelected: function (newOption, isInit) {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n\n            // Selected do not merge but all override.\n            var selected = (isInit ? thisOption : newOption).selected || {};\n            thisOption.selected = selected;\n\n            // Consider 'not specified' means true.\n            zrUtil.each(pieceList, function (piece, index) {\n                var key = this.getSelectedMapKey(piece);\n                if (!selected.hasOwnProperty(key)) {\n                    selected[key] = true;\n                }\n            }, this);\n\n            if (thisOption.selectedMode === 'single') {\n                // Ensure there is only one selected.\n                var hasSel = false;\n\n                zrUtil.each(pieceList, function (piece, index) {\n                    var key = this.getSelectedMapKey(piece);\n                    if (selected[key]) {\n                        hasSel\n                            ? (selected[key] = false)\n                            : (hasSel = true);\n                    }\n                }, this);\n            }\n            // thisOption.selectedMode === 'multiple', default: all selected.\n        },\n\n        /**\n         * @public\n         */\n        getSelectedMapKey: function (piece) {\n            return this._mode === 'categories'\n                ? piece.value + '' : piece.index + '';\n        },\n\n        /**\n         * @public\n         */\n        getPieceList: function () {\n            return this._pieceList;\n        },\n\n        /**\n         * @private\n         * @return {string}\n         */\n        _determineMode: function () {\n            var option = this.option;\n\n            return option.pieces && option.pieces.length > 0\n                ? 'pieces'\n                : this.option.categories\n                ? 'categories'\n                : 'splitNumber';\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        setSelected: function (selected) {\n            this.option.selected = zrUtil.clone(selected);\n        },\n\n        /**\n         * @public\n         * @override\n         */\n        getValueState: function (value) {\n            var index = VisualMapping.findPieceIndex(value, this._pieceList);\n\n            return index != null\n                ? (this.option.selected[this.getSelectedMapKey(this._pieceList[index])]\n                    ? 'inRange' : 'outOfRange'\n                )\n                : 'outOfRange';\n        },\n\n        /**\n         * @public\n         * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n         */\n        findTargetDataIndices: function (pieceIndex) {\n            var result = [];\n\n            this.eachTargetSeries(function (seriesModel) {\n                var dataIndices = [];\n                var data = seriesModel.getData();\n\n                data.each(this.getDataDimension(data), function (value, dataIndex) {\n                    // Should always base on model pieceList, because it is order sensitive.\n                    var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n                    pIdx === pieceIndex && dataIndices.push(dataIndex);\n                }, true, this);\n\n                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\n            }, this);\n\n            return result;\n        },\n\n        /**\n         * @private\n         * @param {Object} piece piece.value or piece.interval is required.\n         * @return {number} Can be Infinity or -Infinity\n         */\n        getRepresentValue: function (piece) {\n            var representValue;\n            if (this.isCategory()) {\n                representValue = piece.value;\n            }\n            else {\n                if (piece.value != null) {\n                    representValue = piece.value;\n                }\n                else {\n                    var pieceInterval = piece.interval || [];\n                    representValue = (pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity)\n                        ? 0\n                        : (pieceInterval[0] + pieceInterval[1]) / 2;\n                }\n            }\n            return representValue;\n        },\n\n        getVisualMeta: function (getColorVisual) {\n            // Do not support category. (category axis is ordinal, numerical)\n            if (this.isCategory()) {\n                return;\n            }\n\n            var stops = [];\n            var outerColors = [];\n            var visualMapModel = this;\n\n            function setStop(interval, valueState) {\n                var representValue = visualMapModel.getRepresentValue({interval: interval});\n                if (!valueState) {\n                    valueState = visualMapModel.getValueState(representValue);\n                }\n                var color = getColorVisual(representValue, valueState);\n                if (interval[0] === -Infinity) {\n                    outerColors[0] = color;\n                }\n                else if (interval[1] === Infinity) {\n                    outerColors[1] = color;\n                }\n                else {\n                    stops.push(\n                        {value: interval[0], color: color},\n                        {value: interval[1], color: color}\n                    );\n                }\n            }\n\n            // Suplement\n            var pieceList = this._pieceList.slice();\n            if (!pieceList.length) {\n                pieceList.push({interval: [-Infinity, Infinity]});\n            }\n            else {\n                var edge = pieceList[0].interval[0];\n                edge !== -Infinity && pieceList.unshift({interval: [-Infinity, edge]});\n                edge = pieceList[pieceList.length - 1].interval[1];\n                edge !== Infinity && pieceList.push({interval: [edge, Infinity]});\n            }\n\n            var curr = -Infinity;\n            zrUtil.each(pieceList, function (piece) {\n                var interval = piece.interval;\n                if (interval) {\n                    // Fulfill gap.\n                    interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n                    setStop(interval.slice());\n                    curr = interval[1];\n                }\n            }, this);\n\n            return {stops: stops, outerColors: outerColors};\n        }\n\n    });\n\n    /**\n     * Key is this._mode\n     * @type {Object}\n     * @this {module:echarts/component/viusalMap/PiecewiseMode}\n     */\n    var resetMethods = {\n\n        splitNumber: function () {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n            var precision = thisOption.precision;\n            var dataExtent = this.getExtent();\n            var splitNumber = thisOption.splitNumber;\n            splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n            thisOption.splitNumber = splitNumber;\n\n            var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber;\n            // Precision auto-adaption\n            while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n                precision++;\n            }\n            thisOption.precision = precision;\n            splitStep = +splitStep.toFixed(precision);\n\n            var index = 0;\n\n            if (thisOption.minOpen) {\n                pieceList.push({\n                    index: index++,\n                    interval: [-Infinity, dataExtent[0]],\n                    close: [0, 0]\n                });\n            }\n\n            for (\n                var curr = dataExtent[0], len = index + splitNumber;\n                index < len;\n                curr += splitStep\n            ) {\n                var max = index === splitNumber - 1 ? dataExtent[1] : (curr + splitStep);\n\n                pieceList.push({\n                    index: index++,\n                    interval: [curr, max],\n                    close: [1, 1]\n                });\n            }\n\n            if (thisOption.maxOpen) {\n                pieceList.push({\n                    index: index++,\n                    interval: [dataExtent[1], Infinity],\n                    close: [0, 0]\n                });\n            }\n\n            reformIntervals(pieceList);\n\n            zrUtil.each(pieceList, function (piece) {\n                piece.text = this.formatValueText(piece.interval);\n            }, this);\n        },\n\n        categories: function () {\n            var thisOption = this.option;\n            zrUtil.each(thisOption.categories, function (cate) {\n                // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n                // 是否改一致。\n                this._pieceList.push({\n                    text: this.formatValueText(cate, true),\n                    value: cate\n                });\n            }, this);\n\n            // See \"Order Rule\".\n            normalizeReverse(thisOption, this._pieceList);\n        },\n\n        pieces: function () {\n            var thisOption = this.option;\n            var pieceList = this._pieceList;\n\n            zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n\n                if (!zrUtil.isObject(pieceListItem)) {\n                    pieceListItem = {value: pieceListItem};\n                }\n\n                var item = {text: '', index: index};\n\n                if (pieceListItem.label != null) {\n                    item.text = pieceListItem.label;\n                }\n\n                if (pieceListItem.hasOwnProperty('value')) {\n                    var value = item.value = pieceListItem.value;\n                    item.interval = [value, value];\n                    item.close = [1, 1];\n                }\n                else {\n                    // `min` `max` is legacy option.\n                    // `lt` `gt` `lte` `gte` is recommanded.\n                    var interval = item.interval = [];\n                    var close = item.close = [0, 0];\n\n                    var closeList = [1, 0, 1];\n                    var infinityList = [-Infinity, Infinity];\n\n                    var useMinMax = [];\n                    for (var lg = 0; lg < 2; lg++) {\n                        var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n                        for (var i = 0; i < 3 && interval[lg] == null; i++) {\n                            interval[lg] = pieceListItem[names[i]];\n                            close[lg] = closeList[i];\n                            useMinMax[lg] = i === 2;\n                        }\n                        interval[lg] == null && (interval[lg] = infinityList[lg]);\n                    }\n                    useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n                    useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n                    if (__DEV__) {\n                        if (interval[0] > interval[1]) {\n                            console.warn(\n                                'Piece ' + index + 'is illegal: ' + interval\n                                + ' lower bound should not greater then uppper bound.'\n                            );\n                        }\n                    }\n\n                    if (interval[0] === interval[1] && close[0] && close[1]) {\n                        // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n                        // we use value to lift the priority when min === max\n                        item.value = interval[0];\n                    }\n                }\n\n                item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n\n                pieceList.push(item);\n\n            }, this);\n\n            // See \"Order Rule\".\n            normalizeReverse(thisOption, pieceList);\n            // Only pieces\n            reformIntervals(pieceList);\n\n            zrUtil.each(pieceList, function (piece) {\n                var close = piece.close;\n                var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n                piece.text = piece.text || this.formatValueText(\n                    piece.value != null ? piece.value : piece.interval,\n                    false,\n                    edgeSymbols\n                );\n            }, this);\n        }\n    };\n\n    function normalizeReverse(thisOption, pieceList) {\n        var inverse = thisOption.inverse;\n        if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n             pieceList.reverse();\n        }\n    }\n\n    module.exports = PiecewiseModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/PiecewiseModel.js\n// module id = 531\n// module chunks = 2 3","\n\n    var VisualMapView = require('./VisualMapView');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var symbolCreators = require('../../util/symbol');\n    var layout = require('../../util/layout');\n    var helper = require('./helper');\n\n    var PiecewiseVisualMapView = VisualMapView.extend({\n\n        type: 'visualMap.piecewise',\n\n        /**\n         * @protected\n         * @override\n         */\n        doRender: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            var visualMapModel = this.visualMapModel;\n            var textGap = visualMapModel.get('textGap');\n            var textStyleModel = visualMapModel.textStyleModel;\n            var textFont = textStyleModel.getFont();\n            var textFill = textStyleModel.getTextColor();\n            var itemAlign = this._getItemAlign();\n            var itemSize = visualMapModel.itemSize;\n            var viewData = this._getViewData();\n            var endsText = viewData.endsText;\n            var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n\n            endsText && this._renderEndsText(\n                thisGroup, endsText[0], itemSize, showLabel, itemAlign\n            );\n\n            zrUtil.each(viewData.viewPieceList, renderItem, this);\n\n            endsText && this._renderEndsText(\n                thisGroup, endsText[1], itemSize, showLabel, itemAlign\n            );\n\n            layout.box(\n                visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap')\n            );\n\n            this.renderBackground(thisGroup);\n\n            this.positionGroup(thisGroup);\n\n            function renderItem(item) {\n                var piece = item.piece;\n\n                var itemGroup = new graphic.Group();\n                itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n                this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n                var representValue = visualMapModel.getRepresentValue(piece);\n\n                this._createItemSymbol(\n                    itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]\n                );\n\n                if (showLabel) {\n                    var visualState = this.visualMapModel.getValueState(representValue);\n\n                    itemGroup.add(new graphic.Text({\n                        style: {\n                            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n                            y: itemSize[1] / 2,\n                            text: piece.text,\n                            textVerticalAlign: 'middle',\n                            textAlign: itemAlign,\n                            textFont: textFont,\n                            fill: textFill,\n                            opacity: visualState === 'outOfRange' ? 0.5 : 1\n                        }\n                    }));\n                }\n\n                thisGroup.add(itemGroup);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _enableHoverLink: function (itemGroup, pieceIndex) {\n            itemGroup\n                .on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight'))\n                .on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n            function onHoverLink(method) {\n                var visualMapModel = this.visualMapModel;\n\n                visualMapModel.option.hoverLink && this.api.dispatchAction({\n                    type: method,\n                    batch: helper.convertDataIndex(\n                        visualMapModel.findTargetDataIndices(pieceIndex)\n                    )\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _getItemAlign: function () {\n            var visualMapModel = this.visualMapModel;\n            var modelOption = visualMapModel.option;\n\n            if (modelOption.orient === 'vertical') {\n                return helper.getItemAlign(\n                    visualMapModel, this.api, visualMapModel.itemSize\n                );\n            }\n            else { // horizontal, most case left unless specifying right.\n                var align = modelOption.align;\n                if (!align || align === 'auto') {\n                    align = 'left';\n                }\n                return align;\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n            if (!text) {\n                return;\n            }\n\n            var itemGroup = new graphic.Group();\n            var textStyleModel = this.visualMapModel.textStyleModel;\n\n            itemGroup.add(new graphic.Text({\n                style: {\n                    x: showLabel ? (itemAlign === 'right' ? itemSize[0] : 0) : itemSize[0] / 2,\n                    y: itemSize[1] / 2,\n                    textVerticalAlign: 'middle',\n                    textAlign: showLabel ? itemAlign : 'center',\n                    text: text,\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                }\n            }));\n\n            group.add(itemGroup);\n        },\n\n        /**\n         * @private\n         * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n         */\n        _getViewData: function () {\n            var visualMapModel = this.visualMapModel;\n\n            var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n                return {piece: piece, indexInModelPieceList: index};\n            });\n            var endsText = visualMapModel.get('text');\n\n            // Consider orient and inverse.\n            var orient = visualMapModel.get('orient');\n            var inverse = visualMapModel.get('inverse');\n\n            // Order of model pieceList is always [low, ..., high]\n            if (orient === 'horizontal' ? inverse : !inverse) {\n                viewPieceList.reverse();\n            }\n            // Origin order of endsText is [high, low]\n            else if (endsText) {\n                endsText = endsText.slice().reverse();\n            }\n\n            return {viewPieceList: viewPieceList, endsText: endsText};\n        },\n\n        /**\n         * @private\n         */\n        _createItemSymbol: function (group, representValue, shapeParam) {\n            group.add(symbolCreators.createSymbol(\n                this.getControllerVisual(representValue, 'symbol'),\n                shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3],\n                this.getControllerVisual(representValue, 'color')\n            ));\n        },\n\n        /**\n         * @private\n         */\n        _onItemClick: function (piece) {\n            var visualMapModel = this.visualMapModel;\n            var option = visualMapModel.option;\n            var selected = zrUtil.clone(option.selected);\n            var newKey = visualMapModel.getSelectedMapKey(piece);\n\n            if (option.selectedMode === 'single') {\n                selected[newKey] = true;\n                zrUtil.each(selected, function (o, key) {\n                    selected[key] = key === newKey;\n                });\n            }\n            else {\n                selected[newKey] = !selected[newKey];\n            }\n\n            this.api.dispatchAction({\n                type: 'selectDataRange',\n                from: this.uid,\n                visualMapId: this.visualMapModel.id,\n                selected: selected\n            });\n        }\n    });\n\n    module.exports = PiecewiseVisualMapView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMap/PiecewiseView.js\n// module id = 532\n// module chunks = 2 3","/**\n * DataZoom component entry\n */\n\n\n    require('../echarts').registerPreprocessor(\n        require('./visualMap/preprocessor')\n    );\n\n    require('./visualMap/typeDefaulter');\n    require('./visualMap/visualEncoding');\n    require('./visualMap/ContinuousModel');\n    require('./visualMap/ContinuousView');\n    require('./visualMap/visualMapAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMapContinuous.js\n// module id = 533\n// module chunks = 2 3","/**\n * DataZoom component entry\n */\n\n\n    require('../echarts').registerPreprocessor(\n        require('./visualMap/preprocessor')\n    );\n\n    require('./visualMap/typeDefaulter');\n    require('./visualMap/visualEncoding');\n    require('./visualMap/PiecewiseModel');\n    require('./visualMap/PiecewiseView');\n    require('./visualMap/visualMapAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.0@echarts/lib/component/visualMapPiecewise.js\n// module id = 534\n// module chunks = 2 3","exports = module.exports = require(\"../../../node_modules/.0.26.1@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-6811dc38]{position:relative;width:100%;height:90%}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/charts/keyboard2.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"keyboard2.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-6811dc38]{\\n    position: relative;\\n    width: 100%;\\n    height: 90%;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.26.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-6811dc38\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/keyboard2.vue\n// module id = 567\n// module chunks = 3","var Component = require(\"!../../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./keyboard2.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3fc7f8e8\\\"}!../../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./keyboard2.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/keyboard2.vue\n// module id = 605\n// module chunks = 3","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-3fc7f8e8\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/keyboard2.vue\n// module id = 641\n// module chunks = 3","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('keyboardChart2', {\n    attrs: {\n      \"id\": \"apple\",\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-6811dc38\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/charts/keyboard2.vue\n// module id = 651\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./keyboard2.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.2.0.0@vue-style-loader/lib/addStylesClient.js\")(\"8255cbda\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./keyboard2.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/.0.26.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6811dc38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./keyboard2.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.0.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.2.0.0@vue-style-loader!./~/.0.26.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-6811dc38\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/keyboard2.vue\n// module id = 692\n// module chunks = 3","<template>\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n<script>\n    // 引入 ECharts 主模块\n    const echarts = require('echarts/lib/echarts');\n    // 引入柱状图\n    require('echarts/lib/chart/bar');\n    require('echarts/lib/chart/line');\n    // 引入提示框和标题组件\n    require('echarts/lib/component/tooltip');\n    require('echarts/lib/component/title');\n\n    require('echarts/lib/component/visualMap');\n    export default {\n      name: 'barPercent',\n      props: {\n        className: {\n          type: String,\n          default: 'chart'\n        },\n        id: {\n          type: String,\n          default: 'chart'\n        },\n        width: {\n          type: String,\n          default: '200px'\n        },\n        height: {\n          type: String,\n          default: '200px'\n        }\n      },\n      data() {\n        return {};\n      },\n      mounted() {\n        this.initBar();\n      },\n      methods: {\n        initBar() {\n          this.chart = echarts.init(document.getElementById(this.id));\n\n          const xAxisData = [];\n          const data = [];\n          const data2 = [];\n          for (let i = 0; i < 50; i++) {\n            xAxisData.push(i);\n            data.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n            data2.push((Math.sin(i / 5) * (i / 5 + 10) + i / 6) * 3);\n          }\n          this.chart.setOption(\n            {\n              backgroundColor: '#08263a',\n              xAxis: [{\n                show: false,\n                data: xAxisData\n              }, {\n                show: false,\n                data: xAxisData\n              }],\n              visualMap: {\n                show: false,\n                min: 0,\n                max: 50,\n                dimension: 0,\n                inRange: {\n                  color: ['#4a657a', '#308e92', '#b1cfa5', '#f5d69f', '#f5898b', '#ef5055']\n                }\n              },\n              yAxis: {\n                axisLine: {\n                  show: false\n                },\n                axisLabel: {\n                  textStyle: {\n                    color: '#4a657a'\n                  }\n                },\n                splitLine: {\n                  show: true,\n                  lineStyle: {\n                    color: '#08263f'\n                  }\n                },\n                axisTick: {\n                  show: false\n                }\n              },\n              series: [{\n                name: 'back',\n                type: 'bar',\n                data: data2,\n                z: 1,\n                itemStyle: {\n                  normal: {\n                    opacity: 0.4,\n                    barBorderRadius: 5,\n                    shadowBlur: 3,\n                    shadowColor: '#111'\n                  }\n                }\n              }, {\n                name: 'Simulate Shadow',\n                type: 'line',\n                data,\n                z: 2,\n                showSymbol: false,\n                animationDelay: 0,\n                animationEasing: 'linear',\n                animationDuration: 1200,\n                lineStyle: {\n                  normal: {\n                    color: 'transparent'\n                  }\n                },\n                areaStyle: {\n                  normal: {\n                    color: '#08263a',\n                    shadowBlur: 50,\n                    shadowColor: '#000'\n                  }\n                }\n              }, {\n                name: 'front',\n                type: 'bar',\n                data,\n                xAxisIndex: 1,\n                z: 3,\n                itemStyle: {\n                  normal: {\n                    barBorderRadius: 5\n                  }\n                }\n              }],\n              animationEasing: 'elasticOut',\n              animationEasingUpdate: 'elasticOut',\n              animationDelay(idx) {\n                return idx * 20;\n              },\n              animationDelayUpdate(idx) {\n                return idx * 20;\n              }\n            })\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// keyboard2.vue?5d3bcb20","<template>\n  <div class=\"components-container\" style='height:100vh'>\n    <div class='chart-container'>\n       <keyboardChart2 id='apple' height='100%' width='100%' />\n    </div>\n\n  </div>\n</template>\n<script>\n    import keyboardChart2 from 'components/Charts/keyboard2';\n\n    export default {\n      components: { keyboardChart2 }\n    };\n</script>\n\n<style scoped>\n.chart-container{\n    position: relative;\n    width: 100%;\n    height: 90%;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// keyboard2.vue?5f102784"],"sourceRoot":""}